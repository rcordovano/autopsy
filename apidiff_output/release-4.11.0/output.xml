<?xml version="1.0" encoding="iso-8859-1" standalone="no"?>
<!-- Generated by the JDiff Javadoc doclet -->
<!-- (http://www.jdiff.org) -->
<!-- on Fri Apr 16 14:14:47 EDT 2021 -->

<api
  xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
  xsi:noNamespaceSchemaLocation='api.xsd'
  name="C://Users/rcordovano/Work/autopsy/apidiff_output/release-4.11.0/output"
  jdversion="1.1.1">

<!--  Command line arguments =  -doclet jdiff.JDiff -docletpath C://Users/rcordovano/Work/autopsy/thirdparty/jdiff/v-custom/jdiff.jar -doclet jdiff.JDiff -docletpath C://Users/rcordovano/Work/autopsy/thirdparty/jdiff/v-custom/jdiff.jar -apiname C://Users/rcordovano/Work/autopsy/apidiff_output/release-4.11.0/output -sourcepath C://Users/rcordovano/Work/autopsy/apidiff_output/src/release-4.11.0 -->
<package name="org.sleuthkit.datamodel">
  <!-- start class org.sleuthkit.datamodel.AbstractAttribute -->
  <class name="AbstractAttribute" extends="java.lang.Object"
    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="AbstractAttribute" type="org.sleuthkit.datamodel.BlackboardAttribute.Type, int"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructs an attribute with an integer value. The attribute should be
 added to an appropriate artifact.

 @param attributeType The attribute type.
 @param valueInt      The attribute value.

 @throws IllegalArgumentException If the value type of the specified
                                  attribute type is not
                                  TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.INTEGER.]]>
      </doc>
    </constructor>
    <constructor name="AbstractAttribute" type="org.sleuthkit.datamodel.BlackboardAttribute.Type, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructs an attribute with a long/datetime value. The attribute should
 be added to an appropriate artifact.

 @param attributeType The attribute type.
 @param valueLong     The attribute value.

 @throws IllegalArgumentException If the value type of the specified
                                  standard attribute type is not
                                  TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.LONG
                                  or
                                  TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.DATETIME.]]>
      </doc>
    </constructor>
    <constructor name="AbstractAttribute" type="org.sleuthkit.datamodel.BlackboardAttribute.Type, double"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructs an attribute with a double value. The attribute should be
 added to an appropriate artifact.

 @param attributeType The attribute type.
 @param valueDouble   The attribute value.

 @throws IllegalArgumentException If the value type of the specified
                                  attribute type is not
                                  TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.DOUBLE.]]>
      </doc>
    </constructor>
    <constructor name="AbstractAttribute" type="org.sleuthkit.datamodel.BlackboardAttribute.Type, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructs an attribute with a string value. The attribute should be
 added to an appropriate artifact.

 @param attributeType The attribute type.
 @param valueString   The attribute value.

 @throws IllegalArgumentException If the value type of the specified
                                  attribute type is not
                                  TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.STRING.]]>
      </doc>
    </constructor>
    <constructor name="AbstractAttribute" type="org.sleuthkit.datamodel.BlackboardAttribute.Type, byte[]"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructs an attribute with a byte array value. The attribute should be
 added to an appropriate artifact.

 @param attributeType The attribute type.
 @param valueBytes    The attribute value.

 @throws IllegalArgumentException If the value type of the specified
                                  attribute type is not
                                  TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.BYTE.]]>
      </doc>
    </constructor>
    <method name="getDisplayString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the attribute value as a string, formatted as required.

 @return The value as a string.]]>
      </doc>
    </method>
    <method name="getAttributeType" return="org.sleuthkit.datamodel.BlackboardAttribute.Type"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the type of this attribute.

 @return The attribute type.]]>
      </doc>
    </method>
    <method name="getValueType" return="org.sleuthkit.datamodel.BlackboardAttribute.TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the value type.

 @return The value type]]>
      </doc>
    </method>
    <method name="getValueInt" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the value of this attribute. The value is only valid if the
 attribute value type is TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.INTEGER.

 @return The attribute value.]]>
      </doc>
    </method>
    <method name="getValueLong" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the value of this attribute. The value is only valid if the
 attribute value type is TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.LONG.

 @return The attribute value.]]>
      </doc>
    </method>
    <method name="getValueDouble" return="double"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the value of this attribute. The value is only valid if the
 attribute value type is TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.DOUBLE.

 @return The attribute value.]]>
      </doc>
    </method>
    <method name="getValueString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the value of this attribute. The value is only valid if the
 attribute value type is TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.STRING or
 TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.JSON.

 @return The attribute value.]]>
      </doc>
    </method>
    <method name="getValueBytes" return="byte[]"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the value of this attribute. The value is only valid if the
 attribute value type is TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.BYTE.

 @return The attribute value.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Attributes are a name-value pairs. Abstract Attribute provides the base
 functionality for a name value pair with type safety (analogous to a C union)]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.AbstractAttribute -->
  <!-- start class org.sleuthkit.datamodel.AbstractContent -->
  <class name="AbstractContent" extends="java.lang.Object"
    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="org.sleuthkit.datamodel.Content"/>
    <constructor name="AbstractContent" type="org.sleuthkit.datamodel.SleuthkitCase, long, java.lang.String"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </constructor>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getUniquePath" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="hasChildren" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getChildrenCount" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getParent" return="org.sleuthkit.datamodel.Content"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getId" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getChildren" return="java.util.List&lt;org.sleuthkit.datamodel.Content&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets all children of this abstract content, if any.

 @return A list of the children.

 @throws TskCoreException if there was an error querying the case
                          database.]]>
      </doc>
    </method>
    <method name="getChildrenIds" return="java.util.List&lt;java.lang.Long&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the object ids of objects, if any, that are children of this
 abstract content.

 @return A list of the object ids.

 @throws TskCoreException if there was an error querying the case
                          database.]]>
      </doc>
    </method>
    <method name="getDataSource" return="org.sleuthkit.datamodel.Content"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getSleuthkitCase" return="org.sleuthkit.datamodel.SleuthkitCase"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets handle of SleuthkitCase to which this content belongs

 @return the case handle]]>
      </doc>
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="obj" type="java.lang.Object"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="newArtifact" return="org.sleuthkit.datamodel.BlackboardArtifact"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactTypeID" type="int"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="newAnalysisResult" return="org.sleuthkit.datamodel.AnalysisResultAdded"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactType" type="org.sleuthkit.datamodel.BlackboardArtifact.Type"/>
      <param name="score" type="org.sleuthkit.datamodel.Score"/>
      <param name="conclusion" type="java.lang.String"/>
      <param name="configuration" type="java.lang.String"/>
      <param name="justification" type="java.lang.String"/>
      <param name="attributesList" type="java.util.Collection&lt;org.sleuthkit.datamodel.BlackboardAttribute&gt;"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="newDataArtifact" return="org.sleuthkit.datamodel.DataArtifact"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactType" type="org.sleuthkit.datamodel.BlackboardArtifact.Type"/>
      <param name="attributesList" type="java.util.Collection&lt;org.sleuthkit.datamodel.BlackboardAttribute&gt;"/>
      <param name="osAccount" type="org.sleuthkit.datamodel.OsAccount"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="newArtifact" return="org.sleuthkit.datamodel.BlackboardArtifact"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="type" type="org.sleuthkit.datamodel.BlackboardArtifact.ARTIFACT_TYPE"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getArtifacts" return="java.util.ArrayList&lt;org.sleuthkit.datamodel.BlackboardArtifact&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactTypeName" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getArtifacts" return="java.util.ArrayList&lt;org.sleuthkit.datamodel.BlackboardArtifact&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactTypeID" type="int"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getArtifacts" return="java.util.ArrayList&lt;org.sleuthkit.datamodel.BlackboardArtifact&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="type" type="org.sleuthkit.datamodel.BlackboardArtifact.ARTIFACT_TYPE"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getGenInfoArtifact" return="org.sleuthkit.datamodel.BlackboardArtifact"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getGenInfoArtifact" return="org.sleuthkit.datamodel.BlackboardArtifact"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="create" type="boolean"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getGenInfoAttributes" return="java.util.ArrayList&lt;org.sleuthkit.datamodel.BlackboardAttribute&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="attr_type" type="org.sleuthkit.datamodel.BlackboardAttribute.ATTRIBUTE_TYPE"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getAllArtifacts" return="java.util.ArrayList&lt;org.sleuthkit.datamodel.BlackboardArtifact&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getAllAnalysisResults" return="java.util.List&lt;org.sleuthkit.datamodel.AnalysisResult&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getAggregateScore" return="org.sleuthkit.datamodel.Score"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getAnalysisResults" return="java.util.List&lt;org.sleuthkit.datamodel.AnalysisResult&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactType" type="org.sleuthkit.datamodel.BlackboardArtifact.Type"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getArtifactsCount" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactTypeName" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getArtifactsCount" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactTypeID" type="int"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getArtifactsCount" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="type" type="org.sleuthkit.datamodel.BlackboardArtifact.ARTIFACT_TYPE"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getAllArtifactsCount" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getHashSetNames" return="java.util.Set&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="preserveState" type="boolean"/>
    </method>
    <field name="UNKNOWN_ID" type="long"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="parentId" type="long"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <doc>
    <![CDATA[Implements some general methods from the Content interface common across many
 content sub types]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.AbstractContent -->
  <!-- start class org.sleuthkit.datamodel.AbstractFile -->
  <class name="AbstractFile" extends="org.sleuthkit.datamodel.AbstractContent"
    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="AbstractFile" type="org.sleuthkit.datamodel.SleuthkitCase, long, org.sleuthkit.datamodel.TskData.TSK_FS_ATTR_TYPE_ENUM, short, java.lang.String, org.sleuthkit.datamodel.TskData.TSK_DB_FILES_TYPE_ENUM, long, int, org.sleuthkit.datamodel.TskData.TSK_FS_NAME_TYPE_ENUM, org.sleuthkit.datamodel.TskData.TSK_FS_META_TYPE_ENUM, org.sleuthkit.datamodel.TskData.TSK_FS_NAME_FLAG_ENUM, short, long, long, long, long, long, short, int, int, java.lang.String, org.sleuthkit.datamodel.TskData.FileKnown, java.lang.String"
      static="false" final="false" visibility="protected"
      deprecated="Do not make subclasses outside of this package.">
      <doc>
      <![CDATA[Initializes common fields used by AbstactFile implementations (objects in
 tsk_files table)

 @param db         case / db handle where this file belongs to
 @param objId      object id in tsk_objects table
 @param attrType
 @param attrId
 @param name       name field of the file
 @param fileType   type of the file
 @param metaAddr
 @param metaSeq
 @param dirType
 @param metaType
 @param dirFlag
 @param metaFlags
 @param size
 @param ctime
 @param crtime
 @param atime
 @param mtime
 @param modes
 @param uid
 @param gid
 @param md5Hash    md5sum of the file, or null or "NULL" if not present
 @param knownState knownState status of the file, or null if unknown
                   (default)
 @param parentPath

 @deprecated Do not make subclasses outside of this package.]]>
      </doc>
    </constructor>
    <method name="getType" return="org.sleuthkit.datamodel.TskData.TSK_DB_FILES_TYPE_ENUM"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets type of the abstract file as defined in TSK_DB_FILES_TYPE_ENUM

 @return the type of the abstract file]]>
      </doc>
    </method>
    <method name="getAttrType" return="org.sleuthkit.datamodel.TskData.TSK_FS_ATTR_TYPE_ENUM"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the attribute type

 @return attribute type]]>
      </doc>
    </method>
    <method name="getAttributeId" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the attribute id

 @return attribute id]]>
      </doc>
    </method>
    <method name="getCtime" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the change time

 @return change time]]>
      </doc>
    </method>
    <method name="getCtimeAsDate" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the change time as Date (in local timezone)

 @return change time as Date]]>
      </doc>
    </method>
    <method name="getCrtime" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the creation time

 @return creation time]]>
      </doc>
    </method>
    <method name="getCrtimeAsDate" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the creation time as Date (in local timezone)

 @return creation time as Date]]>
      </doc>
    </method>
    <method name="getAtime" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the access time

 @return access time]]>
      </doc>
    </method>
    <method name="getAtimeAsDate" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the access time as Date (in local timezone)

 @return access time as Date]]>
      </doc>
    </method>
    <method name="getMtime" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the modified time

 @return modified time]]>
      </doc>
    </method>
    <method name="getMtimeAsDate" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the modified time as Date (in local timezone)

 @return modified time as Date]]>
      </doc>
    </method>
    <method name="getUid" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the user id

 @return user id]]>
      </doc>
    </method>
    <method name="getGid" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the group id

 @return group id]]>
      </doc>
    </method>
    <method name="getMetaAddr" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the file meta address

 @return Address of the meta data structure]]>
      </doc>
    </method>
    <method name="getMetaSeq" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the file meta address sequence. Only useful with NTFS. Incremented
 each time a structure is re-allocated.

 @return Address of the meta data structure sequence.]]>
      </doc>
    </method>
    <method name="getModesAsString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the file's mode as a user-displayable string

 @return formatted user-displayable string for mode]]>
      </doc>
    </method>
    <method name="getMIMEType" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the MIME type of this file.

 @return The MIME type name or null if the MIME type has not been set.]]>
      </doc>
    </method>
    <method name="setMIMEType"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mimeType" type="java.lang.String"/>
      <doc>
      <![CDATA[Sets the MIME type for this file.

 IMPORTANT: The MIME type is set for this AbstractFile object, but it is
 not saved to the case database until AbstractFile.save is called.

 @param mimeType The MIME type of this file.]]>
      </doc>
    </method>
    <method name="isModeSet" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mode" type="org.sleuthkit.datamodel.TskData.TSK_FS_META_MODE_ENUM"/>
    </method>
    <method name="setMd5Hash"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="md5Hash" type="java.lang.String"/>
      <doc>
      <![CDATA[Sets the MD5 hash for this file.

 IMPORTANT: The MD5 hash is set for this AbstractFile object, but it is
 not saved to the case database until AbstractFile.save is called.

 @param md5Hash The MD5 hash of the file.]]>
      </doc>
    </method>
    <method name="getMd5Hash" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the md5 hash value as calculated, if present

 @return md5 hash string, if it is present or null if it is not]]>
      </doc>
    </method>
    <method name="setSha256Hash"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="sha256Hash" type="java.lang.String"/>
      <doc>
      <![CDATA[Sets the SHA-256 hash for this file.

 IMPORTANT: The SHA-256 hash is set for this AbstractFile object, but it
 is not saved to the case database until AbstractFile.save is called.

 @param sha256Hash The SHA-256 hash of the file.]]>
      </doc>
    </method>
    <method name="getSha256Hash" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the SHA-256 hash value as calculated, if present

 @return SHA-256 hash string, if it is present or null if it is not]]>
      </doc>
    </method>
    <method name="getAttributes" return="java.util.List&lt;org.sleuthkit.datamodel.Attribute&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the attributes of this File

 @return

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="addAttributes"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="attributes" type="java.util.Collection&lt;org.sleuthkit.datamodel.Attribute&gt;"/>
      <param name="caseDbTransaction" type="org.sleuthkit.datamodel.SleuthkitCase.CaseDbTransaction"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Adds a collection of attributes to this file in a single operation within
 a transaction supplied by the caller.

 @param attributes        The collection of attributes.
 @param caseDbTransaction The transaction in the scope of which the
                          operation is to be performed, managed by the
                          caller. if Null is passed in a local transaction
                          will be created and used.

 @throws TskCoreException If an error occurs and the attributes were not
                          added to the artifact.]]>
      </doc>
    </method>
    <method name="setKnown"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="knownState" type="org.sleuthkit.datamodel.TskData.FileKnown"/>
      <doc>
      <![CDATA[Sets the known state for this file. Passed in value will be ignored if it
 is "less" than the current state. A NOTABLE file cannot be downgraded to
 KNOWN.

 IMPORTANT: The known state is set for this AbstractFile object, but it is
 not saved to the case database until AbstractFile.save is called.

 @param knownState The known state of the file.]]>
      </doc>
    </method>
    <method name="getKnown" return="org.sleuthkit.datamodel.TskData.FileKnown"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get "knownState" file status - after running a HashDB ingest on it As
 marked by a knownState file database, such as NSRL

 @return file knownState status enum value]]>
      </doc>
    </method>
    <method name="getNameExtension" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the extension part of the filename, if there is one. We assume that
 extensions only have ASCII alphanumeric chars

 @return The filename extension in lowercase (not including the period) or
         empty string if there is no extension]]>
      </doc>
    </method>
    <method name="getSize" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get size of the file

 @return file size in bytes]]>
      </doc>
    </method>
    <method name="getParentPath" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get path of the parent of this file

 @return path string of the parent]]>
      </doc>
    </method>
    <method name="getDataSource" return="org.sleuthkit.datamodel.Content"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the data source for this file.

 @return The data source.

 @throws TskCoreException if there was an error querying the case
                          database.

 To obtain the data source as a DataSource object, use:
 getSleuthkitCase().getDataSource(getDataSourceObjectId());]]>
      </doc>
    </method>
    <method name="getDataSourceObjectId" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the object id of the data source for this file.

 @return The object id of the data source.]]>
      </doc>
    </method>
    <method name="getRanges" return="java.util.List&lt;org.sleuthkit.datamodel.TskFileRange&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets file ranges associated with the file. File ranges are objects in
 tsk_file_layout table Any file type (especially unallocated) may have 1
 or more block ranges associated with it

 @return list of file layout ranges

 @throws TskCoreException exception thrown if critical error occurred
                          within tsk core]]>
      </doc>
    </method>
    <method name="convertToImgOffset" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="fileOffset" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Convert an internal offset to an image offset

 @param fileOffset the byte offset in this layout file to map

 @return the corresponding byte offset in the image where the file offset
         is located, or -1 if the file has no range layout information or
         if the fileOffset is larger than file size

 @throws TskCoreException exception thrown if critical error occurred
                          within tsk core and offset could not be
                          converted]]>
      </doc>
    </method>
    <method name="convertToImgRanges" return="java.util.List&lt;org.sleuthkit.datamodel.TskFileRange&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="fileOffset" type="long"/>
      <param name="length" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Converts a file offset and length into a series of TskFileRange objects
 whose offsets are relative to the image. This method will only work on
 files with layout ranges.

 @param fileOffset The byte offset in this file to map.
 @param length     The length of bytes starting at fileOffset requested.

 @return The TskFileRange objects whose offsets are relative to the image.
         The sum total of lengths in these ranges will equal the length
         requested or will run until the end of this file.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="isVirtual" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[is this a virtual file or directory that was created by The Sleuth Kit or
 Autopsy for general structure and organization.

 @return true if it's virtual, false otherwise]]>
      </doc>
    </method>
    <method name="isFile" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Is this object a file. Should return true for all types of files,
 including file system, logical, derived, layout, and slack space for
 files.

 @return true if a file, false otherwise]]>
      </doc>
    </method>
    <method name="isDir" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Is this object a directory. Should return true for file system folders
 and virtual folders.

 @return true if directory, false otherwise]]>
      </doc>
    </method>
    <method name="isRoot" return="boolean"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Is this a root of a file system

 @return true if root of a file system, false otherwise]]>
      </doc>
    </method>
    <method name="createNonUniquePath" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="uniquePath" type="java.lang.String"/>
      <doc>
      <![CDATA[@param uniquePath the unique path to an AbstractFile (or subclass)
                   usually obtained by a call to
                   AbstractFile.getUniquePath.

 @return the path to to an AbstractFile (or subclass) with the image and
         volume path segments removed.]]>
      </doc>
    </method>
    <method name="listFiles" return="java.util.List&lt;org.sleuthkit.datamodel.AbstractFile&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[@return a list of AbstractFiles that are the children of this Directory.
         Only returns children of type TskData.TSK_DB_FILES_TYPE_ENUM.FS.

 @throws org.sleuthkit.datamodel.TskCoreException]]>
      </doc>
    </method>
    <method name="getMetaType" return="org.sleuthkit.datamodel.TskData.TSK_FS_META_TYPE_ENUM"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the meta data type

 @return meta data type]]>
      </doc>
    </method>
    <method name="getMetaTypeAsString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDirType" return="org.sleuthkit.datamodel.TskData.TSK_FS_NAME_TYPE_ENUM"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the directory type id

 @return directory type id]]>
      </doc>
    </method>
    <method name="getDirTypeAsString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="isDirNameFlagSet" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="flag" type="org.sleuthkit.datamodel.TskData.TSK_FS_NAME_FLAG_ENUM"/>
      <doc>
      <![CDATA[@param flag the TSK_FS_NAME_FLAG_ENUM to check

 @return true if the given flag is set in this FsContent object.]]>
      </doc>
    </method>
    <method name="getDirFlagAsString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return a string representation of the directory name flag (type
         TSK_FS_NAME_FLAG_ENUM)]]>
      </doc>
    </method>
    <method name="getMetaFlagsAsString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return a string representation of the meta flags]]>
      </doc>
    </method>
    <method name="isMetaFlagSet" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="metaFlag" type="org.sleuthkit.datamodel.TskData.TSK_FS_META_FLAG_ENUM"/>
      <doc>
      <![CDATA[@param metaFlag the TSK_FS_META_FLAG_ENUM to check

 @return true if the given meta flag is set in this FsContent object.]]>
      </doc>
    </method>
    <method name="read" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="public"
      deprecated="not deprecated">
      <param name="buf" type="byte[]"/>
      <param name="offset" type="long"/>
      <param name="len" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="readInt" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="buf" type="byte[]"/>
      <param name="offset" type="long"/>
      <param name="len" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Internal custom read (non-local) method that child classes can implement

 @param buf    buffer to read into
 @param offset start reading position in the file
 @param len    number of bytes to read

 @return number of bytes read

 @throws TskCoreException exception thrown when file could not be read]]>
      </doc>
    </method>
    <method name="readLocal" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
      <param name="buf" type="byte[]"/>
      <param name="offset" type="long"/>
      <param name="len" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Local file path read support

 @param buf    buffer to read into
 @param offset start reading position in the file
 @param len    number of bytes to read

 @return number of bytes read

 @throws TskCoreException exception thrown when file could not be read]]>
      </doc>
    </method>
    <method name="getLocalPath" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get local relative to case db path of the file

 @return local file path if set]]>
      </doc>
    </method>
    <method name="getLocalAbsPath" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get local absolute path of the file, if localPath has been set

 @return local absolute file path if local path has been set, or null]]>
      </doc>
    </method>
    <method name="exists" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Check if the file exists. If non-local always true, if local, checks if
 actual local path exists

 @return true if the file exists, false otherwise]]>
      </doc>
    </method>
    <method name="canRead" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Check if the file exists and is readable. If non-local (e.g. within an
 image), always true, if local, checks if actual local path exists and is
 readable

 @return true if the file is readable]]>
      </doc>
    </method>
    <method name="close"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="finalize"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <exception name="Throwable" type="java.lang.Throwable"/>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="preserveState" type="boolean"/>
    </method>
    <method name="isMimeType" return="org.sleuthkit.datamodel.AbstractFile.MimeMatchEnum"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="mimeTypes" type="java.util.SortedSet&lt;java.lang.String&gt;"/>
      <doc>
      <![CDATA[Determines if this file's type is one of the ones passed in. Uses the
 blackboard attribute for file type.

 @param mimeTypes Set of file types to compare against

 @return]]>
      </doc>
    </method>
    <method name="save"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Saves the editable properties of this file to the case database, e.g.,
 the MIME type, MD5 hash, and known state.

 @throws TskCoreException if there is an error saving the editable file
                          properties to the case database.]]>
      </doc>
    </method>
    <method name="save"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="transaction" type="org.sleuthkit.datamodel.SleuthkitCase.CaseDbTransaction"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Saves the editable properties of this file to the case database, e.g.,
 the MIME type, MD5 hash, and known state, in the context of a given case
 database transaction.

 @param transaction The transaction.

 @throws TskCoreException if there is an error saving the editable file
                          properties to the case database.]]>
      </doc>
    </method>
    <method name="getOwnerUid" return="java.util.Optional&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the owner uid.

 Note this is a string uid, typically a Windows SID. This is different
 from the numeric uid commonly found on Unix based file systems.

 @return Optional with owner uid.]]>
      </doc>
    </method>
    <method name="getOsAccountObjectId" return="java.util.Optional&lt;java.lang.Long&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the Object Id of the owner account.

 @return Optional with Object Id of the OsAccount, or Optional.empty.]]>
      </doc>
    </method>
    <method name="newArtifact" return="org.sleuthkit.datamodel.BlackboardArtifact"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactTypeID" type="int"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getAttrId" return="short"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="Use getAttributeId() method instead as it returns integer
 instead of short.">
      <doc>
      <![CDATA[Get the attribute id

 @return attribute id

 @deprecated Use getAttributeId() method instead as it returns integer
 instead of short.]]>
      </doc>
    </method>
    <method name="setLocalPath"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="Do not make subclasses outside of this package.">
      <param name="localPath" type="java.lang.String"/>
      <param name="isAbsolute" type="boolean"/>
      <doc>
      <![CDATA[Set local path for the file, as stored in db tsk_files_path, relative to
 the case db path or an absolute path. When set, subsequent invocations of
 read() will read the file in the local path.

 @param localPath  local path to be set
 @param isAbsolute true if the path is absolute, false if relative to the
                   case db

 @deprecated Do not make subclasses outside of this package.]]>
      </doc>
    </method>
    <method name="epochToTime" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="deprecated, no comment">
      <param name="epoch" type="long"/>
      <doc>
      <![CDATA[Return the epoch into string in ISO 8601 dateTime format

 @param epoch time in seconds

 @return formatted date time string as "yyyy-MM-dd HH:mm:ss"

 @deprecated]]>
      </doc>
    </method>
    <method name="epochToTime" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="deprecated, no comment">
      <param name="epoch" type="long"/>
      <param name="tzone" type="java.util.TimeZone"/>
      <doc>
      <![CDATA[Return the epoch into string in ISO 8601 dateTime format, in the given
 timezone

 @param epoch time in seconds
 @param tzone time zone

 @return formatted date time string as "yyyy-MM-dd HH:mm:ss"

 @deprecated]]>
      </doc>
    </method>
    <method name="timeToEpoch" return="long"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="time" type="java.lang.String"/>
      <doc>
      <![CDATA[Convert from ISO 8601 formatted date time string to epoch time in seconds

 @param time formatted date time string as "yyyy-MM-dd HH:mm:ss"

 @return epoch time in seconds]]>
      </doc>
    </method>
    <field name="fileType" type="org.sleuthkit.datamodel.TskData.TSK_DB_FILES_TYPE_ENUM"
      transient="false" volatile="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="dirType" type="org.sleuthkit.datamodel.TskData.TSK_FS_NAME_TYPE_ENUM"
      transient="false" volatile="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="metaType" type="org.sleuthkit.datamodel.TskData.TSK_FS_META_TYPE_ENUM"
      transient="false" volatile="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="dirFlag" type="org.sleuthkit.datamodel.TskData.TSK_FS_NAME_FLAG_ENUM"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="metaFlags" type="java.util.Set&lt;org.sleuthkit.datamodel.TskData.TSK_FS_META_FLAG_ENUM&gt;"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="size" type="long"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="metaAddr" type="long"
      transient="false" volatile="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="ctime" type="long"
      transient="false" volatile="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="crtime" type="long"
      transient="false" volatile="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="atime" type="long"
      transient="false" volatile="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="mtime" type="long"
      transient="false" volatile="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="metaSeq" type="int"
      transient="false" volatile="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="uid" type="int"
      transient="false" volatile="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="gid" type="int"
      transient="false" volatile="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="attrId" type="int"
      transient="false" volatile="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="attrType" type="org.sleuthkit.datamodel.TskData.TSK_FS_ATTR_TYPE_ENUM"
      transient="false" volatile="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="modes" type="java.util.Set&lt;org.sleuthkit.datamodel.TskData.TSK_FS_META_MODE_ENUM&gt;"
      transient="false" volatile="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="parentPath" type="java.lang.String"
      transient="false" volatile="false"
      static="false" final="true" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="knownState" type="org.sleuthkit.datamodel.TskData.FileKnown"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <doc>
      <![CDATA[knownState status in database]]>
      </doc>
    </field>
    <field name="md5Hash" type="java.lang.String"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <field name="sha256Hash" type="java.lang.String"
      transient="false" volatile="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
    </field>
    <doc>
    <![CDATA[An abstract base class for classes that represent files that have been added
 to the case.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.AbstractFile -->
  <!-- start class org.sleuthkit.datamodel.AbstractFile.MimeMatchEnum -->
  <class name="AbstractFile.MimeMatchEnum" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.AbstractFile.MimeMatchEnum&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.AbstractFile.MimeMatchEnum[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.AbstractFile.MimeMatchEnum"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <doc>
    <![CDATA[Possible return values for comparing a file to a list of mime types]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.AbstractFile.MimeMatchEnum -->
  <!-- start class org.sleuthkit.datamodel.Account -->
  <class name="Account" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="getTypeSpecificID" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets unique identifier (assigned by a provider) for the account. Example
 includes an email address, a phone number, or a website username.

 @return type specific account id.]]>
      </doc>
    </method>
    <method name="getAccountType" return="org.sleuthkit.datamodel.Account.Type"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the account type

 @return account type]]>
      </doc>
    </method>
    <method name="getAccountID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets a case-specific unique identifier for this account (from the
 database)

 @return unique row id.]]>
      </doc>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="obj" type="java.lang.Object"/>
    </method>
    <doc>
    <![CDATA[An entity that has a type and a unique (within that type) identifier .
 Example types include a Bank Account, Credit Card, Email address, Phone
 number, phone, Application, Web-site login, etc. Accounts are unique to the
 case.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.Account -->
  <!-- start class org.sleuthkit.datamodel.Account.Type -->
  <class name="Account.Type" extends="java.lang.Object"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <constructor name="Type" type="java.lang.String, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructs an Account type.

 @param typeName    The type name.
 @param displayName The display name for the type.]]>
      </doc>
    </constructor>
    <method name="getTypeName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the type name

 @return The type name.]]>
      </doc>
    </method>
    <method name="getDisplayName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the display name

 @return The display name.]]>
      </doc>
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="that" type="java.lang.Object"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <field name="CREDIT_CARD" type="org.sleuthkit.datamodel.Account.Type"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="DEVICE" type="org.sleuthkit.datamodel.Account.Type"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="PHONE" type="org.sleuthkit.datamodel.Account.Type"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="EMAIL" type="org.sleuthkit.datamodel.Account.Type"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="FACEBOOK" type="org.sleuthkit.datamodel.Account.Type"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="TWITTER" type="org.sleuthkit.datamodel.Account.Type"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="INSTAGRAM" type="org.sleuthkit.datamodel.Account.Type"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="WHATSAPP" type="org.sleuthkit.datamodel.Account.Type"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="MESSAGING_APP" type="org.sleuthkit.datamodel.Account.Type"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="WEBSITE" type="org.sleuthkit.datamodel.Account.Type"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="IMO" type="org.sleuthkit.datamodel.Account.Type"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="LINE" type="org.sleuthkit.datamodel.Account.Type"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="SKYPE" type="org.sleuthkit.datamodel.Account.Type"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="TANGO" type="org.sleuthkit.datamodel.Account.Type"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="TEXTNOW" type="org.sleuthkit.datamodel.Account.Type"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="THREEMA" type="org.sleuthkit.datamodel.Account.Type"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="VIBER" type="org.sleuthkit.datamodel.Account.Type"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="XENDER" type="org.sleuthkit.datamodel.Account.Type"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="ZAPYA" type="org.sleuthkit.datamodel.Account.Type"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="SHAREIT" type="org.sleuthkit.datamodel.Account.Type"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="PREDEFINED_ACCOUNT_TYPES" type="java.util.List&lt;org.sleuthkit.datamodel.Account.Type&gt;"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
  </class>
  <!-- end class org.sleuthkit.datamodel.Account.Type -->
  <!-- start class org.sleuthkit.datamodel.AccountDeviceInstance -->
  <class name="AccountDeviceInstance" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="getAccount" return="org.sleuthkit.datamodel.Account"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns the underlying Account
 
 @return account]]>
      </doc>
    </method>
    <method name="getDeviceId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns the device Id the Account existed on
 
 @return device id]]>
      </doc>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="obj" type="java.lang.Object"/>
    </method>
    <doc>
    <![CDATA[Encapsulates an Account existing on a specific device.
 
 There is a 1:M:N relationship between 
 Account, AccountDeviceInstance &  AccountFileInstance]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.AccountDeviceInstance -->
  <!-- start class org.sleuthkit.datamodel.AccountFileInstance -->
  <class name="AccountFileInstance" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="getAttribute" return="org.sleuthkit.datamodel.BlackboardAttribute"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="attrType" type="org.sleuthkit.datamodel.BlackboardAttribute.ATTRIBUTE_TYPE"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the first occurrence of an attribute by type.

 @param attrType The attribute type.

 @return The attribute, or null if no attribute of the given type exists.

 @throws TskCoreException if an there is an error getting the attribute.]]>
      </doc>
    </method>
    <method name="addAttribute"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="bbatr" type="org.sleuthkit.datamodel.BlackboardAttribute"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Adds an attribute. It is faster to add multiple attributes as a
 collection using addAttributes().

 @param bbatr The attribute to add.

 @throws TskCoreException if an there is an error adding the attribute.]]>
      </doc>
    </method>
    <method name="addAttributes"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="bbatrs" type="java.util.Collection&lt;org.sleuthkit.datamodel.BlackboardAttribute&gt;"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Adds a collection of attributes

 @param bbatrs The collection of attributes to add.

 @throws TskCoreException if an there is an error adding the attributes.]]>
      </doc>
    </method>
    <method name="getAccount" return="org.sleuthkit.datamodel.Account"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the underlying Account for this instance.

 @return The account.

 @throws TskCoreException if an there is an error getting the account.]]>
      </doc>
    </method>
    <method name="getFile" return="org.sleuthkit.datamodel.Content"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the source content (data source or file within a
 data source) of the underlying Account artifact for this instance.
 
 @return The source content.
 
 @throws TskCoreException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[An instance of an Account in a specific file. An Account may be found in
 multiple Content objects (such as different databases) on a single device.
 There is a 1:N relationship between Account objects and AccountFileInstance
 objects. A TSK_ACCOUNT artifact is created for every account file instance.

 AccountFileInstances can optionally have BlackboardAttributes to store more
 details.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.AccountFileInstance -->
  <!-- start class org.sleuthkit.datamodel.AccountPair -->
  <class name="AccountPair" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="getFirst" return="org.sleuthkit.datamodel.AccountDeviceInstance"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the first AccountDeviceInstance. First doesn't imply order and is
 simply used to distinguish the two accounts.

 @return The first AccountDeviceInstance.]]>
      </doc>
    </method>
    <method name="getSecond" return="org.sleuthkit.datamodel.AccountDeviceInstance"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the second AccountDeviceInstance. Second doesn't imply order and is
 simply used to distinguish the two accounts.

 @return The second AccountDeviceInstance.]]>
      </doc>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="other" type="java.lang.Object"/>
    </method>
    <doc>
    <![CDATA[Class representing an unordered pair of account device instances. <a,b> is
 same as <b,a>. First and second are used to distinguish the two accounts, but
 do not imply an order.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.AccountPair -->
  <!-- start interface org.sleuthkit.datamodel.AddDataSourceCallbacks -->
  <interface name="AddDataSourceCallbacks"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="onFilesAdded"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="fileObjectIds" type="java.util.List&lt;java.lang.Long&gt;"/>
      <doc>
      <![CDATA[Call to add a set of file object IDs that have been added to the database.
 
 @param fileObjectIds List of file object IDs.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Provides callbacks at key points during the process of adding a data source to a case database.]]>
    </doc>
  </interface>
  <!-- end interface org.sleuthkit.datamodel.AddDataSourceCallbacks -->
  <!-- start class org.sleuthkit.datamodel.AggregateScoresChangedEvent -->
  <class name="AggregateScoresChangedEvent" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <implements name="org.sleuthkit.datamodel.TskDataSourceEvent"/>
    <implements name="org.sleuthkit.datamodel.TskEvent"/>
    <method name="getDataSourceId" return="java.util.Optional&lt;java.lang.Long&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getScoreChanges" return="&lt;any&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[Event to indicate that aggregate score of objects has changed.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.AggregateScoresChangedEvent -->
  <!-- start class org.sleuthkit.datamodel.AnalysisResult -->
  <class name="AnalysisResult" extends="org.sleuthkit.datamodel.BlackboardArtifact"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getConclusion" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns analysis result conclusion.

 @return Conclusion, returns an empty string if not set.]]>
      </doc>
    </method>
    <method name="getScore" return="org.sleuthkit.datamodel.Score"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns relevance score based on conclusion

 @return Score.]]>
      </doc>
    </method>
    <method name="getConfiguration" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns configuration used in analysis.

 @return Configuration, returns an empty string if not set.]]>
      </doc>
    </method>
    <method name="getJustification" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns justification for conclusion

 @return justification, returns an empty string if not set.]]>
      </doc>
    </method>
    <method name="setIgnoreResult"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ignore" type="boolean"/>
      <doc>
      <![CDATA[Sets if this result is to be ignored when calculating
 the aggregate score of the parent object. 

 @param ignore if the result should be ignored or not.]]>
      </doc>
    </method>
    <method name="ignoreResult" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Checks if this result is to be ignored.

 @return true is the result should should be ignored, false otherwise.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[An AnalysisResult represents the outcome of some analysis technique
 that was applied to some data (i.e. Content) to determine the data's
 relevance.  The result should have a conclusion and a relevance 
 score. The score of the AnalysisResult will be used to calculate
 the aggregate score of the parent data.  Additional metadata can be
 stored as BlackboardAttributes.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.AnalysisResult -->
  <!-- start class org.sleuthkit.datamodel.AnalysisResultAdded -->
  <class name="AnalysisResultAdded" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getAnalysisResult" return="org.sleuthkit.datamodel.AnalysisResult"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAggregateScore" return="org.sleuthkit.datamodel.Score"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[This class encapsulates an analysis result added to Content, and the content's 
 aggregate score upon adding the analysis result.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.AnalysisResultAdded -->
  <!-- start class org.sleuthkit.datamodel.Attribute -->
  <class name="Attribute" extends="org.sleuthkit.datamodel.AbstractAttribute"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="Attribute" type="org.sleuthkit.datamodel.BlackboardAttribute.Type, int"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException"/>
      <doc>
      <![CDATA[Constructs an attribute with an integer value. The attribute should be
 added to an appropriate artifact.

 @param attributeType The attribute type.
 @param valueInt      The attribute value.

 @throws IllegalArgumentException If the value type of the specified
                                  attribute type is not
                                  TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.INTEGER.]]>
      </doc>
    </constructor>
    <constructor name="Attribute" type="org.sleuthkit.datamodel.BlackboardAttribute.Type, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException"/>
      <doc>
      <![CDATA[Constructs an attribute with a long/datetime value. The attribute should
 be added to an appropriate artifact.

 @param attributeType The attribute type.
 @param valueLong     The attribute value.

 @throws IllegalArgumentException If the value type of the specified
                                  standard attribute type is not
                                  TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.LONG
                                  or
                                  TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.DATETIME.]]>
      </doc>
    </constructor>
    <constructor name="Attribute" type="org.sleuthkit.datamodel.BlackboardAttribute.Type, double"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException"/>
      <doc>
      <![CDATA[Constructs an attribute with a double value. The attribute should be
 added to an appropriate artifact.

 @param attributeType The attribute type.
 @param valueDouble   The attribute value.

 @throws IllegalArgumentException If the value type of the specified
                                  attribute type is not
                                  TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.DOUBLE.]]>
      </doc>
    </constructor>
    <constructor name="Attribute" type="org.sleuthkit.datamodel.BlackboardAttribute.Type, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException"/>
      <doc>
      <![CDATA[Constructs an attribute with a string value. The attribute should be
 added to an appropriate artifact.

 @param attributeType The attribute type.
 @param valueString   The attribute value.

 @throws IllegalArgumentException If the value type of the specified
                                  attribute type is not
                                  TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.STRING.]]>
      </doc>
    </constructor>
    <constructor name="Attribute" type="org.sleuthkit.datamodel.BlackboardAttribute.Type, byte[]"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException"/>
      <doc>
      <![CDATA[Constructs an attribute with a byte array value. The attribute should be
 added to an appropriate artifact.

 @param attributeType The attribute type.
 @param valueBytes    The attribute value.

 @throws IllegalArgumentException If the value type of the specified
                                  attribute type is not
                                  TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.BYTE.]]>
      </doc>
    </constructor>
    <method name="getAttributeParentId" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the parent Id of this attribute. A parent is defined as the Object
 to which this attribute is associated with. Eg: For a file Attribute the
 attribute parent id would be the file object id.

 @return]]>
      </doc>
    </method>
    <method name="getId" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns the Id of the Attribute. 
 @return]]>
      </doc>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="that" type="java.lang.Object"/>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[This is a concrete implementation of a simple Attribute Type.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.Attribute -->
  <!-- start class org.sleuthkit.datamodel.Blackboard -->
  <class name="Blackboard" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="postArtifact"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifact" type="org.sleuthkit.datamodel.BlackboardArtifact"/>
      <param name="moduleName" type="java.lang.String"/>
      <exception name="Blackboard.BlackboardException" type="org.sleuthkit.datamodel.Blackboard.BlackboardException"/>
      <doc>
      <![CDATA[Posts the artifact. The artifact should be complete (all attributes have
 been added) before being posted. Posting the artifact includes making any
 timeline events that may be derived from it, and broadcasting a
 notification that the artifact is ready for further analysis.

 @param artifact   The artifact to be posted.
 @param moduleName The name of the module that is posting the artifacts.

 @throws BlackboardException If there is a problem posting the artifact.]]>
      </doc>
    </method>
    <method name="postArtifacts"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifacts" type="java.util.Collection&lt;org.sleuthkit.datamodel.BlackboardArtifact&gt;"/>
      <param name="moduleName" type="java.lang.String"/>
      <exception name="Blackboard.BlackboardException" type="org.sleuthkit.datamodel.Blackboard.BlackboardException"/>
      <doc>
      <![CDATA[Posts a Collection of artifacts. The artifacts should be complete (all
 attributes have been added) before being posted. Posting the artifacts
 includes making any events that may be derived from them, and
 broadcasting notifications that the artifacts are ready for further
 analysis.


 @param artifacts  The artifacts to be posted .
 @param moduleName The name of the module that is posting the artifacts.


 @throws BlackboardException If there is a problem posting the artifacts.]]>
      </doc>
    </method>
    <method name="getOrAddArtifactType" return="org.sleuthkit.datamodel.BlackboardArtifact.Type"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="typeName" type="java.lang.String"/>
      <param name="displayName" type="java.lang.String"/>
      <exception name="Blackboard.BlackboardException" type="org.sleuthkit.datamodel.Blackboard.BlackboardException"/>
      <doc>
      <![CDATA[Gets an artifact type, creating it if it does not already exist. Use this
 method to define custom artifact types.

 This assumes that the artifact type is of category DATA_ARTIFACT.

 @param typeName    The type name of the artifact type.
 @param displayName The display name of the artifact type.

 @return A type object representing the artifact type.

 @throws BlackboardException If there is a problem getting or adding the
                             artifact type.]]>
      </doc>
    </method>
    <method name="getOrAddArtifactType" return="org.sleuthkit.datamodel.BlackboardArtifact.Type"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="typeName" type="java.lang.String"/>
      <param name="displayName" type="java.lang.String"/>
      <param name="category" type="org.sleuthkit.datamodel.BlackboardArtifact.Category"/>
      <exception name="Blackboard.BlackboardException" type="org.sleuthkit.datamodel.Blackboard.BlackboardException"/>
      <doc>
      <![CDATA[Gets an artifact type, creating it if it does not already exist. Use this
 method to define custom artifact types.

 @param typeName    The type name of the artifact type.
 @param displayName The display name of the artifact type.
 @param category    The artifact type category.

 @return A type object representing the artifact type.

 @throws BlackboardException If there is a problem getting or adding the
                             artifact type.]]>
      </doc>
    </method>
    <method name="newAnalysisResult" return="org.sleuthkit.datamodel.AnalysisResultAdded"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactType" type="org.sleuthkit.datamodel.BlackboardArtifact.Type"/>
      <param name="objId" type="long"/>
      <param name="dataSourceObjId" type="java.lang.Long"/>
      <param name="score" type="org.sleuthkit.datamodel.Score"/>
      <param name="conclusion" type="java.lang.String"/>
      <param name="configuration" type="java.lang.String"/>
      <param name="justification" type="java.lang.String"/>
      <param name="attributesList" type="java.util.Collection&lt;org.sleuthkit.datamodel.BlackboardAttribute&gt;"/>
      <param name="transaction" type="org.sleuthkit.datamodel.SleuthkitCase.CaseDbTransaction"/>
      <exception name="Blackboard.BlackboardException" type="org.sleuthkit.datamodel.Blackboard.BlackboardException"/>
      <doc>
      <![CDATA[Adds new analysis result artifact.

 @param artifactType    Type of analysis result artifact to create.
 @param objId           Object id of parent.
 @param dataSourceObjId Data source object id, may be null.
 @param score	          Score associated with this analysis result.
 @param conclusion      Conclusion of the analysis, may be null or an
                        empty string.
 @param configuration   Configuration associated with this analysis, may
                        be null or an empty string.
 @param justification   Justification, may be null or an empty string.
 @param attributesList  Attributes to be attached to this analysis result
                        artifact.
 @param transaction     DB transaction to use.

 @return AnalysisResultAdded The analysis return added and the
         current aggregate score of content.

 @throws BlackboardException exception thrown if a critical error occurs
                             within TSK core]]>
      </doc>
    </method>
    <method name="deleteAnalysisResult" return="org.sleuthkit.datamodel.Score"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="analysisResult" type="org.sleuthkit.datamodel.AnalysisResult"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Delete the specified analysis result.

 Deletes the result from blackboard_artifacts and tsk_analysis_results, and recalculates and
 updates the aggregate score of the content. Fires an event to indicate that
 the analysis result has been deleted and that the score of the item has
 changed.

 @param analysisResult AnalysisResult to delete.

 @return New score of the content.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="deleteAnalysisResult" return="org.sleuthkit.datamodel.Score"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactObjId" type="long"/>
      <param name="transaction" type="org.sleuthkit.datamodel.SleuthkitCase.CaseDbTransaction"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Delete the specified analysis result.

 Deletes the result from blackboard_artifacts and tsk_analysis_results, and recalculates and
 updates the aggregate score of the content. 
 @param artifactObjId Artifact Obj Id to be deleted
 @param transaction
 @return
 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getAnalysisResults" return="java.util.List&lt;org.sleuthkit.datamodel.AnalysisResult&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="objId" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all analysis results for a given object.

 @param objId Object id.
	
 @return list of analysis results.

 @throws TskCoreException exception thrown if a critical error occurs
                          within TSK core.]]>
      </doc>
    </method>
    <method name="getAnalysisResults" return="java.util.List&lt;org.sleuthkit.datamodel.AnalysisResult&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="objId" type="long"/>
      <param name="artifactTypeId" type="int"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get analysis results of the given type, for the given object.

 @param objId Object id.
 @param artifactTypeId Result type to get.
	
 @return list of analysis results.

 @throws TskCoreException exception thrown if a critical error occurs
                          within TSK core.]]>
      </doc>
    </method>
    <method name="getAnalysisResultsWhere" return="java.util.List&lt;org.sleuthkit.datamodel.AnalysisResult&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="whereClause" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all analysis results matching the given where sub-clause.
 

 @param whereClause Where sub clause, specifies conditions to match.  
 @return list of analysis results.

 @throws TskCoreException exception thrown if a critical error occurs
                          within TSK core.]]>
      </doc>
    </method>
    <method name="getDataArtifacts" return="java.util.List&lt;org.sleuthkit.datamodel.DataArtifact&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactTypeID" type="int"/>
      <param name="dataSourceObjId" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all data artifacts of a given type for a given data source.

 @param artifactTypeID  Artifact type to get.
 @param dataSourceObjId Data source to look under.

 @return List of data artifacts. May be an empty list.

 @throws TskCoreException exception thrown if a critical error occurs
                          within TSK core.]]>
      </doc>
    </method>
    <method name="getDataArtifacts" return="java.util.List&lt;org.sleuthkit.datamodel.DataArtifact&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactTypeID" type="int"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all data artifacts of a given type.

 @param artifactTypeID  Artifact type to get.

 @return List of data artifacts. May be an empty list.

 @throws TskCoreException exception thrown if a critical error occurs
                          within TSK core.]]>
      </doc>
    </method>
    <method name="getOrAddAttributeType" return="org.sleuthkit.datamodel.BlackboardAttribute.Type"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="typeName" type="java.lang.String"/>
      <param name="valueType" type="org.sleuthkit.datamodel.BlackboardAttribute.TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE"/>
      <param name="displayName" type="java.lang.String"/>
      <exception name="Blackboard.BlackboardException" type="org.sleuthkit.datamodel.Blackboard.BlackboardException"/>
      <doc>
      <![CDATA[Gets an attribute type, creating it if it does not already exist. Use
 this method to define custom attribute types.

 @param typeName    The type name of the attribute type.
 @param valueType   The value type of the attribute type.
 @param displayName The display name of the attribute type.

 @return A type object representing the attribute type.

 @throws BlackboardException If there is a problem getting or adding the
                             attribute type.]]>
      </doc>
    </method>
    <method name="getArtifactTypesInUse" return="java.util.List&lt;org.sleuthkit.datamodel.BlackboardArtifact.Type&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="dataSourceObjId" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the list of all artifact types in use for the given data source.
 Gets both standard and custom types.

 @param dataSourceObjId data source object id

 @return The list of artifact types

 @throws TskCoreException exception thrown if a critical error occurred
                          within tsk core]]>
      </doc>
    </method>
    <method name="getArtifactsCount" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactTypeID" type="int"/>
      <param name="dataSourceObjId" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get count of all blackboard artifacts of a given type for the given data
 source. Does not include rejected artifacts.

 @param artifactTypeID  artifact type id (must exist in database)
 @param dataSourceObjId data source object id

 @return count of blackboard artifacts

 @throws TskCoreException exception thrown if a critical error occurs
                          within TSK core]]>
      </doc>
    </method>
    <method name="getArtifacts" return="java.util.List&lt;org.sleuthkit.datamodel.BlackboardArtifact&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactTypeID" type="int"/>
      <param name="dataSourceObjId" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all blackboard artifacts of a given type. Does not included rejected
 artifacts.

 @param artifactTypeID  artifact type to get
 @param dataSourceObjId data source to look under

 @return list of blackboard artifacts

 @throws TskCoreException exception thrown if a critical error occurs
                          within TSK core]]>
      </doc>
    </method>
    <method name="getArtifacts" return="java.util.List&lt;org.sleuthkit.datamodel.BlackboardArtifact&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactTypes" type="java.util.Collection&lt;org.sleuthkit.datamodel.BlackboardArtifact.Type&gt;"/>
      <param name="dataSourceObjIds" type="java.util.Collection&lt;java.lang.Long&gt;"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all blackboard artifacts of the given type(s) for the given data source(s). Does not included rejected
 artifacts.

 @param artifactTypes  list of artifact types to get
 @param dataSourceObjIds data sources to look under

 @return list of blackboard artifacts

 @throws TskCoreException exception thrown if a critical error occurs
                          within TSK core]]>
      </doc>
    </method>
    <method name="artifactExists" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="content" type="org.sleuthkit.datamodel.Content"/>
      <param name="artifactType" type="org.sleuthkit.datamodel.BlackboardArtifact.ARTIFACT_TYPE"/>
      <param name="attributesList" type="java.util.Collection&lt;org.sleuthkit.datamodel.BlackboardAttribute&gt;"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="newBlackboardArtifact" return="org.sleuthkit.datamodel.BlackboardArtifact"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="Use the newDataArtifact() API to create an artifact with attributes.">
      <param name="artifactType" type="org.sleuthkit.datamodel.BlackboardArtifact.Type"/>
      <param name="sourceObjId" type="long"/>
      <param name="dataSourceObjId" type="long"/>
      <param name="attributes" type="java.util.Collection&lt;org.sleuthkit.datamodel.BlackboardAttribute&gt;"/>
      <param name="transaction" type="org.sleuthkit.datamodel.SleuthkitCase.CaseDbTransaction"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Add a new blackboard artifact with the given type.

 This api executes in the context of a transaction if one is provided.

 @param artifactType    The type of the artifact.
 @param sourceObjId     The content that is the source of this artifact.
 @param dataSourceObjId The data source the artifact source content
                        belongs to, may be the same as the sourceObjId.
 @param attributes      The attributes. May be empty or null. 
 @param transaction     The transaction in the scope of which the
                        operation is to be performed. Null may be
                        provided, if one is not available. 

 @return a new blackboard artifact

 @throws TskCoreException exception thrown if a critical error occurs
                          within tsk core
 
 @deprecated Use the newDataArtifact() API to create an artifact with attributes.]]>
      </doc>
    </method>
    <method name="newDataArtifact" return="org.sleuthkit.datamodel.DataArtifact"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactType" type="org.sleuthkit.datamodel.BlackboardArtifact.Type"/>
      <param name="sourceObjId" type="long"/>
      <param name="dataSourceObjId" type="java.lang.Long"/>
      <param name="attributes" type="java.util.Collection&lt;org.sleuthkit.datamodel.BlackboardAttribute&gt;"/>
      <param name="osAccount" type="org.sleuthkit.datamodel.OsAccount"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Add a new data artifact with the given type.

 @param artifactType    The type of the data artifact.
 @param sourceObjId     The content that is the source of this artifact.
 @param dataSourceObjId The data source the artifact source content
                        belongs to, may be the same as the sourceObjId.
                        May be null.
 @param attributes      The attributes. May be empty or null.
 @param osAccount       The OS account associated with the artifact. May
                        be null.

 @return DataArtifact A new data artifact.

 @throws TskCoreException If a critical error occurs within tsk core.]]>
      </doc>
    </method>
    <method name="newDataArtifact" return="org.sleuthkit.datamodel.DataArtifact"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactType" type="org.sleuthkit.datamodel.BlackboardArtifact.Type"/>
      <param name="sourceObjId" type="long"/>
      <param name="dataSourceObjId" type="java.lang.Long"/>
      <param name="attributes" type="java.util.Collection&lt;org.sleuthkit.datamodel.BlackboardAttribute&gt;"/>
      <param name="osAccountObjId" type="java.lang.Long"/>
      <param name="transaction" type="org.sleuthkit.datamodel.SleuthkitCase.CaseDbTransaction"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Add a new data artifact with the given type.

 This api executes in the context of the given transaction.

 @param artifactType    The type of the data artifact.
 @param sourceObjId     The content that is the source of this artifact.
 @param dataSourceObjId The data source the artifact source content
                        belongs to, may be the same as the sourceObjId.
                        May be null.
 @param attributes      The attributes. May be empty or null.
 @param osAccountObjId       The OS account associated with the artifact. May
                        be null.
 @param transaction     The transaction in the scope of which the
                        operation is to be performed.

 @return DataArtifact New blackboard artifact

 @throws TskCoreException If a critical error occurs within tsk core.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[A representation of the blackboard, a place where artifacts and their
 attributes are posted.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.Blackboard -->
  <!-- start class org.sleuthkit.datamodel.Blackboard.ArtifactsPostedEvent -->
  <class name="Blackboard.ArtifactsPostedEvent" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="getArtifacts" return="java.util.Collection&lt;org.sleuthkit.datamodel.BlackboardArtifact&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getArtifacts" return="java.util.Collection&lt;org.sleuthkit.datamodel.BlackboardArtifact&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactType" type="org.sleuthkit.datamodel.BlackboardArtifact.Type"/>
    </method>
    <method name="getModuleName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getArtifactTypes" return="java.util.Collection&lt;org.sleuthkit.datamodel.BlackboardArtifact.Type&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[Event published by SleuthkitCase when one or more artifacts are posted. A
 posted artifact is complete (all attributes have been added) and ready
 for further processing.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.Blackboard.ArtifactsPostedEvent -->
  <!-- start class org.sleuthkit.datamodel.Blackboard.BlackboardException -->
  <class name="Blackboard.BlackboardException" extends="java.lang.Exception"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <doc>
    <![CDATA[A Blackboard exception.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.Blackboard.BlackboardException -->
  <!-- start class org.sleuthkit.datamodel.BlackboardArtifact -->
  <class name="BlackboardArtifact" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="org.sleuthkit.datamodel.Content"/>
    <constructor name="BlackboardArtifact" type="org.sleuthkit.datamodel.SleuthkitCase, long, long, long, long, int, java.lang.String, java.lang.String"
      static="false" final="false" visibility="protected"
      deprecated="Use new BlackboardArtifact(SleuthkitCase, long, long, int,
 String, String, ReviewStatus) instead.">
      <doc>
      <![CDATA[Constructs an artifact that has been posted to the blackboard. An
 artifact is a typed collection of name value pairs (attributes) that is
 associated with its source content (either a data source, or file within
 a data source). Both standard artifact types and custom artifact types
 are supported.

 @param sleuthkitCase    The SleuthKit case (case database) that contains
                         the artifact data.
 @param artifactID       The unique id for this artifact.
 @param objID            The unique id of the content with which this
                         artifact is associated.
 @param artifactObjID	   The unique id of the artifact, in tsk_objects
 @param dataSourceObjId  The id of the data source
 @param artifactTypeID   The type id of this artifact.
 @param artifactTypeName The type name of this artifact.
 @param displayName      The display name of this artifact.

 @deprecated Use new BlackboardArtifact(SleuthkitCase, long, long, int,
 String, String, ReviewStatus) instead.]]>
      </doc>
    </constructor>
    <method name="getSleuthkitCase" return="org.sleuthkit.datamodel.SleuthkitCase"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the SleuthKit case (case database) that contains the data for this
 artifact.

 @return The SleuthKit case (case database) object.]]>
      </doc>
    </method>
    <method name="getArtifactID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the unique id for this artifact.

 @return The artifact id.]]>
      </doc>
    </method>
    <method name="getObjectID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the object id of the source content (data source or file within a
 data source) of this artifact

 @return The object id.]]>
      </doc>
    </method>
    <method name="getArtifactTypeID" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the artifact type id for this artifact.

 @return The artifact type id.]]>
      </doc>
    </method>
    <method name="getArtifactTypeName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the artifact type name for this artifact.

 @return The artifact type name.]]>
      </doc>
    </method>
    <method name="getDisplayName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the artifact type display name for this artifact.

 @return The artifact type display name.]]>
      </doc>
    </method>
    <method name="getShortDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets a short description for this artifact.

 @return The description, may be the empty string.

 @throws TskCoreException if there is a problem creating the description.]]>
      </doc>
    </method>
    <method name="getReviewStatus" return="org.sleuthkit.datamodel.BlackboardArtifact.ReviewStatus"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the review status of this artifact, i.e., whether it has been
 approved, rejected, or is still waiting for a decision from the user.

 @return The review status.]]>
      </doc>
    </method>
    <method name="setReviewStatus"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="newStatus" type="org.sleuthkit.datamodel.BlackboardArtifact.ReviewStatus"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Sets the review status of this artifact, i.e., whether it has been
 approved, rejected, or is still waiting for a decision from the user.

 @param newStatus new status of the artifact

 @throws TskCoreException If an error occurs]]>
      </doc>
    </method>
    <method name="addAttribute"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="attribute" type="org.sleuthkit.datamodel.BlackboardAttribute"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Adds an attribute to this artifact.

 IMPORTANT NOTE: No more than one attribute of a given type should be
 added to an artifact.

 @param attribute The attribute to add

 @throws TskCoreException If an error occurs and the attribute was not
                          added to the artifact.]]>
      </doc>
    </method>
    <method name="getAttributes" return="java.util.List&lt;org.sleuthkit.datamodel.BlackboardAttribute&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the attributes of this artifact.

 @return The attributes.

 @throws TskCoreException If an error occurs and the attributes cannot be
                          fetched.]]>
      </doc>
    </method>
    <method name="getAttribute" return="org.sleuthkit.datamodel.BlackboardAttribute"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="attributeType" type="org.sleuthkit.datamodel.BlackboardAttribute.Type"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the attribute of this artifact that matches a given type.

 IMPORTANT NOTE: No more than one attribute of a given type should be
 added to an artifact.

 @param attributeType The attribute type.

 @return The first attribute of the given type, or null if there are no
         attributes of that type.

 @throws TskCoreException If an error occurs and the attribute is not
                          fetched.]]>
      </doc>
    </method>
    <method name="addAttributes"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="attributes" type="java.util.Collection&lt;org.sleuthkit.datamodel.BlackboardAttribute&gt;"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Adds a collection of attributes to this artifact in a single operation
 (faster than adding each attribute individually).

 @param attributes The collection of attributes.

 @throws TskCoreException If an error occurs and the attributes were not
                          added to the artifact.]]>
      </doc>
    </method>
    <method name="addAttributes"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="attributes" type="java.util.Collection&lt;org.sleuthkit.datamodel.BlackboardAttribute&gt;"/>
      <param name="caseDbTransaction" type="org.sleuthkit.datamodel.SleuthkitCase.CaseDbTransaction"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Adds a collection of attributes to this artifact in a single operation
 (faster than adding each attribute individually) within a transaction
 supplied by the caller.

 @param attributes        The collection of attributes.
 @param caseDbTransaction The transaction in the scope of which the
                          operation is to be performed, managed by the
                          caller. Null is not permitted.

 @throws TskCoreException         If an error occurs and the attributes
                                  were not added to the artifact.
										If <code>caseDbTransaction</code> is
                                  null or if <code>attributes</code> is
                                  null or empty.]]>
      </doc>
    </method>
    <method name="getUniquePath" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[This overiding implementation returns the unique path of the parent. It
 does not include the Artifact name in the unique path.

 @throws org.sleuthkit.datamodel.TskCoreException]]>
      </doc>
    </method>
    <method name="getParent" return="org.sleuthkit.datamodel.Content"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getAllArtifacts" return="java.util.ArrayList&lt;org.sleuthkit.datamodel.BlackboardArtifact&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all artifacts associated with this content

 @return a list of blackboard artifacts

 @throws TskCoreException if critical error occurred within tsk core]]>
      </doc>
    </method>
    <method name="getAllAnalysisResults" return="java.util.List&lt;org.sleuthkit.datamodel.AnalysisResult&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getAggregateScore" return="org.sleuthkit.datamodel.Score"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getAnalysisResults" return="java.util.List&lt;org.sleuthkit.datamodel.AnalysisResult&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactType" type="org.sleuthkit.datamodel.BlackboardArtifact.Type"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getArtifacts" return="java.util.ArrayList&lt;org.sleuthkit.datamodel.BlackboardArtifact&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactTypeName" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all artifacts associated with this content that have the given type
 name

 @param artifactTypeName name of the type to look up

 @return a list of blackboard artifacts matching the type

 @throws TskCoreException if critical error occurred within tsk core]]>
      </doc>
    </method>
    <method name="getArtifacts" return="java.util.ArrayList&lt;org.sleuthkit.datamodel.BlackboardArtifact&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactTypeID" type="int"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all artifacts associated with this content that have the given type
 id

 @param artifactTypeID type id to look up

 @return a list of blackboard artifacts matching the type

 @throws TskCoreException if critical error occurred within tsk core]]>
      </doc>
    </method>
    <method name="getArtifacts" return="java.util.ArrayList&lt;org.sleuthkit.datamodel.BlackboardArtifact&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="type" type="org.sleuthkit.datamodel.BlackboardArtifact.ARTIFACT_TYPE"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all artifacts associated with this content that have the given type

 @param type type to look up

 @return a list of blackboard artifacts matching the type

 @throws TskCoreException if critical error occurred within tsk core]]>
      </doc>
    </method>
    <method name="getAllArtifactsCount" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get count of all artifacts associated with this content

 @return count of all blackboard artifacts for this content

 @throws TskCoreException if critical error occurred within tsk core]]>
      </doc>
    </method>
    <method name="getArtifactsCount" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactTypeName" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get count of all artifacts associated with this content that have the
 given type name

 @param artifactTypeName name of the type to look up

 @return count of blackboard artifacts matching the type

 @throws TskCoreException if critical error occurred within tsk core]]>
      </doc>
    </method>
    <method name="getArtifactsCount" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactTypeID" type="int"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get count of all artifacts associated with this content that have the
 given type id

 @param artifactTypeID type id to look up

 @return count of blackboard artifacts matching the type

 @throws TskCoreException if critical error occurred within tsk core]]>
      </doc>
    </method>
    <method name="getArtifactsCount" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="type" type="org.sleuthkit.datamodel.BlackboardArtifact.ARTIFACT_TYPE"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get count of all artifacts associated with this content that have the
 given type

 @param type type to look up

 @return count of blackboard artifacts matching the type

 @throws TskCoreException if critical error occurred within tsk core]]>
      </doc>
    </method>
    <method name="getGenInfoArtifact" return="org.sleuthkit.datamodel.BlackboardArtifact"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Return the TSK_GEN_INFO artifact for the file so that individual
 attributes can be added to it. Creates one if it does not already exist.

 @return Instance of the TSK_GEN_INFO artifact

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getGenInfoArtifact" return="org.sleuthkit.datamodel.BlackboardArtifact"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="create" type="boolean"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Return the TSK_GEN_INFO artifact for the file so that individual
 attributes can be added to it. If one does not create, behavior depends
 on the create argument.

 @param create If true, an artifact will be created if it does not already
               exist.

 @return Instance of the TSK_GEN_INFO artifact or null if artifact does
         not already exist and create was set to false

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getGenInfoAttributes" return="java.util.ArrayList&lt;org.sleuthkit.datamodel.BlackboardAttribute&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="attr_type" type="org.sleuthkit.datamodel.BlackboardAttribute.ATTRIBUTE_TYPE"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Return attributes of a given type from TSK_GEN_INFO.

 @param attr_type Attribute type to find inside of the TSK_GEN_INFO
                  artifact.

 @return Attributes

 @throws org.sleuthkit.datamodel.TskCoreException]]>
      </doc>
    </method>
    <method name="getHashSetNames" return="java.util.Set&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get the names of all the hashsets that this content is in.

 @return the names of the hashsets that this content is in

 @throws TskCoreException if critical error occurred within tsk core]]>
      </doc>
    </method>
    <method name="newArtifact" return="org.sleuthkit.datamodel.BlackboardArtifact"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactTypeID" type="int"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Create and add an artifact associated with this content to the blackboard

 @param artifactTypeID id of the artifact type (if the id doesn't already
                       exist an exception will be thrown)

 @return the blackboard artifact created (the artifact type id can be
         looked up from this)

 @throws TskCoreException if critical error occurred within tsk core]]>
      </doc>
    </method>
    <method name="newAnalysisResult" return="org.sleuthkit.datamodel.AnalysisResultAdded"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactType" type="org.sleuthkit.datamodel.BlackboardArtifact.Type"/>
      <param name="score" type="org.sleuthkit.datamodel.Score"/>
      <param name="conclusion" type="java.lang.String"/>
      <param name="configuration" type="java.lang.String"/>
      <param name="justification" type="java.lang.String"/>
      <param name="attributesList" type="java.util.Collection&lt;org.sleuthkit.datamodel.BlackboardAttribute&gt;"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="newDataArtifact" return="org.sleuthkit.datamodel.DataArtifact"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactType" type="org.sleuthkit.datamodel.BlackboardArtifact.Type"/>
      <param name="attributesList" type="java.util.Collection&lt;org.sleuthkit.datamodel.BlackboardAttribute&gt;"/>
      <param name="osAccount" type="org.sleuthkit.datamodel.OsAccount"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="newArtifact" return="org.sleuthkit.datamodel.BlackboardArtifact"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="type" type="org.sleuthkit.datamodel.BlackboardArtifact.ARTIFACT_TYPE"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Create and add an artifact associated with this content to the blackboard

 @param type artifact enum type

 @return the blackboard artifact created (the artifact type id can be
         looked up from this)

 @throws TskCoreException if critical error occurred within tsk core]]>
      </doc>
    </method>
    <method name="accept" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="visitor" type="org.sleuthkit.datamodel.ContentVisitor&lt;T&gt;"/>
      <doc>
      <![CDATA[Accepts a Sleuthkit item visitor (Visitor design pattern).

 @param visitor A SleuthkitItemVisitor supplying an algorithm to run using
                this derived file as input.

 @return The output of the algorithm.]]>
      </doc>
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="object" type="java.lang.Object"/>
      <doc>
      <![CDATA[Tests this artifact for equality with another object.

 @param object The other object.

 @return True or false.]]>
      </doc>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the hash code for this artifact.

 @return The hash code.]]>
      </doc>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets a string representation of this artifact.

 @return The string.]]>
      </doc>
    </method>
    <method name="accept" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="visitor" type="org.sleuthkit.datamodel.SleuthkitItemVisitor&lt;T&gt;"/>
      <doc>
      <![CDATA[Accepts a visitor SleuthkitItemVisitor that will perform an operation on
 this artifact type and return some object as the result of the operation.

 @param visitor The visitor, where the type parameter of the visitor is
                the type of the object that will be returned as the result
                of the visit operation.

 @return An object of type T.]]>
      </doc>
    </method>
    <method name="getSize" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the (reported) size of the content object. Artifact content is a
 string dump of all its attributes.

 @return size of the content in bytes]]>
      </doc>
    </method>
    <method name="close"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Close the Content object.]]>
      </doc>
    </method>
    <method name="read" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="public"
      deprecated="not deprecated">
      <param name="buf" type="byte[]"/>
      <param name="offset" type="long"/>
      <param name="len" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Reads content data for this artifact Artifact content is a string dump of
 all its attributes.

 @param buf    a character array of data (in bytes) to copy read data to
 @param offset byte offset in the content to start reading from
 @param len    number of bytes to read into buf.

 @return num of bytes read, or -1 on error

 @throws TskCoreException if critical error occurred during read in the
                          tsk core]]>
      </doc>
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDataSource" return="org.sleuthkit.datamodel.Content"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getAttributes" return="java.util.List&lt;org.sleuthkit.datamodel.BlackboardAttribute&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="An artifact should not have multiple attributes of the same
 type. Use getAttribute(BlackboardAttribute.Type) instead.">
      <param name="attributeType" type="org.sleuthkit.datamodel.BlackboardAttribute.ATTRIBUTE_TYPE"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets all attributes associated with this artifact that are of the given
 attribute type.

 @param attributeType the type of attributes to get

 @return a list of attributes of the given type

 @throws TskCoreException if a critical error occurs and the attributes
                          are not fetched

 @deprecated An artifact should not have multiple attributes of the same
 type. Use getAttribute(BlackboardAttribute.Type) instead.]]>
      </doc>
    </method>
    <method name="getId" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getChildrenIds" return="java.util.List&lt;java.lang.Long&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the object ids of children of this artifact, if any

 @return A list of the object ids of children.

 @throws TskCoreException if there was an error querying the case
                          database.]]>
      </doc>
    </method>
    <method name="getChildrenCount" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="hasChildren" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getChildren" return="java.util.List&lt;org.sleuthkit.datamodel.Content&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all children of this artifact, if any.

 @return A list of the children.

 @throws TskCoreException if there was an error querying the case
                          database.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[An artifact that has been posted to the blackboard. Artifacts store analysis
 results (such as hash set hits) and extracted data (such as a web bookmark).
 An artifact is a typed collection of name value pairs (attributes) that is
 associated with its source content (A data source, a file, or another
 artifact). Both standard artifact types and custom artifact types are
 supported.

 IMPORTANT NOTE: No more than one attribute of a given type should be added to
 an artifact. It is undefined about which will be used.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.BlackboardArtifact -->
  <!-- start class org.sleuthkit.datamodel.BlackboardArtifact.ARTIFACT_TYPE -->
  <class name="BlackboardArtifact.ARTIFACT_TYPE" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.BlackboardArtifact.ARTIFACT_TYPE&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <implements name="org.sleuthkit.datamodel.SleuthkitVisitableItem"/>
    <method name="values" return="org.sleuthkit.datamodel.BlackboardArtifact.ARTIFACT_TYPE[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.BlackboardArtifact.ARTIFACT_TYPE"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getTypeID" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the type id for this standard artifact type.

 @return type id]]>
      </doc>
    </method>
    <method name="getLabel" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the type name (label) for this standard artifact type.

 @return The type name.]]>
      </doc>
    </method>
    <method name="getCategory" return="org.sleuthkit.datamodel.BlackboardArtifact.Category"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the type category for this standard artifact type.

 @return The type category.]]>
      </doc>
    </method>
    <method name="fromLabel" return="org.sleuthkit.datamodel.BlackboardArtifact.ARTIFACT_TYPE"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="label" type="java.lang.String"/>
      <doc>
      <![CDATA[Gets the standard artifact type enum value that corresponds to a
 given type name (label).

 @param label The type name

 @return The enum element.]]>
      </doc>
    </method>
    <method name="fromID" return="org.sleuthkit.datamodel.BlackboardArtifact.ARTIFACT_TYPE"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="int"/>
      <doc>
      <![CDATA[Gets the artifact type enum value that corresponds to a given type
 id. This method should only be used when the id is known to be one of
 the built-in types - otherwise use getArtifactType() in
 SleuthkitCase.

 @param id The type id.

 @return the corresponding enum]]>
      </doc>
    </method>
    <method name="getDisplayName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the display name of this standard artifact type.

 @return The display name.]]>
      </doc>
    </method>
    <method name="accept" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="visitor" type="org.sleuthkit.datamodel.SleuthkitItemVisitor&lt;T&gt;"/>
      <doc>
      <![CDATA[Accepts a visitor SleuthkitItemVisitor that will perform an operation
 on this artifact type and return some object as the result of the
 operation.

 @param visitor The visitor, where the type parameter of the visitor
                is the type of the object that will be returned as the
                result of the visit operation.

 @return An object of type T.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Enum for the standard artifact types. Refer to
 http://sleuthkit.org/sleuthkit/docs/jni-docs/latest/artifact_catalog_page.html
 for details on the standard attributes for each artifact type.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.BlackboardArtifact.ARTIFACT_TYPE -->
  <!-- start class org.sleuthkit.datamodel.BlackboardArtifact.Category -->
  <class name="BlackboardArtifact.Category" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.BlackboardArtifact.Category&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.BlackboardArtifact.Category[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.BlackboardArtifact.Category"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="fromID" return="org.sleuthkit.datamodel.BlackboardArtifact.Category"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="int"/>
      <doc>
      <![CDATA[Gets the category value with the given id, if one exists.

 @param id A category id.

 @return The category with the given id, or null if none exists.]]>
      </doc>
    </method>
    <method name="getID" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the id of this review status.

 @return The id of this review status.]]>
      </doc>
    </method>
    <method name="getDisplayName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the display name of this category.

 @return The display name of this category.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Enumeration to encapsulate categories of artifact.

 Some artifact types represent data directly extracted from a data source,
 while others may be the result of some analysis done on the extracted
 data.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.BlackboardArtifact.Category -->
  <!-- start class org.sleuthkit.datamodel.BlackboardArtifact.ReviewStatus -->
  <class name="BlackboardArtifact.ReviewStatus" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.BlackboardArtifact.ReviewStatus&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.BlackboardArtifact.ReviewStatus[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.BlackboardArtifact.ReviewStatus"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="withID" return="org.sleuthkit.datamodel.BlackboardArtifact.ReviewStatus"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="int"/>
      <doc>
      <![CDATA[Gets the review status value with the given id, if one exists.

 @param id A review status id.

 @return The review status with the given id, or null if none exists.]]>
      </doc>
    </method>
    <method name="getID" return="java.lang.Integer"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the id of this review status.

 @return The id of this review status.]]>
      </doc>
    </method>
    <method name="getDisplayName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the display name of this review status.

 @return The display name of this review status.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Enum to represent the review status of an artifact.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.BlackboardArtifact.ReviewStatus -->
  <!-- start class org.sleuthkit.datamodel.BlackboardArtifact.Type -->
  <class name="BlackboardArtifact.Type" extends="java.lang.Object"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <implements name="java.io.Serializable"/>
    <constructor name="Type" type="int, java.lang.String, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructs a custom artifact type.

 @param typeName    The name of the type.
 @param typeID      The id of the type.
 @param displayName The display name of the type.]]>
      </doc>
    </constructor>
    <constructor name="Type" type="int, java.lang.String, java.lang.String, org.sleuthkit.datamodel.BlackboardArtifact.Category"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructs a custom artifact type.

 @param typeName    The name of the type.
 @param typeID      The id of the type.
 @param displayName The display name of the type.
 @param category    The artifact type category.]]>
      </doc>
    </constructor>
    <constructor name="Type" type="org.sleuthkit.datamodel.BlackboardArtifact.ARTIFACT_TYPE"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructs a standard artifact type.

 @param type An element of the ARTIFACT_TYPE enum.]]>
      </doc>
    </constructor>
    <method name="getTypeName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the type for this artifact type.

 @return The type name.]]>
      </doc>
    </method>
    <method name="getTypeID" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the type id for this artifact type.

 @return The type id.]]>
      </doc>
    </method>
    <method name="getDisplayName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets display name of this artifact type.

 @return The display name.]]>
      </doc>
    </method>
    <method name="getCategory" return="org.sleuthkit.datamodel.BlackboardArtifact.Category"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets category of this artifact type.

 @return The artifact type category.]]>
      </doc>
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="that" type="java.lang.Object"/>
      <doc>
      <![CDATA[Tests this artifact type for equality with another object.

 @param that The other object.

 @return True or false.]]>
      </doc>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the hash code for this artifact type.

 @return The hash code.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[An artifact type.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.BlackboardArtifact.Type -->
  <!-- start class org.sleuthkit.datamodel.BlackboardArtifactTag -->
  <class name="BlackboardArtifactTag" extends="org.sleuthkit.datamodel.Tag"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getArtifact" return="org.sleuthkit.datamodel.BlackboardArtifact"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns the tagged artifact 
 
 @return tagged artifact]]>
      </doc>
    </method>
    <method name="getContent" return="org.sleuthkit.datamodel.Content"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns source content of the tagged  artifact
 
 @return source content of the tagged  artifact]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Instances of this class are data transfer objects (DTOs) that represent tags
 a user can apply to blackboard artifacts.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.BlackboardArtifactTag -->
  <!-- start class org.sleuthkit.datamodel.BlackboardAttribute -->
  <class name="BlackboardAttribute" extends="org.sleuthkit.datamodel.AbstractAttribute"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="BlackboardAttribute" type="org.sleuthkit.datamodel.BlackboardAttribute.ATTRIBUTE_TYPE, java.lang.String, int"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException"/>
      <doc>
      <![CDATA[Constructs a standard attribute with an integer value. The attribute
 should be added to an appropriate artifact.

 @param attributeType The standard attribute type.
 @param source        The source of this attribute.
 @param valueInt      The attribute value.

 @throws IllegalArgumentException If the value type of the specified
                                  standard attribute type is not
                                  TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.INTEGER.]]>
      </doc>
    </constructor>
    <constructor name="BlackboardAttribute" type="org.sleuthkit.datamodel.BlackboardAttribute.Type, java.lang.String, int"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException"/>
      <doc>
      <![CDATA[Constructs an attribute with an integer value. The attribute should be
 added to an appropriate artifact.

 @param attributeType The attribute type.
 @param source        The source of this attribute.
 @param valueInt      The attribute value.

 @throws IllegalArgumentException If the value type of the specified
                                  attribute type is not
                                  TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.INTEGER.]]>
      </doc>
    </constructor>
    <constructor name="BlackboardAttribute" type="org.sleuthkit.datamodel.BlackboardAttribute.ATTRIBUTE_TYPE, java.lang.String, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException"/>
      <doc>
      <![CDATA[Constructs a standard attribute with a long/datetime value. If the value
 is a datetime, it should be seconds from January 1, 1970. The attribute
 should be added to an appropriate artifact.

 @param attributeType The standard attribute type.
 @param source        The source of this attribute.
 @param valueLong     The attribute value.

 @throws IllegalArgumentException If the value type of the specified
                                  standard attribute type is not
                                  TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.LONG
                                  or
                                  TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.DATETIME.]]>
      </doc>
    </constructor>
    <constructor name="BlackboardAttribute" type="org.sleuthkit.datamodel.BlackboardAttribute.Type, java.lang.String, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException"/>
      <doc>
      <![CDATA[Constructs an attribute with a long/datetime value. The attribute should
 be added to an appropriate artifact.

 @param attributeType The attribute type.
 @param source        The source of this attribute.
 @param valueLong     The attribute value.

 @throws IllegalArgumentException If the value type of the specified
                                  standard attribute type is not
                                  TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.LONG
                                  or
                                  TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.DATETIME.]]>
      </doc>
    </constructor>
    <constructor name="BlackboardAttribute" type="org.sleuthkit.datamodel.BlackboardAttribute.ATTRIBUTE_TYPE, java.lang.String, double"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException"/>
      <doc>
      <![CDATA[Constructs a standard attribute with a double value. The attribute should
 be added to an appropriate artifact.

 @param attributeType The standard attribute type.
 @param source        The source of this attribute.
 @param valueDouble   The attribute value.

 @throws IllegalArgumentException If the value type of the specified
                                  standard attribute type is not
                                  TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.DOUBLE.]]>
      </doc>
    </constructor>
    <constructor name="BlackboardAttribute" type="org.sleuthkit.datamodel.BlackboardAttribute.Type, java.lang.String, double"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException"/>
      <doc>
      <![CDATA[Constructs an attribute with a double value. The attribute should be
 added to an appropriate artifact.

 @param attributeType The attribute type.
 @param source        The source of this attribute.
 @param valueDouble   The attribute value.

 @throws IllegalArgumentException If the value type of the specified
                                  attribute type is not
                                  TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.DOUBLE.]]>
      </doc>
    </constructor>
    <constructor name="BlackboardAttribute" type="org.sleuthkit.datamodel.BlackboardAttribute.ATTRIBUTE_TYPE, java.lang.String, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException"/>
      <doc>
      <![CDATA[Constructs a standard attribute with an string value. The attribute
 should be added to an appropriate artifact.

 @param attributeType The standard attribute type.
 @param source        The source of this attribute.
 @param valueString   The attribute value.

 @throws IllegalArgumentException If the value type of the specified
                                  standard attribute type is not
                                  TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.STRING
                                  or
                                  TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.JSON]]>
      </doc>
    </constructor>
    <constructor name="BlackboardAttribute" type="org.sleuthkit.datamodel.BlackboardAttribute.Type, java.lang.String, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException"/>
      <doc>
      <![CDATA[Constructs an attribute with a string value. The attribute should be
 added to an appropriate artifact.

 @param attributeType The attribute type.
 @param source        The source of this attribute.
 @param valueString   The attribute value.

 @throws IllegalArgumentException If the value type of the specified
                                  attribute type is not
                                  TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.STRING.]]>
      </doc>
    </constructor>
    <constructor name="BlackboardAttribute" type="org.sleuthkit.datamodel.BlackboardAttribute.ATTRIBUTE_TYPE, java.lang.String, byte[]"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException"/>
      <doc>
      <![CDATA[Constructs a standard attribute with a byte array value. The attribute
 should be added to an appropriate artifact.

 @param attributeType The standard attribute type.
 @param source        The source of this attribute.
 @param valueBytes    The attribute value.

 @throws IllegalArgumentException If the value type of the specified
                                  standard attribute type is not
                                  TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.BYTE.]]>
      </doc>
    </constructor>
    <constructor name="BlackboardAttribute" type="org.sleuthkit.datamodel.BlackboardAttribute.Type, java.lang.String, byte[]"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException"/>
      <doc>
      <![CDATA[Constructs an attribute with a byte array value. The attribute should be
 added to an appropriate artifact.

 @param attributeType The attribute type.
 @param source        The source of this attribute.
 @param valueBytes    The attribute value.

 @throws IllegalArgumentException If the value type of the specified
                                  attribute type is not
                                  TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.BYTE.]]>
      </doc>
    </constructor>
    <constructor name="BlackboardAttribute" type="int, java.lang.String, int"
      static="false" final="false" visibility="public"
      deprecated="deprecated, no comment">
      <exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException"/>
      <doc>
      <![CDATA[Creates a standard attribute with an integer value. The attribute should
 be added to an appropriate artifact.

 @param attributeTypeID The standard attribute type id.
 @param moduleName      The display name of the module creating this
                        attribute.
 @param valueInt        The attribute value.

 @throws IllegalArgumentException If the value type of the specified
                                  standard attribute type is not
                                  TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.INTEGER
                                  or the type id is not for a standard
                                  type.
 @deprecated]]>
      </doc>
    </constructor>
    <constructor name="BlackboardAttribute" type="int, java.lang.String, java.lang.String, int"
      static="false" final="false" visibility="public"
      deprecated="deprecated, no comment">
      <doc>
      <![CDATA[Creates a standard attribute with an integer value. The attribute should
 be added to an appropriate artifact.

 @param attributeTypeID The standard attribute type id.
 @param moduleName      The display name of the module creating this
                        attribute.
 @param context         Extra information about the attribute.
 @param valueInt        The attribute value.

 @throws IllegalArgumentException If the value type of the specified
                                  standard attribute type is not
                                  TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.INTEGER
                                  or the type id is not for a standard
                                  type.
 @deprecated]]>
      </doc>
    </constructor>
    <constructor name="BlackboardAttribute" type="int, java.lang.String, long"
      static="false" final="false" visibility="public"
      deprecated="deprecated, no comment">
      <exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException"/>
      <doc>
      <![CDATA[Creates a standard attribute with a long/datetime value. The attribute
 should be added to an appropriate artifact.

 @param attributeTypeID The standard attribute type id.
 @param moduleName      The display name of the module that creating this
                        attribute.
 @param valueLong       The attribute value.

 @throws IllegalArgumentException If the value type of the specified
                                  standard attribute type is not
                                  TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.LONG
                                  or
                                  TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.DATETIME
                                  or the type id is not for a standard
                                  type.
 @deprecated]]>
      </doc>
    </constructor>
    <constructor name="BlackboardAttribute" type="int, java.lang.String, java.lang.String, long"
      static="false" final="false" visibility="public"
      deprecated="deprecated, no comment">
      <doc>
      <![CDATA[Creates a standard attribute with a long/datetime value. The attribute
 should be added to an appropriate artifact.

 @param attributeTypeID The standard attribute type id.
 @param moduleName      The display name of the module that creating this
                        attribute.
 @param context         Extra information about the attribute.
 @param valueLong       The attribute value.

 @throws IllegalArgumentException If the value type of the specified
                                  standard attribute type is not
                                  TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.LONG
                                  or
                                  TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.DATETIME
                                  or the type id is not for a standard
                                  type.
 @deprecated]]>
      </doc>
    </constructor>
    <constructor name="BlackboardAttribute" type="int, java.lang.String, double"
      static="false" final="false" visibility="public"
      deprecated="deprecated, no comment">
      <exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException"/>
      <doc>
      <![CDATA[Creates a standard attribute with a double value. The attribute should be
 added to an appropriate artifact.

 @param attributeTypeID The standard attribute type id.
 @param moduleName      The display name of the module creating this
                        attribute.
 @param valueDouble     The attribute value.

 @throws IllegalArgumentException If the value type of the specified
                                  standard attribute type is not
                                  TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.DOUBLE
                                  or the type id is not for a standard
                                  type.
 @deprecated]]>
      </doc>
    </constructor>
    <constructor name="BlackboardAttribute" type="int, java.lang.String, java.lang.String, double"
      static="false" final="false" visibility="public"
      deprecated="deprecated, no comment">
      <doc>
      <![CDATA[Creates a standard attribute with a double value. The attribute should be
 added to an appropriate artifact.

 @param attributeTypeID The standard attribute type id.
 @param moduleName      The display name of the module creating this
                        attribute.
 @param context         Extra information about the attribute.
 @param valueDouble     The attribute value.

 @throws IllegalArgumentException If the value type of the specified
                                  standard attribute type is not
                                  TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.DOUBLE
                                  or the type id is not for a standard
                                  type.
 @deprecated]]>
      </doc>
    </constructor>
    <constructor name="BlackboardAttribute" type="int, java.lang.String, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="deprecated, no comment">
      <exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException"/>
      <doc>
      <![CDATA[Creates a standard attribute with a string value. The attribute should be
 added to an appropriate artifact.

 @param attributeTypeID The standard attribute type id.
 @param moduleName      The display name of the module creating this
                        attribute.
 @param valueString     The attribute value.

 @throws IllegalArgumentException If the value type of the specified
                                  standard attribute type is not
                                  TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.STRING
                                  or the type id is not for a standard
                                  type.
 @deprecated]]>
      </doc>
    </constructor>
    <constructor name="BlackboardAttribute" type="int, java.lang.String, java.lang.String, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="deprecated, no comment">
      <doc>
      <![CDATA[Creates a standard attribute with a string value. The attribute should be
 added to an appropriate artifact.

 @param attributeTypeID The standard attribute type id.
 @param moduleName      The display name of the module creating this
                        attribute.
 @param context         Extra information about the attribute.
 @param valueString     The attribute value.

 @throws IllegalArgumentException If the value type of the specified
                                  standard attribute type is not
                                  TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.STRING
                                  or the type id is not for a standard
                                  type.
 @deprecated]]>
      </doc>
    </constructor>
    <constructor name="BlackboardAttribute" type="int, java.lang.String, byte[]"
      static="false" final="false" visibility="public"
      deprecated="deprecated, no comment">
      <exception name="IllegalArgumentException" type="java.lang.IllegalArgumentException"/>
      <doc>
      <![CDATA[Creates a standard attribute with a byte array value. The attribute
 should be added to an appropriate artifact.

 @param attributeTypeID The standard attribute type id.
 @param moduleName      The display name of the module creating this
                        attribute.
 @param valueBytes      The attribute value.

 @throws IllegalArgumentException If the value type of the specified
                                  standard attribute type is not
                                  TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.BYTE
                                  or the type id is not for a standard
                                  type.
 @deprecated]]>
      </doc>
    </constructor>
    <constructor name="BlackboardAttribute" type="int, java.lang.String, java.lang.String, byte[]"
      static="false" final="false" visibility="public"
      deprecated="deprecated, no comment">
      <doc>
      <![CDATA[Creates a standard attribute with a byte array value. The attribute
 should be added to an appropriate artifact.

 @param attributeTypeID The standard attribute type id.
 @param moduleName      The display name of the module creating this
                        attribute.
 @param context         Extra information about the attribute.
 @param valueBytes      The attribute value.

 @throws IllegalArgumentException If the value type of the specified
                                  standard attribute type is not
                                  TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE.BYTE
                                  or the type id is not for a standard
                                  type.
 @deprecated]]>
      </doc>
    </constructor>
    <method name="getArtifactID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the id of the artifact associated with this attribute, if the
 attribute was added to an artifact. Attributes should always be added to
 artifacts after they are constructed.

 @return The artifact id or zero if the artifact id has not been set.]]>
      </doc>
    </method>
    <method name="getSources" return="java.util.List&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the sources of this attribute.

 @return A list of sources, may be empty.]]>
      </doc>
    </method>
    <method name="addSource"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="source" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Adds a source to the sources of this attribute.

 @param source The source name.

 @throws org.sleuthkit.datamodel.TskCoreException]]>
      </doc>
    </method>
    <method name="getParentArtifact" return="org.sleuthkit.datamodel.BlackboardArtifact"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the artifact associated with this attribute. The artifact can be
 used to get the source content for the artifact as well as any other
 attributes associated with the artifact.

 @return The artifact.

 @throws TskCoreException If there is no artifact associated with this
                          attribute or there is an error reading from the
                          case database.]]>
      </doc>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="that" type="java.lang.Object"/>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDisplayString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the attribute value as a string, formatted as required.

 @return The value as a string.]]>
      </doc>
    </method>
    <method name="setArtifactID"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="The preferred method for doing this is to add the attribute
 to a BlackboardArtifact object by calling BlackboardArtifact.addAttribute
 or BlackboardArtifact.addAttributes, both of which post the attributes to
 the blackboard.">
      <param name="artifactID" type="long"/>
      <doc>
      <![CDATA[Sets the artifact id.

 @param artifactID The artifact id.

 @deprecated The preferred method for doing this is to add the attribute
 to a BlackboardArtifact object by calling BlackboardArtifact.addAttribute
 or BlackboardArtifact.addAttributes, both of which post the attributes to
 the blackboard.]]>
      </doc>
    </method>
    <method name="setCase"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="The preferred method for doing this is to add the attribute
 to a BlackboardArtifact object by calling BlackboardArtifact.addAttribute
 or BlackboardArtifact.addAttributes, both of which post the attributes to
 the blackboard.">
      <param name="sleuthkitCase" type="org.sleuthkit.datamodel.SleuthkitCase"/>
      <doc>
      <![CDATA[Sets the reference to the SleuthkitCase object that represents the case
 database.

 @param sleuthkitCase A reference to a SleuthkitCase object.

 @deprecated The preferred method for doing this is to add the attribute
 to a BlackboardArtifact object by calling BlackboardArtifact.addAttribute
 or BlackboardArtifact.addAttributes, both of which post the attributes to
 the blackboard.]]>
      </doc>
    </method>
    <method name="getContext" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="Setting context for an attribute is deprecated.">
      <doc>
      <![CDATA[Gets the context of this attribute.

 @return The context, may be the empty string.

 @deprecated Setting context for an attribute is deprecated.]]>
      </doc>
    </method>
    <method name="getAttributeTypeID" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="Use BlackboardAttribute.getAttributeType.getTypeID instead.">
      <doc>
      <![CDATA[Gets the attribute type id.

 @return The type id.

 @deprecated Use BlackboardAttribute.getAttributeType.getTypeID instead.]]>
      </doc>
    </method>
    <method name="getAttributeTypeName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="Use BlackboardAttribute.getAttributeType.getTypeName instead.">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the attribute type name.

 @return The type name.

 @throws org.sleuthkit.datamodel.TskCoreException

 @deprecated Use BlackboardAttribute.getAttributeType.getTypeName instead.]]>
      </doc>
    </method>
    <method name="getAttributeTypeDisplayName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="Use BlackboardAttribute.getAttributeType.getDisplayName
 instead.">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the attribute type display name.

 @return type The display name.

 @throws org.sleuthkit.datamodel.TskCoreException

 @deprecated Use BlackboardAttribute.getAttributeType.getDisplayName
 instead.]]>
      </doc>
    </method>
    <method name="getModuleName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="Use getSources instead.">
      <doc>
      <![CDATA[Gets the name of the first module identified as a sources of this
 attribute.

 @return A comma-separated-values list of module names, may be empty.

 @deprecated Use getSources instead.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Represents an attribute of an artifact posted to the blackboard. Instances
 should be constructed and then added to an instance of the BlackboardArtifact
 class.

 Attributes are a name-value pairs. The name is the type of the attribute, as
 represented by the BlackboardAttribute.Type class. Standard attribute types
 are specified by the ATTRIBUTE_TYPE enumeration. Custom attribute types may
 be created by constructing a BlackboardAttribute.Type object and calling the
 SleuthkitCase.addArtifactAttributeType method. The BlackboardAttribute.Type
 object that is returned can then be used to create instances of the custom
 attribute by calling the appropriate BlackboardAttribute constructor. It can
 also be used to do blackboard queries involving the custom type.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.BlackboardAttribute -->
  <!-- start class org.sleuthkit.datamodel.BlackboardAttribute.ATTRIBUTE_TYPE -->
  <class name="BlackboardAttribute.ATTRIBUTE_TYPE" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.BlackboardAttribute.ATTRIBUTE_TYPE&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.BlackboardAttribute.ATTRIBUTE_TYPE[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.BlackboardAttribute.ATTRIBUTE_TYPE"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getTypeID" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the type id of this standard attribute type.

 @return The type id.]]>
      </doc>
    </method>
    <method name="getLabel" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the type name of this standard attribute type.

 @return The type name.

 TODO (AUT-2070): Deprecate and provide a getTypeName method instead
 for API consistency.]]>
      </doc>
    </method>
    <method name="getDisplayName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the display name of this standard attribute type.

 @return The display name.]]>
      </doc>
    </method>
    <method name="getValueType" return="org.sleuthkit.datamodel.BlackboardAttribute.TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the value type of this standard attribute type.

 @return the value type]]>
      </doc>
    </method>
    <method name="fromID" return="org.sleuthkit.datamodel.BlackboardAttribute.ATTRIBUTE_TYPE"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="typeID" type="int"/>
      <doc>
      <![CDATA[Gets the standard attribute type for a given type id.

 @param typeID A standard attribute type id.

 @return A BlackboardAttribute.ATTRIBUTE_TYPE object.

 @throws IllegalArgumentException If the given type id does not map to
                                  a standard attribute type.

 TODO (AUT-2070): Deprecate and provide a fromTypeId method instead
 for API consistency.]]>
      </doc>
    </method>
    <method name="fromLabel" return="org.sleuthkit.datamodel.BlackboardAttribute.ATTRIBUTE_TYPE"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="typeName" type="java.lang.String"/>
      <doc>
      <![CDATA[Gets the standard attribute type for a given type name.

 @param typeName A standard attribute type name.

 @return A BlackboardAttribute.ATTRIBUTE_TYPE object.

 @throws IllegalArgumentException If the given type name does not map
                                  to a standard attribute type.

 TODO (AUT-2070): Deprecate and provide a fromTypeName method instead
 for API consistency.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Specifies the type ids, type names, display names, and value types of the
 standard attribute types. See
 http://wiki.sleuthkit.org/index.php?title=Artifact_Examples for more
 information.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.BlackboardAttribute.ATTRIBUTE_TYPE -->
  <!-- start class org.sleuthkit.datamodel.BlackboardAttribute.TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE -->
  <class name="BlackboardAttribute.TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.BlackboardAttribute.TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.BlackboardAttribute.TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.BlackboardAttribute.TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getType" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the type id for this attribute value type.

 TODO (AUT-2070): Deprecate and provide a getTypeId method instead for
 API consistency.

 @return attribute value type id]]>
      </doc>
    </method>
    <method name="getLabel" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the type name for this attribute value type.

 TODO (AUT-2070): Deprecate and provide a getTypeName method instead
 for API consistency.

 @return attribute value type name]]>
      </doc>
    </method>
    <method name="fromType" return="org.sleuthkit.datamodel.BlackboardAttribute.TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="typeId" type="long"/>
      <doc>
      <![CDATA[Gets the attribute value type for a given value type id.

 @param typeId A value type id.

 @return A BlackboardAttribute.TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE
         object.

 @throws IllegalArgumentException If the given type id does not map to
                                  a supported value type.

 TODO (AUT-2070): Deprecate and provide a fromTypeId method instead
 for API consistency.]]>
      </doc>
    </method>
    <method name="fromLabel" return="org.sleuthkit.datamodel.BlackboardAttribute.TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="typeName" type="java.lang.String"/>
      <doc>
      <![CDATA[Gets the attribute value type for a given value type name.

 @param typeName A type name.

 @return A BlackboardAttribute.TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE
         object.

 @throws IllegalArgumentException If the given type name does not map
                                  to a supported value type.

 TODO (AUT-2070): Deprecate and provide a fromTypeName method instead
 for API consistency.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Specifies the type ids and display names of the supported attribute value
 types.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.BlackboardAttribute.TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE -->
  <!-- start class org.sleuthkit.datamodel.BlackboardAttribute.Type -->
  <class name="BlackboardAttribute.Type" extends="java.lang.Object"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <implements name="java.io.Serializable"/>
    <constructor name="Type" type="int, java.lang.String, java.lang.String, org.sleuthkit.datamodel.BlackboardAttribute.TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructs an attribute type.

 @param typeID      The type id.
 @param typeName    The type name.
 @param displayName The display name for the type.
 @param valueType   The type of the value.]]>
      </doc>
    </constructor>
    <constructor name="Type" type="org.sleuthkit.datamodel.BlackboardAttribute.ATTRIBUTE_TYPE"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructs a standard attribute type.

 @param type The specification of the type provided by the
             TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE enumeration.]]>
      </doc>
    </constructor>
    <method name="getValueType" return="org.sleuthkit.datamodel.BlackboardAttribute.TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the value type of this attribute type.

 @return The value type.]]>
      </doc>
    </method>
    <method name="getTypeName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the type name of this attribute type.

 @return The type name.]]>
      </doc>
    </method>
    <method name="getTypeID" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the type id of this attribute type.

 @return The type id.]]>
      </doc>
    </method>
    <method name="getDisplayName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the display name of this attribute type.

 @return The display name.]]>
      </doc>
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="that" type="java.lang.Object"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[Represents the type of an attribute.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.BlackboardAttribute.Type -->
  <!-- start class org.sleuthkit.datamodel.CarvedFileContainer -->
  <class name="CarvedFileContainer" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="Use CarvingResult instead.">
    <constructor name="CarvedFileContainer" type="java.lang.String, long, long, java.util.List&lt;org.sleuthkit.datamodel.TskFileRange&gt;"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getSize" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getId" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getRanges" return="java.util.List&lt;org.sleuthkit.datamodel.TskFileRange&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[@deprecated Use CarvingResult instead.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.CarvedFileContainer -->
  <!-- start class org.sleuthkit.datamodel.CarvingResult -->
  <class name="CarvingResult" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <constructor name="CarvingResult" type="org.sleuthkit.datamodel.Content, java.util.List&lt;org.sleuthkit.datamodel.CarvingResult.CarvedFile&gt;"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructs a carving result consisting of a set of carved files and the
 parent from which the files were carved.

 @param parent      The parent of the set of carved files in the carving
                    result.
 @param carvedFiles The set of carved files in the carving result.]]>
      </doc>
    </constructor>
    <doc>
    <![CDATA[A carving result consisting of a set of carved files and the parent from
 which the files were carved.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.CarvingResult -->
  <!-- start class org.sleuthkit.datamodel.CarvingResult.CarvedFile -->
  <class name="CarvingResult.CarvedFile" extends="java.lang.Object"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <constructor name="CarvedFile" type="java.lang.String, long, java.util.List&lt;org.sleuthkit.datamodel.TskFileRange&gt;"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructs a carved file.

 @param name           The name of the file.
 @param sizeInBytes    The size of the file in bytes.
 @param layoutInParent The layout of the file within its parent.]]>
      </doc>
    </constructor>
    <doc>
    <![CDATA[A carved file.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.CarvingResult.CarvedFile -->
  <!-- start class org.sleuthkit.datamodel.CaseDbAccessManager -->
  <class name="CaseDbAccessManager" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="columnExists" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="tableName" type="java.lang.String"/>
      <param name="columnName" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Checks if a column exists in a table.

 @param tableName name of the table
 @param columnName column name to check
 
 @return true if the column already exists, false otherwise
 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="columnExists" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="tableName" type="java.lang.String"/>
      <param name="columnName" type="java.lang.String"/>
      <param name="transaction" type="org.sleuthkit.datamodel.SleuthkitCase.CaseDbTransaction"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Checks if a column exists in a table.

 @param tableName name of the table
 @param columnName column name to check
 @param transaction transaction 
 
 @return true if the column already exists, false otherwise
 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="tableExists" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="tableName" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Checks if a table exists in the case database.

 @param tableName name of the table to check
 
 @return true if the table already exists, false otherwise
 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="tableExists" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="tableName" type="java.lang.String"/>
      <param name="transaction" type="org.sleuthkit.datamodel.SleuthkitCase.CaseDbTransaction"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Checks if a table exists in the case database.

 @param tableName name of the table to check
 @param transaction transaction 
 
 @return true if the table already exists, false otherwise
 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="createTable"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="tableName" type="java.lang.String"/>
      <param name="tableSchema" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Creates a table with the specified name and schema.
 
 If the table already exists, it does nothing, and no error is generated 
 
 It is recommended that clients of the API use module specific prefixes
 to prevent name collisions.
 
 @param tableName name of the table to create
 @param tableSchema table schema
 
 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="alterTable"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="tableName" type="java.lang.String"/>
      <param name="alterSQL" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Alters a table with the specified name.
 
 @param tableName name of the table to alter
 @param alterSQL SQL to alter the table
 
 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="alterTable"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="tableName" type="java.lang.String"/>
      <param name="alterSQL" type="java.lang.String"/>
      <param name="transaction" type="org.sleuthkit.datamodel.SleuthkitCase.CaseDbTransaction"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Alters a table with the specified name.
 
 @param tableName name of the table to alter
 @param alterSQL SQL to alter the table
 @param transaction transaction
 
 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="createIndex"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="indexName" type="java.lang.String"/>
      <param name="tableName" type="java.lang.String"/>
      <param name="colsSQL" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Creates an index on the specified table, on specified column(s).
 
 If the index already exists, it does nothing, and no error is generated.
 
 It is recommended that clients of the API use module specific prefixes
 to prevent name collisions.
 
 @param indexName name of index to create
 @param tableName name of table to create the index on
 @param colsSQL - columns on which to index
 
 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="insert" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="tableName" type="java.lang.String"/>
      <param name="sql" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Inserts a row in the specified table.
 
 @param tableName - table to insert into.
 @param sql - SQL string specifying column values.

 @return - rowID of the row

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="insert" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="tableName" type="java.lang.String"/>
      <param name="sql" type="java.lang.String"/>
      <param name="transaction" type="org.sleuthkit.datamodel.SleuthkitCase.CaseDbTransaction"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Inserts a row in the specified table, as part of the specified transaction.
 If the primary key is duplicate, it does nothing.
 
 Note: For PostGreSQL, the caller must include the ON CONFLICT DO NOTHING clause
 
 Caller is responsible for committing the transaction.
 
 @param tableName - table to insert into.
 @param sql - SQL string specifying column values.
 @param transaction transaction in which the insert/update is done

 @return - rowID of the row inserted

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="insertOrUpdate" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="tableName" type="java.lang.String"/>
      <param name="sql" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Inserts a row in the specified table.
 If the primary key is duplicate, the existing row is updated.
 
 Note: For PostGreSQL, the caller must include the ON CONFLICT UPDATE clause to handle 
 duplicates
 
 @param tableName - table to insert into.
 @param sql - SQL string specifying column values.

 @return - rowID of the row inserted/updated

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="insertOrUpdate" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="tableName" type="java.lang.String"/>
      <param name="sql" type="java.lang.String"/>
      <param name="transaction" type="org.sleuthkit.datamodel.SleuthkitCase.CaseDbTransaction"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Inserts a row in the specified table, as part of the specified transaction.
 If the primary key is duplicate, the existing row is updated.
 Caller is responsible for committing the transaction.
 
 Note: For PostGreSQL, the caller must include the ON CONFLICT UPDATE clause to handle 
 duplicates
 
 @param tableName - table to insert into.
 @param sql - SQL string specifying column values.
 @param transaction transaction in which the insert/update is done

 @return - rowID of the row inserted/updated

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="update"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="tableName" type="java.lang.String"/>
      <param name="sql" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Updates row(s) in the specified table.
 
 @param tableName - table to insert into.
 @param sql - SQL string specifying column values and conditions.
 
 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="update"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="tableName" type="java.lang.String"/>
      <param name="sql" type="java.lang.String"/>
      <param name="transaction" type="org.sleuthkit.datamodel.SleuthkitCase.CaseDbTransaction"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Updates row(s) in the specified table, as part of the specified transaction.
 Caller is responsible for committing the transaction.
 
 @param tableName - table to insert into.
 @param sql - SQL string specifying column values and conditions.
 @param transaction - transaction under which the update is performed.
 
 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="select"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="sql" type="java.lang.String"/>
      <param name="queryCallback" type="org.sleuthkit.datamodel.CaseDbAccessManager.CaseDbAccessQueryCallback"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Runs the specified SELECT query and then calls the specified callback with the result.
 
 @param sql SQL string specifying the columns to select, tables to select from and the WHERE clause.
 @param queryCallback Callback object to process the result.
 
 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="delete"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="tableName" type="java.lang.String"/>
      <param name="sql" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Deletes a row in the specified table.
 
 @param tableName table from which to delete the row
 @param sql - SQL string specifying the condition to identify the row to delete
 
 @throws TskCoreException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[This class provides modules with access to the case database 
 to create custom tables/indexes and to query them.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.CaseDbAccessManager -->
  <!-- start interface org.sleuthkit.datamodel.CaseDbAccessManager.CaseDbAccessQueryCallback -->
  <interface name="CaseDbAccessManager.CaseDbAccessQueryCallback"    abstract="true"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="process"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="resultSet" type="java.sql.ResultSet"/>
      <doc>
      <![CDATA[Processes the ResultSet from CaseDbAccessManager query.

 This is called synchronously by CaseDbAccessManager, 
 and should avoid any long running operations.
 
 @param resultSet ResultSet from query.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Callback interface to process the result of DB query run through DBAccessManager]]>
    </doc>
  </interface>
  <!-- end interface org.sleuthkit.datamodel.CaseDbAccessManager.CaseDbAccessQueryCallback -->
  <!-- start class org.sleuthkit.datamodel.CaseDbConnectionInfo -->
  <class name="CaseDbConnectionInfo" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="CaseDbConnectionInfo" type="java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.sleuthkit.datamodel.TskData.DbType"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The intent of this class is to hold any information needed to connect to
 a remote database server, except for the actual database name. This does
 not hold information to connect to a local database such as SQLite.

 It can be used generically to hold remote database connection
 information.

 @param hostNameOrIP the host name
 @param portNumber   the port number
 @param userName     the user name
 @param password     the password
 @param dbType       the database type]]>
      </doc>
    </constructor>
    <method name="getDbType" return="org.sleuthkit.datamodel.TskData.DbType"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getHost" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPort" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getUserName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPassword" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="setDbType"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="db" type="org.sleuthkit.datamodel.TskData.DbType"/>
    </method>
    <method name="setHost"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="host" type="java.lang.String"/>
    </method>
    <method name="setPort"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="port" type="java.lang.String"/>
    </method>
    <method name="setUserName"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="user" type="java.lang.String"/>
    </method>
    <method name="setPassword"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pass" type="java.lang.String"/>
    </method>
    <doc>
    <![CDATA[The intent of this class is to hold any information needed to connect to a
 remote database server, except for the actual database name. This does not
 hold information to connect to a local database such as SQLite.

 It can be used generically to hold remote database connection information.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.CaseDbConnectionInfo -->
  <!-- start class org.sleuthkit.datamodel.CaseDbSchemaVersionNumber -->
  <class name="CaseDbSchemaVersionNumber" extends="org.sleuthkit.datamodel.VersionNumber"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <constructor name="CaseDbSchemaVersionNumber" type="int, int"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructor for CaseDBSchemaVersionNumber. The patch version is unused
 and immutably 0.

 @param majorVersion The major version part.
 @param minorVersion The minor version part.]]>
      </doc>
    </constructor>
    <method name="isCompatible" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="dbSchemaVersion" type="org.sleuthkit.datamodel.CaseDbSchemaVersionNumber"/>
      <doc>
      <![CDATA[Is a database with the given schema version openable by this version
 number?

 @param dbSchemaVersion The schema version of the db want to check for
                        compatibility.

 @return true if the db schema version is compatible with this version.]]>
      </doc>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[As of SleuthKit 4.5.0 database schema versions are two part: Major.Minor. 
 This versioning schema is based on semantic versioning, but without using the
 patch number (in practice it is always the default value of zero for case database versions).

 The major part is incremented for incompatible changes, i.e., the case 
 database will not be usable by an older version. For example, the major 
 number should be incremented if tables and/or columns are removed, the 
 meanings of values changes, or new records are added to lookup tables 
 that will not be convertible to older versions of the corresponding Java 
 enums.

 The minor version is incremented for compatible changes that are usable by
 older versions of the SleuthKit, although the new schema may not be fully taken
 advantage of. For example, adding an index should be backwards compatible: 
 an older version of the software will still be able to open and use the case database, but
 query performance may or may not be affected. Also, adding a column to a
 table should be backwards compatible as older versions of the software should
 simply ignore it.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.CaseDbSchemaVersionNumber -->
  <!-- start class org.sleuthkit.datamodel.CommunicationsFilter -->
  <class name="CommunicationsFilter" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <constructor name="CommunicationsFilter"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Create a new empty CommunicationsFilter.]]>
      </doc>
    </constructor>
    <method name="getAndFilters" return="java.util.List&lt;org.sleuthkit.datamodel.CommunicationsFilter.SubFilter&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns the list of filters that will be ANDed together when applied to a
 query.

 NOTE: The returned list is unmodifiable, new filters should be added via
 addAndFilter.

 @return An unmodifiable list of the filter.]]>
      </doc>
    </method>
    <method name="addAndFilter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="subFilter" type="org.sleuthkit.datamodel.CommunicationsFilter.SubFilter"/>
      <doc>
      <![CDATA[Adds a filter to list of filters that will be ANDed together when applied
 to a query.

 @param subFilter The SubFilter to add.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Defines an aggregate of filters to apply to a CommunicationsManager query.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.CommunicationsFilter -->
  <!-- start class org.sleuthkit.datamodel.CommunicationsFilter.AccountTypeFilter -->
  <class name="CommunicationsFilter.AccountTypeFilter" extends="org.sleuthkit.datamodel.CommunicationsFilter.SubFilter"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <constructor name="AccountTypeFilter" type="java.util.Collection&lt;org.sleuthkit.datamodel.Account.Type&gt;"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructs a AccountTypeFilter.

 @param accountTypes set of account types to filter on.]]>
      </doc>
    </constructor>
    <method name="getAccountTypes" return="java.util.Set&lt;org.sleuthkit.datamodel.Account.Type&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the selected Account Types.
 
 @return A Set of Type values]]>
      </doc>
    </method>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getSQL" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="commsManager" type="org.sleuthkit.datamodel.CommunicationsManager"/>
      <doc>
      <![CDATA[Get the SQL string for the filter.

 @param commsManager Communications manager.

 @return SQL String for the filter.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Filter accounts and relationships by account type.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.CommunicationsFilter.AccountTypeFilter -->
  <!-- start class org.sleuthkit.datamodel.CommunicationsFilter.DateRangeFilter -->
  <class name="CommunicationsFilter.DateRangeFilter" extends="org.sleuthkit.datamodel.CommunicationsFilter.SubFilter"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <constructor name="DateRangeFilter" type="long, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructs a DateRangeFilter.

 @param startDate start date in epoch. Use 0 to not specify a date
 @param endDate   end date in epoch. Use 0 to not specify a date.]]>
      </doc>
    </constructor>
    <method name="getStartDate" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the start date.
 
 @return Seconds from java epoch or zero if no value was set]]>
      </doc>
    </method>
    <method name="getEndDate" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the end date.
 @return Seconds from java epoch or zero if no value was set]]>
      </doc>
    </method>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getSQL" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="commsManager" type="org.sleuthkit.datamodel.CommunicationsManager"/>
      <doc>
      <![CDATA[Get the SQL string for the filter.

 @param commsManager Communications manager.

 @return SQL String for the filter.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Filters communications by date range]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.CommunicationsFilter.DateRangeFilter -->
  <!-- start class org.sleuthkit.datamodel.CommunicationsFilter.DeviceFilter -->
  <class name="CommunicationsFilter.DeviceFilter" extends="org.sleuthkit.datamodel.CommunicationsFilter.SubFilter"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <constructor name="DeviceFilter" type="java.util.Collection&lt;java.lang.String&gt;"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructs a device filter.

 @param deviceIds set of device Ids to filter on.]]>
      </doc>
    </constructor>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDevices" return="java.util.Collection&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets a set of device ids
 
 @return Collection of device ids]]>
      </doc>
    </method>
    <method name="getSQL" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="commsManager" type="org.sleuthkit.datamodel.CommunicationsManager"/>
      <doc>
      <![CDATA[Get the SQL string for the filter.

 @param commsManager Communications manager.

 @return SQL String for the filter.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Filter by device ids.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.CommunicationsFilter.DeviceFilter -->
  <!-- start class org.sleuthkit.datamodel.CommunicationsFilter.MostRecentFilter -->
  <class name="CommunicationsFilter.MostRecentFilter" extends="org.sleuthkit.datamodel.CommunicationsFilter.SubFilter"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <constructor name="MostRecentFilter" type="int"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructs a MostRecentFilter.
 
 @param limit An integer limit value or -1 for no limit.]]>
      </doc>
    </constructor>
    <method name="getLimit" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns the filter limit.
 
 @return Integer filter limit]]>
      </doc>
    </method>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[Filters by the most recent given relationships.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.CommunicationsFilter.MostRecentFilter -->
  <!-- start class org.sleuthkit.datamodel.CommunicationsFilter.RelationshipTypeFilter -->
  <class name="CommunicationsFilter.RelationshipTypeFilter" extends="org.sleuthkit.datamodel.CommunicationsFilter.SubFilter"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <constructor name="RelationshipTypeFilter" type="java.util.Collection&lt;org.sleuthkit.datamodel.Relationship.Type&gt;"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructs a RelationshipTypeFilter.

 @param relationshipTypes set of relationship types]]>
      </doc>
    </constructor>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getSQL" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="commsManager" type="org.sleuthkit.datamodel.CommunicationsManager"/>
      <doc>
      <![CDATA[Get the SQL string for the filter.

 @param commsManager Communications manager.

 @return SQL String for the filter.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Filters relationships by relationship type.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.CommunicationsFilter.RelationshipTypeFilter -->
  <!-- start class org.sleuthkit.datamodel.CommunicationsFilter.SubFilter -->
  <class name="CommunicationsFilter.SubFilter" extends="java.lang.Object"
    abstract="true"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="SubFilter"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getDescription" return="java.lang.String"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns a string description of the filter.

 @return	A string description of the filter.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Unit level filter.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.CommunicationsFilter.SubFilter -->
  <!-- start class org.sleuthkit.datamodel.CommunicationsManager -->
  <class name="CommunicationsManager" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="addAccountType" return="org.sleuthkit.datamodel.Account.Type"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="accountTypeName" type="java.lang.String"/>
      <param name="displayName" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Add a custom account type that is not already defined in Account.Type.
 Will not allow duplicates and will return existing type if the name is
 already defined.

 @param accountTypeName account type that must be unique
 @param displayName     account type display name

 @return Account.Type

 @throws TskCoreException if a critical error occurs within TSK core]]>
      </doc>
    </method>
    <method name="createAccountFileInstance" return="org.sleuthkit.datamodel.AccountFileInstance"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="accountType" type="org.sleuthkit.datamodel.Account.Type"/>
      <param name="accountUniqueID" type="java.lang.String"/>
      <param name="moduleName" type="java.lang.String"/>
      <param name="sourceFile" type="org.sleuthkit.datamodel.Content"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <exception name="InvalidAccountIDException" type="org.sleuthkit.datamodel.InvalidAccountIDException"/>
      <doc>
      <![CDATA[Records that an account was used in a specific file. Behind the scenes,
 it will create a case-specific Account object if it does not already
 exist and create the needed database entries (which currently include
 making a BlackboardArtifact).

 @param accountType     account type
 @param accountUniqueID unique account identifier (such as email address)
 @param moduleName      module creating the account
 @param sourceFile      source file the account was found in (for the
                        blackboard)

 @return AccountFileInstance

 @throws TskCoreException          If a critical error occurs within TSK
                                   core
 @throws InvalidAccountIDException If the account identifier is not valid.]]>
      </doc>
    </method>
    <method name="getAccount" return="org.sleuthkit.datamodel.Account"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="accountType" type="org.sleuthkit.datamodel.Account.Type"/>
      <param name="accountUniqueID" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <exception name="InvalidAccountIDException" type="org.sleuthkit.datamodel.InvalidAccountIDException"/>
      <doc>
      <![CDATA[Get the Account with the given account type and account ID.

 @param accountType     account type
 @param accountUniqueID unique account identifier (such as an email
                        address)

 @return Account, returns NULL is no matching account found

 @throws TskCoreException          If a critical error occurs within TSK
                                   core.
 @throws InvalidAccountIDException If the account identifier is not valid.]]>
      </doc>
    </method>
    <method name="addRelationships"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="sender" type="org.sleuthkit.datamodel.AccountFileInstance"/>
      <param name="recipients" type="java.util.List&lt;org.sleuthkit.datamodel.AccountFileInstance&gt;"/>
      <param name="sourceArtifact" type="org.sleuthkit.datamodel.BlackboardArtifact"/>
      <param name="relationshipType" type="org.sleuthkit.datamodel.Relationship.Type"/>
      <param name="dateTime" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <exception name="TskDataException" type="org.sleuthkit.datamodel.TskDataException"/>
      <doc>
      <![CDATA[Adds relationships between the sender and each of the recipient account
 instances and between all recipient account instances. All account
 instances must be from the same data source.

 @param sender           Sender account, may be null.
 @param recipients       List of recipients, may be empty.
 @param sourceArtifact   Artifact that relationships were derived from.
 @param relationshipType The type of relationships to be created.
 @param dateTime         Date of communications/relationship, as epoch
                         seconds.


 @throws org.sleuthkit.datamodel.TskCoreException
 @throws org.sleuthkit.datamodel.TskDataException If the all the accounts
                                                  and the relationship are
                                                  not from the same data
                                                  source, or if the
                                                  sourceArtifact and
                                                  relationshipType are not
                                                  compatible.]]>
      </doc>
    </method>
    <method name="getAccountType" return="org.sleuthkit.datamodel.Account.Type"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="accountTypeName" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get the Account.Type for the give type name.

 @param accountTypeName An account type name.

 @return An Account.Type or null if the account type does not exist.

 @throws TskCoreException If an error occurs accessing the case database.]]>
      </doc>
    </method>
    <method name="getAccountDeviceInstancesWithRelationships" return="java.util.List&lt;org.sleuthkit.datamodel.AccountDeviceInstance&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="filter" type="org.sleuthkit.datamodel.CommunicationsFilter"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Returns a list of AccountDeviceInstances that have at least one
 relationship that meets the criteria listed in the filters.

 Applicable filters: DeviceFilter, AccountTypeFilter, DateRangeFilter,
 RelationshipTypeFilter, MostRecentFilter

 @param filter filters to apply

 @return list of AccountDeviceInstances

 @throws TskCoreException exception thrown if a critical error occurs
                          within TSK core]]>
      </doc>
    </method>
    <method name="getRelationshipCountsPairwise" return="java.util.Map&lt;org.sleuthkit.datamodel.AccountPair, java.lang.Long&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="accounts" type="java.util.Set&lt;org.sleuthkit.datamodel.AccountDeviceInstance&gt;"/>
      <param name="filter" type="org.sleuthkit.datamodel.CommunicationsFilter"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get the number of relationships between all pairs of accounts in the
 given set. For each pair of accounts <a2,a1> == <a1,a2>, find the number
 of relationships between those two accounts that pass the given filter,.

 Applicable filters: DeviceFilter, DateRangeFilter, RelationshipTypeFilter

 @param accounts The set of accounts to count the relationships (pairwise)
                 between.
 @param filter   The filter that relationships must pass to be included in
                 the count.

 @return The number of relationships (that pass the filter) between each
         pair of accounts, organized in a map where the key is an
         unordered pair of account ids, and the value is the number of
         relationships.

 @throws TskCoreException if there is a problem querying the DB.]]>
      </doc>
    </method>
    <method name="getRelationshipSourcesCount" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="accountDeviceInstance" type="org.sleuthkit.datamodel.AccountDeviceInstance"/>
      <param name="filter" type="org.sleuthkit.datamodel.CommunicationsFilter"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get the number of unique relationship sources (such as EMAIL artifacts)
 associated with an account on a given device (AccountDeviceInstance) that
 meet the filter criteria.

 Applicable filters: RelationshipTypeFilter, DateRangeFilter

 @param accountDeviceInstance Account of interest
 @param filter                Filters to apply.

 @return number of account relationships found for this account.

 @throws org.sleuthkit.datamodel.TskCoreException]]>
      </doc>
    </method>
    <method name="getRelationshipSources" return="java.util.Set&lt;org.sleuthkit.datamodel.Content&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="accountDeviceInstanceList" type="java.util.Set&lt;org.sleuthkit.datamodel.AccountDeviceInstance&gt;"/>
      <param name="filter" type="org.sleuthkit.datamodel.CommunicationsFilter"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get the unique relationship sources (such as EMAIL artifacts) associated
 with accounts on specific devices (AccountDeviceInstance) that meet the
 filter criteria.

 Applicable filters: RelationshipTypeFilter, DateRangeFilter,
 MostRecentFilter

 @param accountDeviceInstanceList set of account device instances for
                                  which to get the relationship sources.
 @param filter                    Filters to apply.

 @return relationship sources found for given account(s).

 @throws org.sleuthkit.datamodel.TskCoreException]]>
      </doc>
    </method>
    <method name="getRelatedAccountDeviceInstances" return="java.util.List&lt;org.sleuthkit.datamodel.AccountDeviceInstance&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="accountDeviceInstance" type="org.sleuthkit.datamodel.AccountDeviceInstance"/>
      <param name="filter" type="org.sleuthkit.datamodel.CommunicationsFilter"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get a set of AccountDeviceInstances that have relationships with the
 given AccountDeviceInstance and meet the criteria of the given filter.

 Applicable filters: DeviceFilter, DateRangeFilter, RelationshipTypeFilter

 @param accountDeviceInstance The account device instance.
 @param filter                The filters to apply.

 @return A set of AccountDeviceInstances that have relationships with the
         given AccountDeviceInstance and meet the criteria of the given
         filter.

 @throws TskCoreException if there is a serious error executing he query.]]>
      </doc>
    </method>
    <method name="getRelationshipSources" return="java.util.List&lt;org.sleuthkit.datamodel.Content&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="account1" type="org.sleuthkit.datamodel.AccountDeviceInstance"/>
      <param name="account2" type="org.sleuthkit.datamodel.AccountDeviceInstance"/>
      <param name="filter" type="org.sleuthkit.datamodel.CommunicationsFilter"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get the sources (artifacts, content) of relationships between the given
 account device instances.

 Applicable filters: DeviceFilter, DateRangeFilter,
 RelationshipTypeFilter, MostRecentFilter

 @param account1 First AccountDeviceInstance
 @param account2 Second AccountDeviceInstance
 @param filter   Filters to apply.

 @return relationship sources for relationships between account1 and
         account2.

 @throws org.sleuthkit.datamodel.TskCoreException]]>
      </doc>
    </method>
    <method name="getAccountFileInstances" return="java.util.List&lt;org.sleuthkit.datamodel.AccountFileInstance&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="account" type="org.sleuthkit.datamodel.Account"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get a list AccountFileInstance for the given accounts.

 @param account List of accounts

 @return	A lit of AccountFileInstances for the given accounts or null if
         none are found.

 @throws org.sleuthkit.datamodel.TskCoreException]]>
      </doc>
    </method>
    <method name="getAccountTypesInUse" return="java.util.List&lt;org.sleuthkit.datamodel.Account.Type&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets a list of the distinct account types that can currently be found in
 the case db.

 @return A list of distinct accounts or an empty list.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getAccountsRelatedToArtifact" return="java.util.List&lt;org.sleuthkit.datamodel.Account&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifact" type="org.sleuthkit.datamodel.BlackboardArtifact"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets a list of accounts that are related to the given artifact.

 @param artifact

 @return A list of distinct accounts or an empty list if none where found.

 @throws TskCoreException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Provides an API to create Accounts and communications/relationships between
 accounts.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.CommunicationsManager -->
  <!-- start class org.sleuthkit.datamodel.CommunicationsUtils -->
  <class name="CommunicationsUtils" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="normalizePhoneNum" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="phoneNumber" type="java.lang.String"/>
      <exception name="InvalidAccountIDException" type="org.sleuthkit.datamodel.InvalidAccountIDException"/>
      <doc>
      <![CDATA[Normalize the given phone number by removing all non numeric characters,
 except: a leading + # or * or ,

 Note: this method intentionally performs a rather lenient validation of
 the phone number in order to not drop any collected data.

 @param phoneNumber The string to normalize.

 @return The normalized phone number.

 @throws InvalidAccountIDException If the given string is not a valid
                                   phone number.]]>
      </doc>
    </method>
    <method name="normalizeEmailAddress" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="emailAddress" type="java.lang.String"/>
      <exception name="InvalidAccountIDException" type="org.sleuthkit.datamodel.InvalidAccountIDException"/>
      <doc>
      <![CDATA[Normalizes the given email address.

 @param emailAddress The email address string to be normalized.

 @return The normalized email address.

 @throws InvalidAccountIDException If the given string is not a valid
                                   email address.]]>
      </doc>
    </method>
    <method name="isValidAccountId" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="accountType" type="org.sleuthkit.datamodel.Account.Type"/>
      <param name="accountUniqueID" type="java.lang.String"/>
      <doc>
      <![CDATA[Checks if the given accountId is a valid id for the specified account
 type.

 @param accountType     Account type.
 @param accountUniqueID Id to check.

 @return True, if the id is a valid id for the given account type, False
         otherwise.]]>
      </doc>
    </method>
    <method name="isValidPhoneNumber" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="phoneNum" type="java.lang.String"/>
      <doc>
      <![CDATA[Checks if the given string is a valid phone number.

 NOTE: this method intentionally performs a rather lenient validation of
 the phone number in order to not drop any collected data.

 @param phoneNum Phone number string to check.

 @return True if the given string is a valid phone number, false
         otherwise.]]>
      </doc>
    </method>
    <method name="isValidEmailAddress" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="emailAddress" type="java.lang.String"/>
      <doc>
      <![CDATA[Checks if the given string is a valid email address.

 Note: this method intentionally performs a rather lenient validation in
 order to not drop any collected data.

 Note: We are requiring that an email address have a "." on the right-hand
 side to allow us to differentiate between app-specific identifiers and
 email addresses. We realize that some emails can be sent within
 enterprises without a ".', but that this is less common than encountering
 app-specific identifiers of the form a(at)b.

 @param emailAddress String to check.

 @return True if the given string is a valid email address, false
         otherwise.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Provides general utility methods related to communications artifacts.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.CommunicationsUtils -->
  <!-- start interface org.sleuthkit.datamodel.Content -->
  <interface name="Content"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="org.sleuthkit.datamodel.SleuthkitVisitableItem"/>
    <method name="read" return="int"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="buf" type="byte[]"/>
      <param name="offset" type="long"/>
      <param name="len" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Reads data that this content object is associated with (file contents,
 volume contents, etc.).

 @param buf    a character array of data (in bytes) to copy read data to
 @param offset byte offset in the content to start reading from
 @param len    number of bytes to read into buf.

 @return num of bytes read, or -1 on error

 @throws TskCoreException if critical error occurred during read in the
                          tsk core]]>
      </doc>
    </method>
    <method name="close"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Free native resources after read is done on the Content object. After
 closing, read can be called again on the same Content object, which
 should result in re-opening of new native resources.]]>
      </doc>
    </method>
    <method name="getSize" return="long"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the (reported) size of the content object and, in theory, how much
 you should be able to read from it. In some cases, data corruption may
 mean that you cannot read this much data.

 @return size of the content in bytes]]>
      </doc>
    </method>
    <method name="accept" return="T"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="v" type="org.sleuthkit.datamodel.ContentVisitor&lt;T&gt;"/>
      <doc>
      <![CDATA[Visitor pattern support

 @param v visitor supplying an algorithm to run on the content object

 @return visitor return value resulting from running the algorithm]]>
      </doc>
    </method>
    <method name="getName" return="java.lang.String"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the name of this content object (does not include parent path)

 @return the name]]>
      </doc>
    </method>
    <method name="getUniquePath" return="java.lang.String"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[@return returns the full path to this Content object starting with a "/"
         followed by the Image name and similarly for all other segments
         in the hierarchy.]]>
      </doc>
    </method>
    <method name="getId" return="long"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns the unique object ID that was assigned to it in the database.
 This is a Sleuth Kit database-assigned number.

 @return object id]]>
      </doc>
    </method>
    <method name="getDataSource" return="org.sleuthkit.datamodel.Content"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the root data source (image, virtual directory, etc.) of this
 content.

 @return Content associated with data source or null if one can't be found

 @throws TskCoreException if critical error occurred within tsk core]]>
      </doc>
    </method>
    <method name="getChildren" return="java.util.List&lt;org.sleuthkit.datamodel.Content&gt;"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the child content objects of this content.

 @return List of children

 @throws TskCoreException if critical error occurred within tsk core]]>
      </doc>
    </method>
    <method name="hasChildren" return="boolean"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Returns true if the content object has children objects. Note, this
 should be more efficient than getting children and checking it empty.

 @return true if has children, false otherwise.

 @throws TskCoreException if critical error occurred within tsk core]]>
      </doc>
    </method>
    <method name="getChildrenCount" return="int"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Returns count of children objects. Note, this should be more efficient
 than getting children and counting them.

 @return children count

 @throws TskCoreException if critical error occurred within tsk core]]>
      </doc>
    </method>
    <method name="getParent" return="org.sleuthkit.datamodel.Content"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[@return returns the parent of this Content object or null if there isn't
         one as is the case for Image.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getChildrenIds" return="java.util.List&lt;java.lang.Long&gt;"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the child content ids of this content.

 @return List of children ids

 @throws TskCoreException if critical error occurred within tsk core]]>
      </doc>
    </method>
    <method name="newArtifact" return="org.sleuthkit.datamodel.BlackboardArtifact"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactTypeID" type="int"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Create and add an artifact associated with this content to the blackboard

 @param artifactTypeID id of the artifact type (if the id doesn't already
                       exist an exception will be thrown)

 @return the blackboard artifact created (the artifact type id can be
         looked up from this)

 @throws TskCoreException if critical error occurred within tsk core]]>
      </doc>
    </method>
    <method name="newArtifact" return="org.sleuthkit.datamodel.BlackboardArtifact"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="type" type="org.sleuthkit.datamodel.BlackboardArtifact.ARTIFACT_TYPE"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Create and add an artifact associated with this content to the blackboard

 @param type artifact enum tyoe

 @return the blackboard artifact created (the artifact type id can be
         looked up from this)

 @throws TskCoreException if critical error occurred within tsk core]]>
      </doc>
    </method>
    <method name="newAnalysisResult" return="org.sleuthkit.datamodel.AnalysisResultAdded"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactType" type="org.sleuthkit.datamodel.BlackboardArtifact.Type"/>
      <param name="score" type="org.sleuthkit.datamodel.Score"/>
      <param name="conclusion" type="java.lang.String"/>
      <param name="configuration" type="java.lang.String"/>
      <param name="justification" type="java.lang.String"/>
      <param name="attributesList" type="java.util.Collection&lt;org.sleuthkit.datamodel.BlackboardAttribute&gt;"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Create and add an analysis result associated with this content.


 @param artifactType	 Type of analysis result artifact to create.
 @param score          Score associated with this analysis.
 @param conclusion     Conclusion from the analysis, may be empty.
 @param configuration  Configuration element associated with this
                       analysis, may be empty.
 @param justification	 Justification
 @param attributesList Additional attributes to attach to this analysis
                       result artifact.

 @return AnalysisResultAdded The analysis return added and the
         current aggregate score of content.

 @throws TskCoreException if critical error occurred within tsk core.]]>
      </doc>
    </method>
    <method name="newDataArtifact" return="org.sleuthkit.datamodel.DataArtifact"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactType" type="org.sleuthkit.datamodel.BlackboardArtifact.Type"/>
      <param name="attributesList" type="java.util.Collection&lt;org.sleuthkit.datamodel.BlackboardAttribute&gt;"/>
      <param name="osAccount" type="org.sleuthkit.datamodel.OsAccount"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Create and add a data artifact associated with this content.

 @param artifactType   Type of analysis result artifact to create.
 @param attributesList Additional attributes to attach to this data
                       artifact.
 @param osAccount      The OS account associated with the artifact. May be
                       null.

 @return DataArtifact New data artifact.

 @throws TskCoreException If a critical error occurred within tsk core.]]>
      </doc>
    </method>
    <method name="getAggregateScore" return="org.sleuthkit.datamodel.Score"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Returns the final score for the content object.
 
 @return Score.
 
 @throws TskCoreException if critical error occurred within tsk core.]]>
      </doc>
    </method>
    <method name="getArtifacts" return="java.util.ArrayList&lt;org.sleuthkit.datamodel.BlackboardArtifact&gt;"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactTypeName" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all artifacts associated with this content that have the given type
 name

 @param artifactTypeName name of the type to look up

 @return a list of blackboard artifacts matching the type

 @throws TskCoreException if critical error occurred within tsk core]]>
      </doc>
    </method>
    <method name="getAnalysisResults" return="java.util.List&lt;org.sleuthkit.datamodel.AnalysisResult&gt;"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactType" type="org.sleuthkit.datamodel.BlackboardArtifact.Type"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all analysis results associated with this content, that have the given type.

 @param artifactType  Type to look up.

 @return A list of analysis result artifacts matching the type.

 @throws TskCoreException If critical error occurred within tsk core.]]>
      </doc>
    </method>
    <method name="getGenInfoArtifact" return="org.sleuthkit.datamodel.BlackboardArtifact"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Return the TSK_GEN_INFO artifact for the file so that individual
 attributes can be added to it. Creates one if it does not already exist.

 @return Instance of the TSK_GEN_INFO artifact

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getGenInfoArtifact" return="org.sleuthkit.datamodel.BlackboardArtifact"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="create" type="boolean"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Return the TSK_GEN_INFO artifact for the file so that individual
 attributes can be added to it. If one does not create, behavior depends
 on the create argument.

 @param create If true, an artifact will be created if it does not already
               exist.

 @return Instance of the TSK_GEN_INFO artifact or null if artifact does
         not already exist and create was set to false

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getGenInfoAttributes" return="java.util.ArrayList&lt;org.sleuthkit.datamodel.BlackboardAttribute&gt;"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="attr_type" type="org.sleuthkit.datamodel.BlackboardAttribute.ATTRIBUTE_TYPE"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Return attributes of a given type from TSK_GEN_INFO.

 @param attr_type Attribute type to find inside of the TSK_GEN_INFO
                  artifact.

 @return Attributes]]>
      </doc>
    </method>
    <method name="getArtifacts" return="java.util.ArrayList&lt;org.sleuthkit.datamodel.BlackboardArtifact&gt;"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactTypeID" type="int"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all artifacts associated with this content that have the given type
 id

 @param artifactTypeID type id to look up

 @return a list of blackboard artifacts matching the type

 @throws TskCoreException if critical error occurred within tsk core]]>
      </doc>
    </method>
    <method name="getArtifacts" return="java.util.ArrayList&lt;org.sleuthkit.datamodel.BlackboardArtifact&gt;"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="type" type="org.sleuthkit.datamodel.BlackboardArtifact.ARTIFACT_TYPE"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all artifacts associated with this content that have the given type

 @param type type to look up

 @return a list of blackboard artifacts matching the type

 @throws TskCoreException if critical error occurred within tsk core]]>
      </doc>
    </method>
    <method name="getAllArtifacts" return="java.util.ArrayList&lt;org.sleuthkit.datamodel.BlackboardArtifact&gt;"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all artifacts associated with this content

 @return a list of blackboard artifacts

 @throws TskCoreException if critical error occurred within tsk core]]>
      </doc>
    </method>
    <method name="getAllAnalysisResults" return="java.util.List&lt;org.sleuthkit.datamodel.AnalysisResult&gt;"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all analysis results associated with this content.

 @return A list of analysis results.

 @throws TskCoreException If critical error occurred within tsk core.]]>
      </doc>
    </method>
    <method name="getHashSetNames" return="java.util.Set&lt;java.lang.String&gt;"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get the names of all the hashsets that this content is in.

 @return the names of the hashsets that this content is in

 @throws TskCoreException if critical error occurred within tsk core]]>
      </doc>
    </method>
    <method name="getArtifactsCount" return="long"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactTypeName" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get count of all artifacts associated with this content that have the
 given type name

 @param artifactTypeName name of the type to look up

 @return count of blackboard artifacts matching the type

 @throws TskCoreException if critical error occurred within tsk core]]>
      </doc>
    </method>
    <method name="getArtifactsCount" return="long"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactTypeID" type="int"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get count of all artifacts associated with this content that have the
 given type id

 @param artifactTypeID type id to look up

 @return count of blackboard artifacts matching the type

 @throws TskCoreException if critical error occurred within tsk core]]>
      </doc>
    </method>
    <method name="getArtifactsCount" return="long"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="type" type="org.sleuthkit.datamodel.BlackboardArtifact.ARTIFACT_TYPE"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get count of all artifacts associated with this content that have the
 given type

 @param type type to look up

 @return count of blackboard artifacts matching the type

 @throws TskCoreException if critical error occurred within tsk core]]>
      </doc>
    </method>
    <method name="getAllArtifactsCount" return="long"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get count of all artifacts associated with this content

 @return count of all blackboard artifacts for this content

 @throws TskCoreException if critical error occurred within tsk core]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Interface for all datatypes that can be found in the database. Content
 objects make up a tree and each object can have a parent and children. For
 example, the child of an Image object is a Volume or File System. This
 interface defines the basic methods for reading the content associated with
 this object, the parent and children, and adding artifacts.]]>
    </doc>
  </interface>
  <!-- end interface org.sleuthkit.datamodel.Content -->
  <!-- start class org.sleuthkit.datamodel.ContentTag -->
  <class name="ContentTag" extends="org.sleuthkit.datamodel.Tag"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getContent" return="org.sleuthkit.datamodel.Content"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Return the tagged content
 
 @return tagged content]]>
      </doc>
    </method>
    <method name="hasByteExtent" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns whether the tag has a byte range
 
 @return true if the tag has a byte range, false otherwise]]>
      </doc>
    </method>
    <method name="getBeginByteOffset" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns starting offset of the byte range
 
 @return start offset]]>
      </doc>
    </method>
    <method name="getEndByteOffset" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns end offset of the byte range
 
 @return end offset]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Instances of this class are data transfer objects (DTOs) that represent tags
 a user can apply to content.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.ContentTag -->
  <!-- start interface org.sleuthkit.datamodel.ContentVisitor -->
  <interface name="ContentVisitor"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="visit" return="T"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="d" type="org.sleuthkit.datamodel.Directory"/>
      <doc>
      <![CDATA[Act on (visit) a Directory content object

 @param d the directory to visit / act on

 @return result of the visit]]>
      </doc>
    </method>
    <method name="visit" return="T"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="f" type="org.sleuthkit.datamodel.File"/>
      <doc>
      <![CDATA[Act on (visit) a File content object

 @param f File to visit / act on

 @return result of the visit]]>
      </doc>
    </method>
    <method name="visit" return="T"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="fs" type="org.sleuthkit.datamodel.FileSystem"/>
      <doc>
      <![CDATA[Act on (visit) a FileSystem content object

 @param fs file system to visit / act on

 @return result of the visit]]>
      </doc>
    </method>
    <method name="visit" return="T"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="i" type="org.sleuthkit.datamodel.Image"/>
      <doc>
      <![CDATA[Act on (visit) an Image content object

 @param i image to visit / act on

 @return result of the visit]]>
      </doc>
    </method>
    <method name="visit" return="T"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="p" type="org.sleuthkit.datamodel.Pool"/>
      <doc>
      <![CDATA[Act on (visit) a Pool content object

 @param p pool to visit / act on

 @return result of the visit]]>
      </doc>
    </method>
    <method name="visit" return="T"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="v" type="org.sleuthkit.datamodel.Volume"/>
      <doc>
      <![CDATA[Act on (visit) a Volume content object

 @param v volume to visit / act on

 @return result of the visit]]>
      </doc>
    </method>
    <method name="visit" return="T"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="vs" type="org.sleuthkit.datamodel.VolumeSystem"/>
      <doc>
      <![CDATA[Act on (visit) a VolumeSystem content object

 @param vs volume system to visit / act on

 @return result of the visit]]>
      </doc>
    </method>
    <method name="visit" return="T"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="lf" type="org.sleuthkit.datamodel.LayoutFile"/>
      <doc>
      <![CDATA[Act on (visit) a LayoutFile content object

 @param lf layout file to visit / act on

 @return result of the visit]]>
      </doc>
    </method>
    <method name="visit" return="T"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="vd" type="org.sleuthkit.datamodel.VirtualDirectory"/>
      <doc>
      <![CDATA[Act on (visit) a VirtualDirectory content object

 @param vd virtual dir to visit / act on

 @return result of the visit]]>
      </doc>
    </method>
    <method name="visit" return="T"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ld" type="org.sleuthkit.datamodel.LocalDirectory"/>
      <doc>
      <![CDATA[Act on (visit) a LocalDirectory content object

 @param ld local dir to visit / act on

 @return result of the visit]]>
      </doc>
    </method>
    <method name="visit" return="T"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="lf" type="org.sleuthkit.datamodel.DerivedFile"/>
      <doc>
      <![CDATA[Act on (visit) a DerivedFile content object

 @param lf local file to visit / act on

 @return result of the visit]]>
      </doc>
    </method>
    <method name="visit" return="T"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="df" type="org.sleuthkit.datamodel.LocalFile"/>
      <doc>
      <![CDATA[Act on (visit) a LocalFile content object

 @param df derived file to visit / act on

 @return result of the visit]]>
      </doc>
    </method>
    <method name="visit" return="T"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="sf" type="org.sleuthkit.datamodel.SlackFile"/>
      <doc>
      <![CDATA[Act on (visit) a SlackFile content object

 @param sf slack file to visit / act on

 @return result of the visit]]>
      </doc>
    </method>
    <method name="visit" return="T"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ba" type="org.sleuthkit.datamodel.BlackboardArtifact"/>
      <doc>
      <![CDATA[Act on (visit) a blackboard artifact object

 @param ba blackboard artifact object to visit / act on

 @return result of the visit]]>
      </doc>
    </method>
    <method name="visit" return="T"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="r" type="org.sleuthkit.datamodel.Report"/>
      <doc>
      <![CDATA[Act on (visit) a Report object

 @param r report object to visit / act on

 @return result of the visit]]>
      </doc>
    </method>
    <method name="visit" return="T"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="act" type="org.sleuthkit.datamodel.OsAccount"/>
      <doc>
      <![CDATA[Act on (visit) a OsAccount object

 @param act OsAccount object to visit / act on

 @return result of the visit]]>
      </doc>
    </method>
    <method name="visit" return="T"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="uc" type="org.sleuthkit.datamodel.UnsupportedContent"/>
      <doc>
      <![CDATA[Act on (visit) an UnsupportedContent object

 @param uc UnsupportedContent object to visit / act on

 @return result of the visit]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Interface for implementing a visitor pattern on all Content implementations.
 Visitor implements an algorithm on the content object. The algorithm is
 completely decoupled from the content object. The visitor pattern emulates
 double dispatch mechanism. It allows to act differently depending on the
 instance type, without need to test what the actual type is. E.g. it allows
 for processing a Content object hierarchy without using instanceof
 statements. Generic type parameter T is a return type from the visit methods.

 @param <T> return type of visit methods]]>
    </doc>
  </interface>
  <!-- end interface org.sleuthkit.datamodel.ContentVisitor -->
  <!-- start class org.sleuthkit.datamodel.ContentVisitor.Default -->
  <class name="ContentVisitor.Default" extends="java.lang.Object"
    abstract="true"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="org.sleuthkit.datamodel.ContentVisitor&lt;T&gt;"/>
    <constructor name="Default"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="defaultVisit" return="T"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="c" type="org.sleuthkit.datamodel.Content"/>
    </method>
    <method name="visit" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="d" type="org.sleuthkit.datamodel.Directory"/>
    </method>
    <method name="visit" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="f" type="org.sleuthkit.datamodel.File"/>
    </method>
    <method name="visit" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="fs" type="org.sleuthkit.datamodel.FileSystem"/>
    </method>
    <method name="visit" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="i" type="org.sleuthkit.datamodel.Image"/>
    </method>
    <method name="visit" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="v" type="org.sleuthkit.datamodel.Volume"/>
    </method>
    <method name="visit" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="p" type="org.sleuthkit.datamodel.Pool"/>
    </method>
    <method name="visit" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="vs" type="org.sleuthkit.datamodel.VolumeSystem"/>
    </method>
    <method name="visit" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="lf" type="org.sleuthkit.datamodel.LayoutFile"/>
    </method>
    <method name="visit" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ld" type="org.sleuthkit.datamodel.VirtualDirectory"/>
    </method>
    <method name="visit" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ld" type="org.sleuthkit.datamodel.LocalDirectory"/>
    </method>
    <method name="visit" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="df" type="org.sleuthkit.datamodel.DerivedFile"/>
    </method>
    <method name="visit" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="lf" type="org.sleuthkit.datamodel.LocalFile"/>
    </method>
    <method name="visit" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="sf" type="org.sleuthkit.datamodel.SlackFile"/>
    </method>
    <method name="visit" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ba" type="org.sleuthkit.datamodel.BlackboardArtifact"/>
    </method>
    <method name="visit" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="r" type="org.sleuthkit.datamodel.Report"/>
    </method>
    <method name="visit" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="act" type="org.sleuthkit.datamodel.OsAccount"/>
    </method>
    <method name="visit" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="uc" type="org.sleuthkit.datamodel.UnsupportedContent"/>
    </method>
    <doc>
    <![CDATA[The default content visitor - quickest method for implementing a custom
 visitor. Every visit method delegates to the defaultVisit method, the
 only required method to be implemented. Then, implement the specific
 visit methods for the objects on which the algorithm needs to act
 differently.

 @param <T> generic type, signifies the object type to be returned from
            visit()]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.ContentVisitor.Default -->
  <!-- start class org.sleuthkit.datamodel.DataArtifact -->
  <class name="DataArtifact" extends="org.sleuthkit.datamodel.BlackboardArtifact"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="getOsAccountObjectId" return="java.util.Optional&lt;java.lang.Long&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the OS Account for this artifact.

 @return Optional with OsAccount, Optional.empty if there is no account.

 @throws TskCoreException If there is an error getting the account.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[DataArtifact is a category of artifact types that are simply data directly
 extracted from a data source.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.DataArtifact -->
  <!-- start interface org.sleuthkit.datamodel.DataSource -->
  <interface name="DataSource"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="org.sleuthkit.datamodel.Content"/>
    <method name="getDeviceId" return="java.lang.String"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the ASCII-printable identifier for the device associated with the
 data source. This identifier is intended to be unique across multiple
 cases (e.g., a UUID).

 @return The device id.]]>
      </doc>
    </method>
    <method name="getTimeZone" return="java.lang.String"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the time zone that was used to process the data source.

 @return The time zone.]]>
      </doc>
    </method>
    <method name="setDisplayName"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="newName" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Set the name for this data source.
 
 @param newName       The new name for the data source
 
 @throws TskCoreException Thrown if an error occurs while updating the database]]>
      </doc>
    </method>
    <method name="getContentSize" return="long"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="sleuthkitCase" type="org.sleuthkit.datamodel.SleuthkitCase"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the size of the contents of the data source in bytes. This size can
 change as archive files within the data source are expanded, files are
 carved, etc., and is different from the size of the data source as
 returned by Content.getSize, which is the size of the data source as a
 file.

 @param sleuthkitCase The sleuthkit case instance from which to make calls
                      to the database.

 @return The size in bytes.

 @throws TskCoreException Thrown when there is an issue trying to retrieve
                          data from the database.]]>
      </doc>
    </method>
    <method name="setAcquisitionDetails"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="details" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Sets the acquisition details field in the case database.
 
 @param details The acquisition details
 
 @throws TskCoreException Thrown if the data can not be written]]>
      </doc>
    </method>
    <method name="setAcquisitionToolDetails"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <param name="version" type="java.lang.String"/>
      <param name="settings" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Sets the acquisition tool details such as its name, version number and
 any settings used during the acquisition to acquire data.

 @param name     The name of the acquisition tool. May be NULL.
 @param version  The acquisition tool version number. May be NULL.
 @param settings The settings used by the acquisition tool. May be NULL.

 @throws TskCoreException Thrown if the data can not be written]]>
      </doc>
    </method>
    <method name="getAcquisitionDetails" return="java.lang.String"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the acquisition details field from the case database.
 
 @return The acquisition details
 
 @throws TskCoreException Thrown if the data can not be read]]>
      </doc>
    </method>
    <method name="getAcquisitionToolSettings" return="java.lang.String"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the acquisition tool settings field from the case database.

 @return The acquisition tool settings. May be Null if not set.

 @throws TskCoreException Thrown if the data can not be read]]>
      </doc>
    </method>
    <method name="getAcquisitionToolName" return="java.lang.String"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the acquisition tool name field from the case database.

 @return The acquisition tool name. May be Null if not set.

 @throws TskCoreException Thrown if the data can not be read]]>
      </doc>
    </method>
    <method name="getAcquisitionToolVersion" return="java.lang.String"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the acquisition tool version field from the case database.

 @return The acquisition tool version. May be Null if not set. 

 @throws TskCoreException Thrown if the data can not be read]]>
      </doc>
    </method>
    <method name="getDateAdded" return="java.lang.Long"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the added date field from the case database.

 @return The date time when the image was added in epoch seconds.

 @throws TskCoreException Thrown if the data can not be read]]>
      </doc>
    </method>
    <method name="getHost" return="org.sleuthkit.datamodel.Host"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the host for this data source.
 
 @return The host
 
 @throws TskCoreException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[A data source (e.g., an image, a local disk, a virtual directory of logical
 files, etc.).]]>
    </doc>
  </interface>
  <!-- end interface org.sleuthkit.datamodel.DataSource -->
  <!-- start class org.sleuthkit.datamodel.DefaultAddDataSourceCallbacks -->
  <class name="DefaultAddDataSourceCallbacks" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="org.sleuthkit.datamodel.AddDataSourceCallbacks"/>
    <constructor name="DefaultAddDataSourceCallbacks"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="onFilesAdded"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="fileObjectIds" type="java.util.List&lt;java.lang.Long&gt;"/>
    </method>
    <doc>
    <![CDATA[Do-nothing version of AddDataSourceCallbacks]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.DefaultAddDataSourceCallbacks -->
  <!-- start class org.sleuthkit.datamodel.DerivedFile -->
  <class name="DerivedFile" extends="org.sleuthkit.datamodel.AbstractFile"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="DerivedFile" type="org.sleuthkit.datamodel.SleuthkitCase, long, java.lang.String, org.sleuthkit.datamodel.TskData.TSK_FS_NAME_TYPE_ENUM, org.sleuthkit.datamodel.TskData.TSK_FS_META_TYPE_ENUM, org.sleuthkit.datamodel.TskData.TSK_FS_NAME_FLAG_ENUM, short, long, long, long, long, long, java.lang.String, org.sleuthkit.datamodel.TskData.FileKnown, java.lang.String, java.lang.String, long"
      static="false" final="false" visibility="protected"
      deprecated="Do not make subclasses outside of this package.">
      <doc>
      <![CDATA[Constructs a representation of a file or directory that has been derived
 from another file and is stored outside of the data source (e.g., on a
 user's machine). A typical example of a derived file is a file extracted
 from an archive file.

 @param db         The case database to which the file has been added.
 @param objId      The object id of the file in the case database.
 @param name       The name of the file.
 @param dirType    The type of the file, usually as reported in the name
                   structure of the file system. May be set to
                   TSK_FS_NAME_TYPE_ENUM.UNDEF.
 @param metaType   The type of the file, usually as reported in the
                   metadata structure of the file system. May be set to
                   TSK_FS_META_TYPE_ENUM.TSK_FS_META_TYPE_UNDEF.
 @param dirFlag    The allocated status of the file, usually as reported
                   in the name structure of the file system.
 @param metaFlags  The allocated status of the file, usually as reported
                   in the metadata structure of the file system.
 @param size       The size of the file.
 @param ctime      The changed time of the file.
 @param crtime     The created time of the file.
 @param atime      The accessed time of the file.
 @param mtime      The modified time of the file.
 @param md5Hash    The MD5 hash of the file, null if not yet calculated.
 @param knownState The known state of the file from a hash database
                   lookup, null if not yet looked up.
 @param parentPath The path of the parent of the file.
 @param localPath  The absolute path of the file in secondary storage.
 @param parentId   The object id of parent of the file.

 @deprecated Do not make subclasses outside of this package.]]>
      </doc>
    </constructor>
    <method name="isRoot" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Indicates whether or not this derived file is the root of a file system,
 always returns false.

 @return False.]]>
      </doc>
    </method>
    <method name="getDerivedMethod" return="org.sleuthkit.datamodel.DerivedFile.DerivedMethod"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the method used to derive this file, if it has been recorded.

 @return Derived method or null.

 @throws TskCoreException if there was an error querying the case
                          database.]]>
      </doc>
    </method>
    <method name="accept" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="v" type="org.sleuthkit.datamodel.SleuthkitItemVisitor&lt;T&gt;"/>
      <doc>
      <![CDATA[Accepts a content visitor (Visitor design pattern).

 @param visitor A ContentVisitor supplying an algorithm to run using this
                derived file as input.

 @return The output of the algorithm.]]>
      </doc>
    </method>
    <method name="accept" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="v" type="org.sleuthkit.datamodel.ContentVisitor&lt;T&gt;"/>
      <doc>
      <![CDATA[Accepts a Sleuthkit item visitor (Visitor design pattern).

 @param visitor A SleuthkitItemVisitor supplying an algorithm to run using
                this derived file as input.

 @return The output of the algorithm.]]>
      </doc>
    </method>
    <method name="finalize"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <exception name="Throwable" type="java.lang.Throwable"/>
      <doc>
      <![CDATA[Closes this derived file, if it was open.

 @throws Throwable]]>
      </doc>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="preserveState" type="boolean"/>
      <doc>
      <![CDATA[Provides a string representation of this derived file.

 @param preserveState True if state should be included in the string
                      representation of this object.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[A representation of a file or directory that has been derived from another
 file and is stored outside of the data source (e.g., on a user's machine). A
 typical example of a derived file is a file extracted from an archive file.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.DerivedFile -->
  <!-- start class org.sleuthkit.datamodel.DerivedFile.DerivedMethod -->
  <class name="DerivedFile.DerivedMethod" extends="java.lang.Object"
    abstract="false"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="DerivedMethod" type="int, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getDerivedId" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getToolName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getToolVersion" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getOther" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getRederiveDetails" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[A description of the method used to derive a file.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.DerivedFile.DerivedMethod -->
  <!-- start class org.sleuthkit.datamodel.Directory -->
  <class name="Directory" extends="org.sleuthkit.datamodel.FsContent"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="Directory" type="org.sleuthkit.datamodel.SleuthkitCase, long, long, org.sleuthkit.datamodel.TskData.TSK_FS_ATTR_TYPE_ENUM, short, java.lang.String, long, int, org.sleuthkit.datamodel.TskData.TSK_FS_NAME_TYPE_ENUM, org.sleuthkit.datamodel.TskData.TSK_FS_META_TYPE_ENUM, org.sleuthkit.datamodel.TskData.TSK_FS_NAME_FLAG_ENUM, short, long, long, long, long, long, short, int, int, java.lang.String, org.sleuthkit.datamodel.TskData.FileKnown, java.lang.String"
      static="false" final="false" visibility="protected"
      deprecated="Do not make subclasses outside of this package.">
      <doc>
      <![CDATA[Constructs a representation of a file system directory that has been
 added to a case.

 @param db         The case database to which the file has been added.
 @param objId      The object id of the file in the case database.
 @param fsObjId    The object id of the file system to which this file
                   belongs.
 @param attrType   The type attribute given to the file by the file
                   system.
 @param attrId     The type id given to the file by the file system.
 @param name       The name of the file.
 @param metaAddr   The meta address of the file.
 @param metaSeq    The meta sequence number of the file.
 @param dirType    The type of the file, usually as reported in the name
                   structure of the file system. May be set to
                   TSK_FS_NAME_TYPE_ENUM.UNDEF.
 @param metaType   The type of the file, usually as reported in the
                   metadata structure of the file system. May be set to
                   TSK_FS_META_TYPE_ENUM.TSK_FS_META_TYPE_UNDEF.
 @param dirFlag    The allocated status of the file, usually as reported
                   in the name structure of the file system.
 @param metaFlags  The allocated status of the file, usually as reported
                   in the metadata structure of the file system.
 @param size       The size of the file.
 @param ctime      The changed time of the file.
 @param crtime     The created time of the file.
 @param atime      The accessed time of the file.
 @param mtime      The modified time of the file.
 @param modes      The modes for the file.
 @param uid        The UID for the file.
 @param gid        The GID for the file.
 @param md5Hash    The MD5 hash of the file, null if not yet calculated.
 @param knownState The known state of the file from a hash database
                   lookup, null if not yet looked up.
 @param parentPath The path of the parent of the file.

 @deprecated Do not make subclasses outside of this package.]]>
      </doc>
    </constructor>
    <method name="accept" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="v" type="org.sleuthkit.datamodel.SleuthkitItemVisitor&lt;T&gt;"/>
      <doc>
      <![CDATA[Accepts a content visitor (Visitor design pattern).

 @param visitor A ContentVisitor supplying an algorithm to run using this
                directory as input.

 @return The output of the algorithm.]]>
      </doc>
    </method>
    <method name="accept" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="v" type="org.sleuthkit.datamodel.ContentVisitor&lt;T&gt;"/>
      <doc>
      <![CDATA[Accepts a Sleuthkit item visitor (Visitor design pattern).

 @param visitor A SleuthkitItemVisitor supplying an algorithm to run using
                this directory as input.

 @return The output of the algorithm.]]>
      </doc>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="preserveState" type="boolean"/>
      <doc>
      <![CDATA[Provides a string representation of this directory.

 @param preserveState True if state should be included in the string
                      representation of this object.

 @throws TskCoreException if there was an error querying the case
                          database.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[A representation of a file system directory that has been added to a case.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.Directory -->
  <!-- start class org.sleuthkit.datamodel.EncodedFileOutputStream -->
  <class name="EncodedFileOutputStream" extends="java.io.BufferedOutputStream"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="EncodedFileOutputStream" type="java.io.OutputStream, org.sleuthkit.datamodel.TskData.EncodingType"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="IOException" type="java.io.IOException"/>
      <doc>
      <![CDATA[Create an encoded output stream using the specified encoding.

 @param out
 @param type

 @throws IOException]]>
      </doc>
    </constructor>
    <constructor name="EncodedFileOutputStream" type="java.io.OutputStream, int, org.sleuthkit.datamodel.TskData.EncodingType"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="IOException" type="java.io.IOException"/>
      <doc>
      <![CDATA[Create an encoded output stream using the specified encoding and buffer
 size.

 @param out
 @param size
 @param type

 @throws IOException]]>
      </doc>
    </constructor>
    <method name="write"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="b" type="int"/>
      <exception name="IOException" type="java.io.IOException"/>
    </method>
    <method name="write"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="b" type="byte[]"/>
      <param name="off" type="int"/>
      <param name="len" type="int"/>
      <exception name="IOException" type="java.io.IOException"/>
    </method>
    <method name="getBytesWritten" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the number of bytes written to the file, excluding header bytes.
 This is needed for storing the original length of the file in the
 tsk_files table in cases where we don't know the size in advance.
 
 @return the number of bytes written to the stream, excluding the header.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Output stream wrapper for encoding files being written to disk. The idea is
 to prevent malicious files from getting extracted onto the user's hard drive
 in their original form. The encoding type used here should match the one used
 to create the derived file database entry for this file.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.EncodedFileOutputStream -->
  <!-- start class org.sleuthkit.datamodel.Examiner -->
  <class name="Examiner" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="getId" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns the id

 @return id]]>
      </doc>
    </method>
    <method name="getLoginName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns the login name of examiner

 @return login name]]>
      </doc>
    </method>
    <method name="getDisplayName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns the display name of examiner

 @return display name, may be a blank string]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Encapsulates the concept of an examiner associated with a case.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.Examiner -->
  <!-- start class org.sleuthkit.datamodel.File -->
  <class name="File" extends="org.sleuthkit.datamodel.FsContent"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="File" type="org.sleuthkit.datamodel.SleuthkitCase, long, long, org.sleuthkit.datamodel.TskData.TSK_FS_ATTR_TYPE_ENUM, short, java.lang.String, long, int, org.sleuthkit.datamodel.TskData.TSK_FS_NAME_TYPE_ENUM, org.sleuthkit.datamodel.TskData.TSK_FS_META_TYPE_ENUM, org.sleuthkit.datamodel.TskData.TSK_FS_NAME_FLAG_ENUM, short, long, long, long, long, long, short, int, int, java.lang.String, org.sleuthkit.datamodel.TskData.FileKnown, java.lang.String"
      static="false" final="false" visibility="protected"
      deprecated="Do not make subclasses outside of this package.">
      <doc>
      <![CDATA[Constructs a representation of a file system file that has been added to
 the case.

 @param db         The case database to which the file has been added.
 @param objId      The object id of the file in the case database.
 @param fsObjId    The object id of the file system to which this file
                   belongs.
 @param attrType   The type attribute given to the file by the file
                   system.
 @param attrId     The type id given to the file by the file system.
 @param name       The name of the file.
 @param metaAddr   The meta address of the file.
 @param metaSeq    The meta sequence number of the file.
 @param dirType    The type of the file, usually as reported in the name
                   structure of the file system. May be set to
                   TSK_FS_NAME_TYPE_ENUM.UNDEF.
 @param metaType   The type of the file, usually as reported in the
                   metadata structure of the file system. May be set to
                   TSK_FS_META_TYPE_ENUM.TSK_FS_META_TYPE_UNDEF.
 @param dirFlag    The allocated status of the file, usually as reported
                   in the name structure of the file system.
 @param metaFlags  The allocated status of the file, usually as reported
                   in the metadata structure of the file system.
 @param size       The size of the file.
 @param ctime      The changed time of the file.
 @param crtime     The created time of the file.
 @param atime      The accessed time of the file.
 @param mtime      The modified time of the file.
 @param modes      The modes for the file.
 @param uid        The UID for the file.
 @param gid        The GID for the file.
 @param md5Hash    The MD5 hash of the file, null if not yet calculated.
 @param knownState The known state of the file from a hash database
                   lookup, null if not yet looked up.
 @param parentPath The path of the parent of the file.

 @deprecated Do not make subclasses outside of this package.]]>
      </doc>
    </constructor>
    <method name="accept" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="visitor" type="org.sleuthkit.datamodel.SleuthkitItemVisitor&lt;T&gt;"/>
      <doc>
      <![CDATA[Accepts a content visitor (Visitor design pattern).

 @param visitor A ContentVisitor supplying an algorithm to run using this
                file as input.

 @return The output of the algorithm.]]>
      </doc>
    </method>
    <method name="accept" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="v" type="org.sleuthkit.datamodel.ContentVisitor&lt;T&gt;"/>
      <doc>
      <![CDATA[Accepts a Sleuthkit item visitor (Visitor design pattern).

 @param visitor A SleuthkitItemVisitor supplying an algorithm to run using
                this file as input.

 @return The output of the algorithm.]]>
      </doc>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="preserveState" type="boolean"/>
      <doc>
      <![CDATA[Provides a string representation of this file.

 @param preserveState True if state should be included in the string
                      representation of this object.

 @throws TskCoreException if there was an error querying the case
                          database.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[A representation of a file system file that has been added to a case.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.File -->
  <!-- start class org.sleuthkit.datamodel.FileSystem -->
  <class name="FileSystem" extends="org.sleuthkit.datamodel.AbstractContent"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="FileSystem" type="org.sleuthkit.datamodel.SleuthkitCase, long, java.lang.String, long, org.sleuthkit.datamodel.TskData.TSK_FS_TYPE_ENUM, long, long, long, long, long"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructor most inputs are from the database

 @param db          the case handle
 @param obj_id      the unique object id
 @param name        filesystem name
 @param img_offset  image offset
 @param fs_type     filesystem type
 @param block_size  block size in this fs
 @param block_count number of blocks in this fs
 @param root_inum   the root inum
 @param first_inum  the first inum
 @param last_inum   the last inum]]>
      </doc>
    </constructor>
    <method name="close"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="read" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="buf" type="byte[]"/>
      <param name="offset" type="long"/>
      <param name="len" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getSize" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getRootDirectory" return="org.sleuthkit.datamodel.Directory"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getImageOffset" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the byte offset of this file system in the image

 @return offset]]>
      </doc>
    </method>
    <method name="getFsType" return="org.sleuthkit.datamodel.TskData.TSK_FS_TYPE_ENUM"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the file system type

 @return enum value of fs type]]>
      </doc>
    </method>
    <method name="getBlock_size" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the block size

 @return block size]]>
      </doc>
    </method>
    <method name="getBlock_count" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the number of blocks

 @return block count]]>
      </doc>
    </method>
    <method name="getRoot_inum" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the inum of the root directory

 @return Root metadata address of the file system]]>
      </doc>
    </method>
    <method name="getFirst_inum" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the first inum in this file system

 @return first inum]]>
      </doc>
    </method>
    <method name="getLastInum" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the last inum

 @return last inum]]>
      </doc>
    </method>
    <method name="finalize"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="Throwable" type="java.lang.Throwable"/>
    </method>
    <method name="accept" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="v" type="org.sleuthkit.datamodel.SleuthkitItemVisitor&lt;T&gt;"/>
    </method>
    <method name="accept" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="v" type="org.sleuthkit.datamodel.ContentVisitor&lt;T&gt;"/>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="preserveState" type="boolean"/>
    </method>
    <doc>
    <![CDATA[Represents a file system object stored in tsk_fs_info table FileSystem has a
 parent content object (volume or image) and children content objects (files
 and directories) and fs-specific attributes. The object also maintains a
 handle to internal file-system structures and the handle is reused across
 reads.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.FileSystem -->
  <!-- start class org.sleuthkit.datamodel.FsContent -->
  <class name="FsContent" extends="org.sleuthkit.datamodel.AbstractFile"
    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getFileSystemId" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the object id of the parent file system of this file or directory.

 @return the parent file system id]]>
      </doc>
    </method>
    <method name="getFileSystem" return="org.sleuthkit.datamodel.FileSystem"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the parent file system of this file or directory.

 @return the file system object of the parent

 @throws org.sleuthkit.datamodel.TskCoreException]]>
      </doc>
    </method>
    <method name="readInt" return="int"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="buf" type="byte[]"/>
      <param name="offset" type="long"/>
      <param name="len" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Reads bytes from this file or directory.

 @param buf    Buffer to read into.
 @param offset Start position in the file.
 @param len    Number of bytes to read.

 @return Number of bytes read.

 @throws TskCoreException if there is a problem reading the file.]]>
      </doc>
    </method>
    <method name="isRoot" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getParentDirectory" return="org.sleuthkit.datamodel.AbstractFile"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the parent directory of this file or directory.

 @return The parent directory or null if there isn't one

 @throws TskCoreException if there was an error querying the case
                          database.]]>
      </doc>
    </method>
    <method name="getDataSource" return="org.sleuthkit.datamodel.Content"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the data source (image) for this file or directory directory.

 @return The data source.

 @throws TskCoreException if there is an error querying the case database.]]>
      </doc>
    </method>
    <method name="getUniquePath" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get the full path to this file or directory, starting with a "/" and the
 image name and then all the other segments in the path.

 @return A unique path for this object.

 @throws TskCoreException if there is an error querying the case database.]]>
      </doc>
    </method>
    <method name="getMetaDataText" return="java.util.List&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets a text-based description of the file's metadata. This is the same
 content as the TSK istat tool produces and is different information for
 each type of file system.

 @return List of text, one element per line.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="close"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Closes the JNI file handle for this file or directory.]]>
      </doc>
    </method>
    <method name="finalize"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="Throwable" type="java.lang.Throwable"/>
      <doc>
      <![CDATA[Closes the JNI file handle for this file or directory when the FsContent
 object is garbage-collected.]]>
      </doc>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="preserveState" type="boolean"/>
      <doc>
      <![CDATA[Provides a string representation of this file or directory.

 @param preserveState True if state should be included in the string
                      representation of this object.]]>
      </doc>
    </method>
    <field name="fsObjId" type="long"
      transient="false" volatile="false"
      static="false" final="true" visibility="protected"
      deprecated="Use getFileSystemId instead.">
      <doc>
      <![CDATA[@deprecated Use getFileSystemId instead.]]>
      </doc>
    </field>
    <field name="fileHandle" type="long"
      transient="false" volatile="true"
      static="false" final="false" visibility="protected"
      deprecated="Use getFileHandle instead.">
      <doc>
      <![CDATA[@deprecated Use getFileHandle instead.]]>
      </doc>
    </field>
    <doc>
    <![CDATA[An abstract base class for representations of a file system files or
 directories that have been added to a case.

 TODO move common getters to AbstractFile class]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.FsContent -->
  <!-- start class org.sleuthkit.datamodel.HashEntry -->
  <class name="HashEntry" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="HashEntry" type="java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getFileName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getMd5Hash" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getSha1Hash" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getSha256Hash" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getComment" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[Used to pass info about a hash so that it can be added into the TSK-db from
 Autopsy. HashHitInfo is for the reverse direction.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.HashEntry -->
  <!-- start class org.sleuthkit.datamodel.HashHitInfo -->
  <class name="HashHitInfo" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="HashHitInfo" type="java.lang.String, java.lang.String, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Default constructor when error message is not available]]>
      </doc>
    </constructor>
    <method name="addName"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <doc>
      <![CDATA[Add file name associated with this hash

 @param name]]>
      </doc>
    </method>
    <method name="addComment"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="comment" type="java.lang.String"/>
      <doc>
      <![CDATA[Add comment associated with this hash

 @param comment]]>
      </doc>
    </method>
    <method name="getHashMd5" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getHashSha1" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getHashSha256" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getNames" return="java.util.ArrayList&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getComments" return="java.util.ArrayList&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[Used to transmit hashDb information about a particular hash hit from the TSK
 lookup code to Autopsy. HashEntry is for the reverse direction (adding hashes
 to DB).]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.HashHitInfo -->
  <!-- start class org.sleuthkit.datamodel.HashUtility -->
  <class name="HashUtility" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="HashUtility"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="calculateHashes" return="java.util.List&lt;org.sleuthkit.datamodel.HashUtility.HashResult&gt;"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="content" type="org.sleuthkit.datamodel.Content"/>
      <param name="hashTypes" type="java.util.Collection&lt;org.sleuthkit.datamodel.HashUtility.HashType&gt;"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Calculate hashes of the content object.

 @param content   The content object to hash
 @param hashTypes The types of hash to compute

 @return A list of the hash results

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="isValidMd5Hash" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="md5Hash" type="java.lang.String"/>
      <doc>
      <![CDATA[Determines whether a string representation of an MD5 hash is valid.

 @param md5Hash The hash.

 @return True or false.]]>
      </doc>
    </method>
    <method name="isValidSha1Hash" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="sha1Hash" type="java.lang.String"/>
      <doc>
      <![CDATA[Determines whether a string representation of a SHA-1 hash is valid.

 @param sha1Hash The hash.

 @return True or false.]]>
      </doc>
    </method>
    <method name="isValidSha256Hash" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="sha256Hash" type="java.lang.String"/>
      <doc>
      <![CDATA[Determines whether a string representation of a SHA-256 hash is valid.

 @param sha256Hash The hash.

 @return True or false.]]>
      </doc>
    </method>
    <method name="isNoDataMd5" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="md5" type="java.lang.String"/>
      <doc>
      <![CDATA[Determine if the passed in Hash value is that for no data (i.e. an empty
 file). Looking these values up or correlating on them causes lots of
 false positives.

 @param md5

 @return True if it is the empty hash value]]>
      </doc>
    </method>
    <method name="calculateMd5" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="Use calculateHashes() instead">
      <param name="file" type="org.sleuthkit.datamodel.AbstractFile"/>
      <exception name="IOException" type="java.io.IOException"/>
      <doc>
      <![CDATA[Calculate the MD5 hash for the given FsContent and store it in the
 database

 @param file file object whose md5 hash we want to calculate

 @return md5 of the given FsContent object

 @throws java.io.IOException

 @deprecated Use calculateHashes() instead]]>
      </doc>
    </method>
    <method name="calculateMd5Hash" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="Use calculateHashes() instead">
      <param name="content" type="org.sleuthkit.datamodel.Content"/>
      <exception name="IOException" type="java.io.IOException"/>
      <doc>
      <![CDATA[Calculate the MD5 hash for the given FsContent

 @param content content object whose md5 hash we want to calculate

 @return md5 of the given FsContent object

 @throws java.io.IOException
 
 @deprecated Use calculateHashes() instead]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Utility to calculate a hash for FsContent and store in TSK database]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.HashUtility -->
  <!-- start class org.sleuthkit.datamodel.HashUtility.HashResult -->
  <class name="HashUtility.HashResult" extends="java.lang.Object"
    abstract="false"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="HashResult" type="org.sleuthkit.datamodel.HashUtility.HashType, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getType" return="org.sleuthkit.datamodel.HashUtility.HashType"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getValue" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[Utility class to hold a hash value along with its type.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.HashUtility.HashResult -->
  <!-- start class org.sleuthkit.datamodel.HashUtility.HashType -->
  <class name="HashUtility.HashType" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.HashUtility.HashType&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.HashUtility.HashType[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.HashUtility.HashType"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <doc>
    <![CDATA[Hash types that can be calculated.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.HashUtility.HashType -->
  <!-- start class org.sleuthkit.datamodel.Host -->
  <class name="Host" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="getHostId" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the row id for the host.

 @return Row id.]]>
      </doc>
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the name for the host.

 @return Host name.]]>
      </doc>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="obj" type="java.lang.Object"/>
    </method>
    <doc>
    <![CDATA[Encapsulates a host.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.Host -->
  <!-- start class org.sleuthkit.datamodel.Host.HostDbStatus -->
  <class name="Host.HostDbStatus" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.Host.HostDbStatus&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.Host.HostDbStatus[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.Host.HostDbStatus"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getId" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="fromID" return="org.sleuthkit.datamodel.Host.HostDbStatus"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="typeId" type="int"/>
    </method>
    <doc>
    <![CDATA[Encapsulates status of host row.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.Host.HostDbStatus -->
  <!-- start class org.sleuthkit.datamodel.HostAddress -->
  <class name="HostAddress" extends="org.sleuthkit.datamodel.AbstractContent"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="getId" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAddressType" return="org.sleuthkit.datamodel.HostAddress.HostAddressType"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAddress" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="obj" type="java.lang.Object"/>
    </method>
    <method name="getSleuthkitCase" return="org.sleuthkit.datamodel.SleuthkitCase"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the SleuthKit case database for this account.

 @return The SleuthKit case object.]]>
      </doc>
    </method>
    <method name="read" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="buf" type="byte[]"/>
      <param name="offset" type="long"/>
      <param name="len" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="close"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getSize" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="accept" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="v" type="org.sleuthkit.datamodel.ContentVisitor&lt;T&gt;"/>
    </method>
    <method name="accept" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="v" type="org.sleuthkit.datamodel.SleuthkitItemVisitor&lt;T&gt;"/>
    </method>
    <doc>
    <![CDATA[Abstracts an address associated with a host. A host may have multiple
 addressed of different types associated with it at a given time.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.HostAddress -->
  <!-- start class org.sleuthkit.datamodel.HostAddress.HostAddressType -->
  <class name="HostAddress.HostAddressType" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.HostAddress.HostAddressType&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.HostAddress.HostAddressType[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.HostAddress.HostAddressType"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getId" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="fromID" return="org.sleuthkit.datamodel.HostAddress.HostAddressType"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="typeId" type="int"/>
    </method>
    <doc>
    <![CDATA[A host may have different types of addresses at a given point in time.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.HostAddress.HostAddressType -->
  <!-- start class org.sleuthkit.datamodel.HostAddressManager -->
  <class name="HostAddressManager" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getHostAddress" return="java.util.Optional&lt;org.sleuthkit.datamodel.HostAddress&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="type" type="org.sleuthkit.datamodel.HostAddress.HostAddressType"/>
      <param name="address" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets an address record with given type and address.

 @param type    Address type.
 @param address Address.

 @return Matching address.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="newHostAddress" return="org.sleuthkit.datamodel.HostAddress"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="type" type="org.sleuthkit.datamodel.HostAddress.HostAddressType"/>
      <param name="address" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Add a new address with the given type and address. If the address already
 exists in the database, the existing entry will be returned.

 @param type    Address type.
 @param address Address (case-insensitive).

 @return HostAddress

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="assignHostToAddress"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="host" type="org.sleuthkit.datamodel.Host"/>
      <param name="hostAddress" type="org.sleuthkit.datamodel.HostAddress"/>
      <param name="time" type="java.lang.Long"/>
      <param name="source" type="org.sleuthkit.datamodel.Content"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Add a host to address mapping.

 @param host	       Host.
 @param hostAddress Address.
 @param time        Time at which the mapping was valid.
 @param source      Content from where this mapping was derived.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getHostAddress" return="org.sleuthkit.datamodel.HostAddress"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets an address for the given object id.

 @param id Object id.

 @return The corresponding HostAddress object.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="addHostNameAndIpMapping"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="dnsNameAddress" type="org.sleuthkit.datamodel.HostAddress"/>
      <param name="ipAddress" type="org.sleuthkit.datamodel.HostAddress"/>
      <param name="time" type="java.lang.Long"/>
      <param name="source" type="org.sleuthkit.datamodel.Content"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Adds a row to the ipAddress table.

 @param dnsNameAddress The DNS name.
 @param ipAddress      An IP address associated with the DNS name.
 @param time           Timestamp when this relationship was true.
 @param source         The source.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="addHostNameAndIpMapping"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="dnsNameAddress" type="org.sleuthkit.datamodel.HostAddress"/>
      <param name="ipAddress" type="org.sleuthkit.datamodel.HostAddress"/>
      <param name="time" type="java.lang.Long"/>
      <param name="source" type="org.sleuthkit.datamodel.Content"/>
      <param name="caseDbTransaction" type="org.sleuthkit.datamodel.SleuthkitCase.CaseDbTransaction"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Adds a row to the host address dns ip map table.

 @param dnsNameAddress    The DNS name.
 @param ipAddress         An IP address associated with the DNS name.
 @param time              Timestamp when this relationship was true.
 @param source            The source.
 @param caseDbTransaction The transaction in the scope of which the
                          operation is to be performed, managed by the
                          caller. Null is not permitted.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="hostNameAndIpMappingExists" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="addressObjectId" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Returns true if addressObjectId is used as either IP or host name
 <br>
 <b>Note:</b> This api call uses a database connection. Do not invoke within a transaction.
 
 @param addressObjectId
 @return 
 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="hostAddressExists" return="java.util.Optional&lt;java.lang.Long&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="type" type="org.sleuthkit.datamodel.HostAddress.HostAddressType"/>
      <param name="address" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Returns ObjectId of HostAddress if it exists.
 <br>
 <b>Note:</b> This api call uses a database connection. Do not invoke
 within a transaction.

 @param type
 @param address

 @return

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getIpAddress" return="java.util.List&lt;org.sleuthkit.datamodel.HostAddress&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="hostname" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the IP addresses for a given HOSTNAME name.

 @param hostname HOSTNAME name to look for.

 @return List of IP Addresses mapped to this dns name. May be empty.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="addUsage"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="content" type="org.sleuthkit.datamodel.Content"/>
      <param name="hostAddress" type="org.sleuthkit.datamodel.HostAddress"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Associate the given artifact with a HostAddress.

 @param content    The content/item using the address.
 @param hostAddress The host address.]]>
      </doc>
    </method>
    <method name="getHostAddressesUsedByContent" return="java.util.List&lt;org.sleuthkit.datamodel.HostAddress&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="content" type="org.sleuthkit.datamodel.Content"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all the addresses that have been used by the given content.

 @param content Content to get addresses used for.

 @return List of addresses, may be empty.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getHostAddressesUsedOnDataSource" return="java.util.List&lt;org.sleuthkit.datamodel.HostAddress&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="dataSource" type="org.sleuthkit.datamodel.Content"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all the addresses that have been used by the given data source.

 @param dataSource Data source to get addresses used for.

 @return List of addresses, may be empty.

 @throws TskCoreException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Responsible for creating/updating/retrieving host addresses.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.HostAddressManager -->
  <!-- start class org.sleuthkit.datamodel.HostManager -->
  <class name="HostManager" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="newHost" return="org.sleuthkit.datamodel.Host"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Create a host with specified name. If a host already exists with the
 given name, it returns the existing host.

 @param name	Host name.

 @return Host with the specified name.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="updateHostName" return="org.sleuthkit.datamodel.Host"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="host" type="org.sleuthkit.datamodel.Host"/>
      <param name="newName" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Updates the name of the provided host.

 @param host The host to be updated.
 @param newName The new name of the host.

 @return The updated host.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="deleteHost" return="java.lang.Long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Delete a host. Name comparison is case-insensitive.

 @param name Name of the host to delete.

 @return The id of the deleted host or null if no host was deleted.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getDataSourcesForHost" return="java.util.List&lt;org.sleuthkit.datamodel.DataSource&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="host" type="org.sleuthkit.datamodel.Host"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all data sources associated with a given host.

 @param host The host.

 @return The list of data sources corresponding to the host.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getHostByName" return="java.util.Optional&lt;org.sleuthkit.datamodel.Host&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get active host with given name.

 @param name Host name to look for.

 @return Optional with host. Optional.empty if no matching host is found.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getHostById" return="java.util.Optional&lt;org.sleuthkit.datamodel.Host&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get host with the given id.

 @param id The id of the host.

 @return Optional with host. Optional.empty if no matching host is found.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getAllHosts" return="java.util.List&lt;org.sleuthkit.datamodel.Host&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all hosts that have a status of ACTIVE.

 @return Collection of hosts that have ACTIVE status.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getHostByDataSource" return="org.sleuthkit.datamodel.Host"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="dataSource" type="org.sleuthkit.datamodel.DataSource"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get host for the given data source.

 @param dataSource The data source to look up the host for.

 @return The host for this data source (will not be null).

 @throws TskCoreException if no host is found or an error occurs.]]>
      </doc>
    </method>
    <method name="mergeHosts"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="sourceHost" type="org.sleuthkit.datamodel.Host"/>
      <param name="destHost" type="org.sleuthkit.datamodel.Host"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Merge source host into destination host.
 When complete:
 - All realms will have been moved into the destination host or merged with existing realms in the destination host.
 - All references to the source host will be updated to reference the destination host.
 - The source host will be updated so that it will no longer be returned by any methods
    apart from get by host id.
 
 @param sourceHost The source host.
 @param destHost   The destination host.
 
 @throws TskCoreException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Responsible for creating/updating/retrieving Hosts.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.HostManager -->
  <!-- start class org.sleuthkit.datamodel.Image -->
  <class name="Image" extends="org.sleuthkit.datamodel.AbstractContent"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="org.sleuthkit.datamodel.DataSource"/>
    <constructor name="Image" type="org.sleuthkit.datamodel.SleuthkitCase, long, long, long, java.lang.String, java.lang.String[], java.lang.String, java.lang.String"
      static="false" final="false" visibility="protected"
      deprecated="Use the constructor that takes a device ID and size.">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Create a disk image.

 Note: Most inputs originate from the database.

 @param db       Case database.
 @param obj_id   Object ID.
 @param type     Image type.
 @param ssize    Sector size.
 @param name     Display name.
 @param paths    Image paths.
 @param timezone Timezone.
 @param md5      MD5 hash.

 @throws TskCoreException

 @deprecated Use the constructor that takes a device ID and size.]]>
      </doc>
    </constructor>
    <method name="getImageHandle" return="long"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get the handle to the sleuthkit image info object

 @return the object pointer

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getDataSource" return="org.sleuthkit.datamodel.Content"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="close"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="finalize"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="Throwable" type="java.lang.Throwable"/>
    </method>
    <method name="read" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="buf" type="byte[]"/>
      <param name="offset" type="long"/>
      <param name="len" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getSize" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getType" return="org.sleuthkit.datamodel.TskData.TSK_IMG_TYPE_ENUM"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the image type

 @return image type]]>
      </doc>
    </method>
    <method name="getSsize" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the sector size

 @return sector size]]>
      </doc>
    </method>
    <method name="getUniquePath" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getPaths" return="java.lang.String[]"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the image path

 @return image path]]>
      </doc>
    </method>
    <method name="getVolumeSystems" return="java.util.List&lt;org.sleuthkit.datamodel.VolumeSystem&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[@return a list of VolumeSystem associated with this Image.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getVolumes" return="java.util.List&lt;org.sleuthkit.datamodel.Volume&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[@return a list of Volume associated with this Image.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getFileSystems" return="java.util.List&lt;org.sleuthkit.datamodel.FileSystem&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[@return a list of FileSystems in this Image. This includes FileSystems
         that are both children of this Image as well as children of
         Volumes in this image.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getTimeZone" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the timezone set for the image

 @return timezone string representation]]>
      </doc>
    </method>
    <method name="accept" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="v" type="org.sleuthkit.datamodel.SleuthkitItemVisitor&lt;T&gt;"/>
    </method>
    <method name="accept" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="v" type="org.sleuthkit.datamodel.ContentVisitor&lt;T&gt;"/>
    </method>
    <method name="getChildren" return="java.util.List&lt;org.sleuthkit.datamodel.Content&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getChildrenIds" return="java.util.List&lt;java.lang.Long&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="preserveState" type="boolean"/>
    </method>
    <method name="imageFileExists" return="java.lang.Boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Test if the file that created this image exists on disk. Does not work on
 local disks - will always return false

 @return True if the file still exists]]>
      </doc>
    </method>
    <method name="verifyImageSize" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Perform some sanity checks on the bounds of the image contents to
 determine if we could be missing some pieces of the image.

 @return String of error messages to display to user or empty string if
         there are no errors]]>
      </doc>
    </method>
    <method name="getMd5" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the md5 hash value

 @return md5 hash if attained(from database), empty string otherwise
 
 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getSha1" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[gets the SHA1 hash value

 @return SHA1 hash if attained(from database), empty string otherwise
 
 @throws TskCoreException on DB error.]]>
      </doc>
    </method>
    <method name="getSha256" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[gets the SHA256 hash value

 @return SHA256 hash if attained(from database), empty string otherwise
 
 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="setMD5"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="md5" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <exception name="TskDataException" type="org.sleuthkit.datamodel.TskDataException"/>
      <doc>
      <![CDATA[@param md5
 @throws TskCoreException On DB errors
 @throws TskDataException If hash has already been set]]>
      </doc>
    </method>
    <method name="setSha1"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="sha1" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <exception name="TskDataException" type="org.sleuthkit.datamodel.TskDataException"/>
      <doc>
      <![CDATA[@param sha1
 @throws TskCoreException On DB errors
 @throws TskDataException If hash has already been set]]>
      </doc>
    </method>
    <method name="setSha256"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="sha256" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <exception name="TskDataException" type="org.sleuthkit.datamodel.TskDataException"/>
      <doc>
      <![CDATA[@param sha256
 @throws TskCoreException On DB errors
 @throws TskDataException If hash has already been set]]>
      </doc>
    </method>
    <method name="getDeviceId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the ASCII-printable identifier for the device associated with the
 data source. This identifier is intended to be unique across multiple
 cases (e.g., a UUID).

 @return The device id.]]>
      </doc>
    </method>
    <method name="setDisplayName"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="newName" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Set the name for this data source.
 
 @param newName       The new name for the data source
 
 @throws TskCoreException Thrown if an error occurs while updating the database]]>
      </doc>
    </method>
    <method name="getContentSize" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="sleuthkitCase" type="org.sleuthkit.datamodel.SleuthkitCase"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the size of the contents of the data source in bytes. This size can
 change as archive files within the data source are expanded, files are
 carved, etc., and is different from the size of the data source as
 returned by Content.getSize, which is the size of the data source as a
 file.

 @param sleuthkitCase The sleuthkit case instance from which to make calls
                      to the database.

 @return The size in bytes.

 @throws TskCoreException Thrown when there is an issue trying to retrieve
                          data from the database.]]>
      </doc>
    </method>
    <method name="setAcquisitionDetails"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="details" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Sets the acquisition details field in the case database.

 @param details The acquisition details
 
 @throws TskCoreException Thrown if the data can not be written]]>
      </doc>
    </method>
    <method name="setAcquisitionToolDetails"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <param name="version" type="java.lang.String"/>
      <param name="settings" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Sets the acquisition tool details such as its name, version number and
 any settings used during the acquisition to acquire data.

 @param name     The name of the acquisition tool. May be NULL.
 @param version  The acquisition tool version number. May be NULL.
 @param settings The settings used by the acquisition tool. May be NULL.

 @throws TskCoreException Thrown if the data can not be written]]>
      </doc>
    </method>
    <method name="getAcquisitionToolSettings" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the acquisition tool settings field from the case database.

 @return The acquisition tool settings. May be Null if not set.

 @throws TskCoreException Thrown if the data can not be read]]>
      </doc>
    </method>
    <method name="getAcquisitionToolName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the acquisition tool name field from the case database.

 @return The acquisition tool name. May be Null if not set.

 @throws TskCoreException Thrown if the data can not be read]]>
      </doc>
    </method>
    <method name="getAcquisitionToolVersion" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the acquisition tool version field from the case database.

 @return The acquisition tool version. May be Null if not set.

 @throws TskCoreException Thrown if the data can not be read]]>
      </doc>
    </method>
    <method name="getDateAdded" return="java.lang.Long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the added date field from the case database.

 @return The date time when the image was added in epoch seconds.

 @throws TskCoreException Thrown if the data can not be read]]>
      </doc>
    </method>
    <method name="getAcquisitionDetails" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the acquisition details field from the case database.
 
 @return The acquisition details
 
 @throws TskCoreException Thrown if the data can not be read]]>
      </doc>
    </method>
    <method name="getHost" return="org.sleuthkit.datamodel.Host"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the host for this data source.
 
 @return The host
 
 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="setSizes"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="totalSize" type="long"/>
      <param name="sectorSize" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Updates the image's total size and sector size.This function may be used
 to update the sizes after the image was created.

 Can only update the sizes if they were not set before. Will throw
 TskCoreException if the values in the db are not 0 prior to this call.

 @param totalSize  The total size
 @param sectorSize The sector size

 @throws TskCoreException If there is an error updating the case database.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Represents a disk image file, stored in tsk_image_info. Populated based on
 data in database.

 Caches internal tsk image handle and reuses it for reads]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.Image -->
  <!-- start class org.sleuthkit.datamodel.IngestJobInfo -->
  <class name="IngestJobInfo" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="getEndDateTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return the end date time of the job (equal to the epoch if it has not
         been set yet).]]>
      </doc>
    </method>
    <method name="setEndDateTime"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="endDateTime" type="java.util.Date"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Sets the end date for the ingest job info, and updates the database.

 @param endDateTime the endDateTime to set

 @throws org.sleuthkit.datamodel.TskCoreException]]>
      </doc>
    </method>
    <method name="setIngestJobStatus"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="status" type="org.sleuthkit.datamodel.IngestJobInfo.IngestJobStatusType"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Sets the ingest status for the ingest job info, and updates the database.

 @param status The new status

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getIngestJobId" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return the ingestJobId]]>
      </doc>
    </method>
    <method name="getObjectId" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return the objectId]]>
      </doc>
    </method>
    <method name="getHostName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return the hostName]]>
      </doc>
    </method>
    <method name="getStartDateTime" return="java.util.Date"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return the startDateTime]]>
      </doc>
    </method>
    <method name="getSettingsDir" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return the settingsDir]]>
      </doc>
    </method>
    <method name="getIngestModuleInfo" return="java.util.List&lt;org.sleuthkit.datamodel.IngestModuleInfo&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return the ingestModuleInfo]]>
      </doc>
    </method>
    <method name="getStatus" return="org.sleuthkit.datamodel.IngestJobInfo.IngestJobStatusType"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return the status]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Represents information for an ingest job.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.IngestJobInfo -->
  <!-- start class org.sleuthkit.datamodel.IngestJobInfo.IngestJobStatusType -->
  <class name="IngestJobInfo.IngestJobStatusType" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.IngestJobInfo.IngestJobStatusType&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.IngestJobInfo.IngestJobStatusType[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.IngestJobInfo.IngestJobStatusType"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="fromID" return="org.sleuthkit.datamodel.IngestJobInfo.IngestJobStatusType"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="typeId" type="int"/>
    </method>
    <method name="getDisplayName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return the displayName]]>
      </doc>
    </method>
  </class>
  <!-- end class org.sleuthkit.datamodel.IngestJobInfo.IngestJobStatusType -->
  <!-- start class org.sleuthkit.datamodel.IngestModuleInfo -->
  <class name="IngestModuleInfo" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="getIngestModuleId" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return the ingestModuleId]]>
      </doc>
    </method>
    <method name="getDisplayName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return the displayName]]>
      </doc>
    </method>
    <method name="getUniqueName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return the uniqueName]]>
      </doc>
    </method>
    <method name="getType" return="org.sleuthkit.datamodel.IngestModuleInfo.IngestModuleType"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return the typeID]]>
      </doc>
    </method>
    <method name="getVersion" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return the version]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Class representing information about an ingest module, used in ingest job
 info to show which ingest modules were run.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.IngestModuleInfo -->
  <!-- start class org.sleuthkit.datamodel.IngestModuleInfo.IngestModuleType -->
  <class name="IngestModuleInfo.IngestModuleType" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.IngestModuleInfo.IngestModuleType&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.IngestModuleInfo.IngestModuleType[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.IngestModuleInfo.IngestModuleType"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="fromID" return="org.sleuthkit.datamodel.IngestModuleInfo.IngestModuleType"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="typeId" type="int"/>
    </method>
    <method name="getDisplayName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return the displayName]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Used to keep track of the module types]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.IngestModuleInfo.IngestModuleType -->
  <!-- start class org.sleuthkit.datamodel.InvalidAccountIDException -->
  <class name="InvalidAccountIDException" extends="org.sleuthkit.datamodel.TskCoreException"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="InvalidAccountIDException"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Default constructor when error message is not available]]>
      </doc>
    </constructor>
    <constructor name="InvalidAccountIDException" type="java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Create exception containing the error message.

 @param msg Message.]]>
      </doc>
    </constructor>
    <constructor name="InvalidAccountIDException" type="java.lang.String, java.lang.Exception"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Create exception containing the error message and cause exception.

 @param msg Message.
 @param ex  Underlying exception.]]>
      </doc>
    </constructor>
    <doc>
    <![CDATA[Exception thrown when an account identifier is not valid.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.InvalidAccountIDException -->
  <!-- start class org.sleuthkit.datamodel.LayoutFile -->
  <class name="LayoutFile" extends="org.sleuthkit.datamodel.AbstractFile"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="LayoutFile" type="org.sleuthkit.datamodel.SleuthkitCase, long, java.lang.String, org.sleuthkit.datamodel.TskData.TSK_DB_FILES_TYPE_ENUM, org.sleuthkit.datamodel.TskData.TSK_FS_NAME_TYPE_ENUM, org.sleuthkit.datamodel.TskData.TSK_FS_META_TYPE_ENUM, org.sleuthkit.datamodel.TskData.TSK_FS_NAME_FLAG_ENUM, short, long, java.lang.String, org.sleuthkit.datamodel.TskData.FileKnown, java.lang.String"
      static="false" final="false" visibility="protected"
      deprecated="Do not make subclasses outside of this package.">
      <doc>
      <![CDATA[Constructs a representation of a layout file that has been added to a
 case. Layout files are not file system files, but "virtual" files created
 from blocks of data (e.g. unallocated) that are treated as files for
 convenience and uniformity.

 @param db         The case database to which the file has been added.
 @param objId      The object id of the file in the case database.
 @param name       The name of the file.
 @param fileType   The type of the file.
 @param dirType    The type of the file, usually as reported in the name
                   structure of the file system. May be set to
                   TSK_FS_NAME_TYPE_ENUM.UNDEF.
 @param metaType   The type of the file, usually as reported in the
                   metadata structure of the file system. May be set to
                   TSK_FS_META_TYPE_ENUM.TSK_FS_META_TYPE_UNDEF.
 @param dirFlag    The allocated status of the file, usually as reported
                   in the name structure of the file system.
 @param metaFlags  The allocated status of the file, usually as reported
                   in the metadata structure of the file system.
 @param size       The size of the file.
 @param md5Hash    The MD5 hash of the file, null if not yet calculated.
 @param knownState The known state of the file from a hash database
                   lookup, null if not yet looked up.
 @param parentPath The path of the parent of the file.

 @deprecated Do not make subclasses outside of this package.]]>
      </doc>
    </constructor>
    <method name="getNumParts" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the number of file layout ranges associated with this layout file.

 @return The number of file layout ranges.]]>
      </doc>
    </method>
    <method name="isRoot" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Indicates whether or not this layout file is the root of a file system,
 always returns false.

 @return False.]]>
      </doc>
    </method>
    <method name="close"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Does nothing, a layout file cannot be directly opened, read, or closed.
 Use the readInt method to get layout file content.]]>
      </doc>
    </method>
    <method name="readInt" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="buf" type="byte[]"/>
      <param name="offset" type="long"/>
      <param name="len" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Reads bytes from the layout ranges associated with this file.

 @param buf    Buffer to read into.
 @param offset Start position in the file.
 @param len    Number of bytes to read.

 @return Number of bytes read.

 @throws TskCoreException if there is a problem reading the file.]]>
      </doc>
    </method>
    <method name="accept" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="visitor" type="org.sleuthkit.datamodel.ContentVisitor&lt;T&gt;"/>
      <doc>
      <![CDATA[Accepts a content visitor (Visitor design pattern).

 @param visitor A ContentVisitor supplying an algorithm to run using this
                file as input.

 @return The output of the algorithm.]]>
      </doc>
    </method>
    <method name="accept" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="visitor" type="org.sleuthkit.datamodel.SleuthkitItemVisitor&lt;T&gt;"/>
      <doc>
      <![CDATA[Accepts a Sleuthkit item visitor (Visitor design pattern).

 @param visitor A SleuthkitItemVisitor supplying an algorithm to run using
                this file as input.

 @return The output of the algorithm.]]>
      </doc>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="preserveState" type="boolean"/>
      <doc>
      <![CDATA[Provides a string representation of this file.

 @param preserveState True if state should be included in the string
                      representation of this object.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[A representation of a layout file that has been added to a case. Layout files
 are not file system files, but "virtual" files created from blocks of data
 (e.g. unallocated) that are treated as files for convenience and uniformity.

 Because layout files are not real file system files, they only utilize a
 subset of meta-data attributes. A layout file normally contains one or more
 entry in tsk_file_layout table that define ordered byte block ranges, with
 respect to the image.

 The class also supports reads of layout files, reading blocks across ranges
 in a sequence.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.LayoutFile -->
  <!-- start class org.sleuthkit.datamodel.LibraryUtils -->
  <class name="LibraryUtils" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="LibraryUtils"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="loadSleuthkitJNI" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Load the Sleuthkit JNI.

 @return true if library was found and loaded]]>
      </doc>
    </method>
    <field name="EXTS" type="java.lang.String[]"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <doc>
    <![CDATA[Collection of methods to load libraries embedded in the TSK Datamodel Jar
 file.

 @author jwallace]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.LibraryUtils -->
  <!-- start class org.sleuthkit.datamodel.LibraryUtils.Lib -->
  <class name="LibraryUtils.Lib" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.LibraryUtils.Lib&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.LibraryUtils.Lib[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.LibraryUtils.Lib"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getLibName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getUnixName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[The libraries the TSK Datamodel needs.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.LibraryUtils.Lib -->
  <!-- start class org.sleuthkit.datamodel.LocalDirectory -->
  <class name="LocalDirectory" extends="org.sleuthkit.datamodel.SpecialDirectory"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="isDataSource" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Check whether this LocalDirectory is a data source.
 Will always be false.
 @return false]]>
      </doc>
    </method>
    <method name="isRoot" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Indicates whether or not this directory is the root of a file
 system. Local directories should only be the root of a file
 system in a portable case.

 @return true if the parent of this directory is a file system]]>
      </doc>
    </method>
    <method name="accept" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="visitor" type="org.sleuthkit.datamodel.ContentVisitor&lt;T&gt;"/>
      <doc>
      <![CDATA[Accepts a content visitor (Visitor design pattern).

 @param visitor A ContentVisitor supplying an algorithm to run using this
                local directory as input.

 @return The output of the algorithm.]]>
      </doc>
    </method>
    <method name="accept" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="visitor" type="org.sleuthkit.datamodel.SleuthkitItemVisitor&lt;T&gt;"/>
      <doc>
      <![CDATA[Accepts a Sleuthkit item visitor (Visitor design pattern).

 @param visitor A SleuthkitItemVisitor supplying an algorithm to run using
                this local directory as input.

 @return The output of the algorithm.]]>
      </doc>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="preserveState" type="boolean"/>
      <doc>
      <![CDATA[Provides a string representation of this local directory.

 @param preserveState True if state should be included in the string
                      representation of this object.

 @return string representation of this local directory
 @throws TskCoreException if there was an error querying the case
                          database.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[A local directory that can be used as a parent for local files.
 Not a file system]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.LocalDirectory -->
  <!-- start class org.sleuthkit.datamodel.LocalFile -->
  <class name="LocalFile" extends="org.sleuthkit.datamodel.AbstractFile"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="LocalFile" type="org.sleuthkit.datamodel.SleuthkitCase, long, java.lang.String, org.sleuthkit.datamodel.TskData.TSK_DB_FILES_TYPE_ENUM, org.sleuthkit.datamodel.TskData.TSK_FS_NAME_TYPE_ENUM, org.sleuthkit.datamodel.TskData.TSK_FS_META_TYPE_ENUM, org.sleuthkit.datamodel.TskData.TSK_FS_NAME_FLAG_ENUM, short, long, long, long, long, long, java.lang.String, org.sleuthkit.datamodel.TskData.FileKnown, java.lang.String, java.lang.String"
      static="false" final="false" visibility="protected"
      deprecated="Do not make subclasses outside of this package.">
      <doc>
      <![CDATA[Constructs a representation of a local/logical file (e.g., on a user's
 machine) that has been added to the case database.

 @param db         The case database to which the file has been added.
 @param objId      The object id of the file in the case database.
 @param name       The name of the file.
 @param fileType   The type of the file.
 @param dirType    The type of the file, usually as reported in the name
                   structure of the file system. May be set to
                   TSK_FS_NAME_TYPE_ENUM.UNDEF.
 @param metaType   The type of the file, usually as reported in the
                   metadata structure of the file system. May be set to
                   TSK_FS_META_TYPE_ENUM.TSK_FS_META_TYPE_UNDEF.
 @param dirFlag    The allocated status of the file, usually as reported
                   in the name structure of the file system.
 @param metaFlags  The allocated status of the file, usually as reported
                   in the metadata structure of the file system.
 @param size       The size of the file.
 @param ctime      The changed time of the file.
 @param crtime     The created time of the file.
 @param atime      The accessed time of the file.
 @param mtime      The modified time of the file.
 @param md5Hash    The MD5 hash of the file, null if not yet calculated.
 @param knownState The known state of the file from a hash database
                   lookup, null if not yet looked up.
 @param parentPath The path of the parent of the file.
 @param localPath  The absolute path of the file in secondary storage.

 @deprecated Do not make subclasses outside of this package.]]>
      </doc>
    </constructor>
    <constructor name="LocalFile" type="org.sleuthkit.datamodel.SleuthkitCase, long, java.lang.String, org.sleuthkit.datamodel.TskData.TSK_DB_FILES_TYPE_ENUM, org.sleuthkit.datamodel.TskData.TSK_FS_NAME_TYPE_ENUM, org.sleuthkit.datamodel.TskData.TSK_FS_META_TYPE_ENUM, org.sleuthkit.datamodel.TskData.TSK_FS_NAME_FLAG_ENUM, short, long, long, long, long, long, java.lang.String, org.sleuthkit.datamodel.TskData.FileKnown, java.lang.String, java.lang.String, long"
      static="false" final="false" visibility="protected"
      deprecated="Do not make subclasses outside of this package.">
      <doc>
      <![CDATA[Constructs a representation of a local/logical file (e.g., on a user's
 machine) that has been added to the case database.

 @param db         The case database to which the file has been added.
 @param objId      The object id of the file in the case database.
 @param name       The name of the file.
 @param fileType   The type of the file.
 @param dirType    The type of the file, usually as reported in the name
                   structure of the file system. May be set to
                   TSK_FS_NAME_TYPE_ENUM.UNDEF.
 @param metaType   The type of the file, usually as reported in the
                   metadata structure of the file system. May be set to
                   TSK_FS_META_TYPE_ENUM.TSK_FS_META_TYPE_UNDEF.
 @param dirFlag    The allocated status of the file, usually as reported
                   in the name structure of the file system.
 @param metaFlags  The allocated status of the file, usually as reported
                   in the metadata structure of the file system.
 @param size       The size of the file.
 @param ctime      The changed time of the file.
 @param crtime     The created time of the file.
 @param atime      The accessed time of the file.
 @param mtime      The modified time of the file.
 @param md5Hash    The MD5 hash of the file, null if not yet calculated.
 @param knownState The known state of the file from a hash database
                   lookup, null if not yet looked up.
 @param parentPath The path of the parent of the file.
 @param localPath  The absolute path of the file in secondary storage.
 @param parentId   The object id of parent of the file.

 @deprecated Do not make subclasses outside of this package.]]>
      </doc>
    </constructor>
    <constructor name="LocalFile" type="org.sleuthkit.datamodel.SleuthkitCase, long, java.lang.String, org.sleuthkit.datamodel.TskData.TSK_FS_NAME_TYPE_ENUM, org.sleuthkit.datamodel.TskData.TSK_FS_META_TYPE_ENUM, org.sleuthkit.datamodel.TskData.TSK_FS_NAME_FLAG_ENUM, short, long, long, long, long, long, java.lang.String, org.sleuthkit.datamodel.TskData.FileKnown, java.lang.String, java.lang.String, long"
      static="false" final="false" visibility="protected"
      deprecated="Do not make subclasses outside of this package.">
      <doc>
      <![CDATA[Constructs a representation of a local/logical file (e.g., on a user's
 machine) that has been added to the case.

 @param db         The case database to which the file has been added.
 @param objId      The object id of the file in the case database.
 @param name       The name of the file.
 @param dirType    The type of the file, usually as reported in the name
                   structure of the file system. May be set to
                   TSK_FS_NAME_TYPE_ENUM.UNDEF.
 @param metaType   The type of the file, usually as reported in the
                   metadata structure of the file system. May be set to
                   TSK_FS_META_TYPE_ENUM.TSK_FS_META_TYPE_UNDEF.
 @param dirFlag    The allocated status of the file, usually as reported
                   in the name structure of the file system.
 @param metaFlags  The allocated status of the file, usually as reported
                   in the metadata structure of the file system.
 @param size       The size of the file.
 @param ctime      The changed time of the file.
 @param crtime     The created time of the file.
 @param atime      The accessed time of the file.
 @param mtime      The modified time of the file.
 @param md5Hash    The MD5 hash of the file, null if not yet calculated.
 @param knownState The known state of the file from a hash database
                   lookup, null if not yet looked up.
 @param parentPath The path of the parent of the file.
 @param localPath  The absolute path of the file in secondary storage.
 @param parentId   The object id of parent of the file.

 @deprecated Do not make subclasses outside of this package.]]>
      </doc>
    </constructor>
    <method name="getRanges" return="java.util.List&lt;org.sleuthkit.datamodel.TskFileRange&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the extents in terms of byte addresses of this local file within its
 data source, an empty list.

 @return An empty list of extents (TskFileRange objects)

 @throws TskCoreException if there was an error querying the case
                          database.]]>
      </doc>
    </method>
    <method name="isRoot" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Indicates whether or not this local file is the root of a file system,
 always returns false.

 @return False.]]>
      </doc>
    </method>
    <method name="accept" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="visitor" type="org.sleuthkit.datamodel.ContentVisitor&lt;T&gt;"/>
      <doc>
      <![CDATA[Accepts a content visitor (Visitor design pattern).

 @param <T>     The type returned by the visitor.
 @param visitor A ContentVisitor supplying an algorithm to run using this
                local file as input.

 @return The output of the algorithm.]]>
      </doc>
    </method>
    <method name="accept" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="visitor" type="org.sleuthkit.datamodel.SleuthkitItemVisitor&lt;T&gt;"/>
      <doc>
      <![CDATA[Accepts a Sleuthkit item visitor (Visitor design pattern).

 @param <T>     The type returned by the visitor.
 @param visitor A SleuthkitItemVisitor supplying an algorithm to run using
                this local file as input.

 @return The output of the algorithm.]]>
      </doc>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="preserveState" type="boolean"/>
      <doc>
      <![CDATA[Provides a string representation of this local file.

 @param preserveState True if state should be included in the string
                      representation of this object.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[A representation of a local/logical file (e.g., on a user's machine) that has
 been added to a case.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.LocalFile -->
  <!-- start class org.sleuthkit.datamodel.LocalFilesDataSource -->
  <class name="LocalFilesDataSource" extends="org.sleuthkit.datamodel.VirtualDirectory"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="org.sleuthkit.datamodel.DataSource"/>
    <constructor name="LocalFilesDataSource" type="org.sleuthkit.datamodel.SleuthkitCase, long, long, java.lang.String, java.lang.String, org.sleuthkit.datamodel.TskData.TSK_FS_NAME_TYPE_ENUM, org.sleuthkit.datamodel.TskData.TSK_FS_META_TYPE_ENUM, org.sleuthkit.datamodel.TskData.TSK_FS_NAME_FLAG_ENUM, short, java.lang.String, java.lang.String, java.lang.String, org.sleuthkit.datamodel.TskData.FileKnown, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructs a local/logical files and/or directories data source.

 @param db                 The case database.
 @param objId              The object id of the virtual directory.
 @param dataSourceObjectId The object id of the data source for the
                           virtual directory; same as objId if the virtual
                           directory is a data source.
 @param name               The name of the virtual directory.
 @param dirType            The TSK_FS_NAME_TYPE_ENUM for the virtual
                           directory.
 @param deviceId           The device ID for the data source.
 @param metaType           The TSK_FS_META_TYPE_ENUM for the virtual
                           directory.
 @param dirFlag            The TSK_FS_META_TYPE_ENUM for the virtual
                           directory.
 @param metaFlags          The meta flags for the virtual directory.
 @param timezone           The timezone for the data source.
 @param md5Hash            The MD5 hash for the virtual directory.
 @param sha256Hash         The SHA-256 hash for the virtual directory.
 @param knownState         The known state for the virtual directory
 @param parentPath         The parent path for the virtual directory,
                           should be "/" if the virtual directory is a
                           data source.]]>
      </doc>
    </constructor>
    <constructor name="LocalFilesDataSource" type="org.sleuthkit.datamodel.SleuthkitCase, long, long, java.lang.String, java.lang.String, org.sleuthkit.datamodel.TskData.TSK_FS_NAME_TYPE_ENUM, org.sleuthkit.datamodel.TskData.TSK_FS_META_TYPE_ENUM, org.sleuthkit.datamodel.TskData.TSK_FS_NAME_FLAG_ENUM, short, java.lang.String, java.lang.String, org.sleuthkit.datamodel.TskData.FileKnown, java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="Use version with SHA-256 parameter">
      <doc>
      <![CDATA[Constructs a local/logical files and/or directories data source.

 @param db                 The case database.
 @param objId              The object id of the virtual directory.
 @param dataSourceObjectId The object id of the data source for the
                           virtual directory; same as objId if the virtual
                           directory is a data source.
 @param name               The name of the virtual directory.
 @param dirType            The TSK_FS_NAME_TYPE_ENUM for the virtual
                           directory.
 @param deviceId           The device ID for the data source.
 @param metaType           The TSK_FS_META_TYPE_ENUM for the virtual
                           directory.
 @param dirFlag            The TSK_FS_META_TYPE_ENUM for the virtual
                           directory.
 @param metaFlags          The meta flags for the virtual directory.
 @param timezone           The timezone for the data source.
 @param md5Hash            The MD5 hash for the virtual directory.
 @param knownState         The known state for the virtual directory
 @param parentPath         The parent path for the virtual directory,
                           should be "/" if the virtual directory is a
                           data source.
 
 @deprecated Use version with SHA-256 parameter]]>
      </doc>
    </constructor>
    <method name="getRootDirectory" return="org.sleuthkit.datamodel.VirtualDirectory"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="LocalFilesDataSource is already a VirtualDirectory.">
      <doc>
      <![CDATA[Returns the VirtualDirectory instance. /deprecated LocalFilesDataSource
 is already a VirtualDirectory.

 @return This object.

 @deprecated LocalFilesDataSource is already a VirtualDirectory.]]>
      </doc>
    </method>
    <method name="getDeviceId" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the ASCII-printable identifier for the device associated with the
 data source. This identifier is intended to be unique across multiple
 cases (e.g., a UUID).

 @return The device id.]]>
      </doc>
    </method>
    <method name="getTimeZone" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the time zone that was used to process the data source.

 @return The time zone.]]>
      </doc>
    </method>
    <method name="setDisplayName"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="newName" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Set the name for this data source.
 
 @param newName       The new name for the data source
 
 @throws TskCoreException Thrown if an error occurs while updating the database]]>
      </doc>
    </method>
    <method name="getContentSize" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="sleuthkitCase" type="org.sleuthkit.datamodel.SleuthkitCase"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the size of the contents of the data source in bytes. This size can
 change as archive files within the data source are expanded, files are
 carved, etc., and is different from the size of the data source as
 returned by Content.getSize, which is the size of the data source as a
 file.

 @param sleuthkitCase The sleuthkit case instance from which to make calls
                      to the database.

 @return The size in bytes.

 @throws TskCoreException Thrown when there is an issue trying to retrieve
                          data from the database.]]>
      </doc>
    </method>
    <method name="setAcquisitionDetails"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="details" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Sets the acquisition details field in the case database.

 @param details The acquisition details

 @throws TskCoreException Thrown if the data can not be written]]>
      </doc>
    </method>
    <method name="setAcquisitionToolDetails"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <param name="version" type="java.lang.String"/>
      <param name="settings" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Sets the acquisition tool details such as its name, version number and
 any settings used during the acquisition to acquire data.

 @param name     The name of the acquisition tool. May be NULL.
 @param version  The acquisition tool version number. May be NULL.
 @param settings The settings used by the acquisition tool. May be NULL.

 @throws TskCoreException Thrown if the data can not be written]]>
      </doc>
    </method>
    <method name="getAcquisitionDetails" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the acquisition details field from the case database.
 
 @return The acquisition details
 
 @throws TskCoreException Thrown if the data can not be read]]>
      </doc>
    </method>
    <method name="getAcquisitionToolSettings" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the acquisition tool settings field from the case database.

 @return The acquisition tool settings. May be Null if not set.

 @throws TskCoreException Thrown if the data can not be read]]>
      </doc>
    </method>
    <method name="getAcquisitionToolName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the acquisition tool name field from the case database.

 @return The acquisition tool name. May be Null if not set.

 @throws TskCoreException Thrown if the data can not be read]]>
      </doc>
    </method>
    <method name="getAcquisitionToolVersion" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the acquisition tool version field from the case database.

 @return The acquisition tool version. May be Null if not set.

 @throws TskCoreException Thrown if the data can not be read]]>
      </doc>
    </method>
    <method name="getHost" return="org.sleuthkit.datamodel.Host"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the host for this data source.
 
 @return The host
 
 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getDateAdded" return="java.lang.Long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the added date field from the case database.

 @return The date time when the image was added in epoch seconds.

 @throws TskCoreException Thrown if the data can not be read]]>
      </doc>
    </method>
    <doc>
    <![CDATA[A local/logical files and/or directories data source.

 NOTE: The DataSource interface is an emerging feature and at present is only
 useful for obtaining the object id and the device id, an ASCII-printable
 identifier for the device associated with the data source that is intended to
 be unique across multiple cases (e.g., a UUID). In the future, this interface
 will extend the Content interface and the AbstractDataSource will become an
 abstract superclass.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.LocalFilesDataSource -->
  <!-- start class org.sleuthkit.datamodel.OsAccount -->
  <class name="OsAccount" extends="org.sleuthkit.datamodel.AbstractContent"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="getId" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the account Object Id that is unique within the scope of the case.

 @return Account id.]]>
      </doc>
    </method>
    <method name="getAddr" return="java.util.Optional&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the unique identifier for the account, such as UID or SID. The id is
 unique within the account realm.

 @return Optional unique identifier.]]>
      </doc>
    </method>
    <method name="getRealmId" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the ID for the account realm. Get the Realm via
 OsAccountRealmManager.getRealmByRealmId() NOTE: The realm may get updated as
 more data is parsed, so listen for events to update as needed.

 @return]]>
      </doc>
    </method>
    <method name="getLoginName" return="java.util.Optional&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get account login name, such as "jdoe"

 @return Optional login name.]]>
      </doc>
    </method>
    <method name="getFullName" return="java.util.Optional&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get account user full name, such as "John Doe"

 @return Optional with full name.]]>
      </doc>
    </method>
    <method name="getCreationTime" return="java.util.Optional&lt;java.lang.Long&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get account creation time.

 @return Optional with account creation time.]]>
      </doc>
    </method>
    <method name="getOsAccountType" return="java.util.Optional&lt;org.sleuthkit.datamodel.OsAccount.OsAccountType&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get account type.

 @return Optional with account type.]]>
      </doc>
    </method>
    <method name="getOsAccountStatus" return="java.util.Optional&lt;org.sleuthkit.datamodel.OsAccount.OsAccountStatus&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get account status.

 @return Optional with account status.]]>
      </doc>
    </method>
    <method name="getOsAccountDbStatus" return="org.sleuthkit.datamodel.OsAccount.OsAccountDbStatus"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get account status in the database.

 @return Database account status.]]>
      </doc>
    </method>
    <method name="getExtendedOsAccountAttributes" return="java.util.List&lt;org.sleuthkit.datamodel.OsAccount.OsAccountAttribute&gt;"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get additional account attributes.

 @return List of additional account attributes. May return an empty list.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getOsAccountInstances" return="java.util.List&lt;org.sleuthkit.datamodel.OsAccountInstance&gt;"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Return the os account instances.

 @return List of all the OsAccountInstances. May return an empty list.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getSleuthkitCase" return="org.sleuthkit.datamodel.SleuthkitCase"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the SleuthKit case database for this account.

 @return The SleuthKit case object.]]>
      </doc>
    </method>
    <method name="read" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="buf" type="byte[]"/>
      <param name="offset" type="long"/>
      <param name="len" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="close"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getSize" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="accept" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="v" type="org.sleuthkit.datamodel.ContentVisitor&lt;T&gt;"/>
    </method>
    <method name="accept" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="v" type="org.sleuthkit.datamodel.SleuthkitItemVisitor&lt;T&gt;"/>
    </method>
    <doc>
    <![CDATA[Abstracts an OS user account. OS Accounts have a scope, which is defined by
 their parent OsAccountRealm.

 An OS user account may own files and (some) artifacts.

 OsAcounts can be created with minimal data and updated as more is learned.
 Caller must call update() to save any new data.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.OsAccount -->
  <!-- start class org.sleuthkit.datamodel.OsAccount.OsAccountAttribute -->
  <class name="OsAccount.OsAccountAttribute" extends="org.sleuthkit.datamodel.AbstractAttribute"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <constructor name="OsAccountAttribute" type="org.sleuthkit.datamodel.BlackboardAttribute.Type, int, org.sleuthkit.datamodel.OsAccount, org.sleuthkit.datamodel.Host, org.sleuthkit.datamodel.Content"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Creates an os account attribute with int value.

 @param attributeType Attribute type.
 @param valueInt      Int value.
 @param osAccount     Account which the attribute pertains to.
 @param host          Host on which the attribute applies to. Pass
                      Null if the attribute applies to all the hosts in
                      the realm.
 @param sourceObj     Source where the attribute was found, may be null.]]>
      </doc>
    </constructor>
    <constructor name="OsAccountAttribute" type="org.sleuthkit.datamodel.BlackboardAttribute.Type, long, org.sleuthkit.datamodel.OsAccount, org.sleuthkit.datamodel.Host, org.sleuthkit.datamodel.Content"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Creates an os account attribute with long value.

 @param attributeType Attribute type.
 @param valueLong     Long value.
 @param osAccount     Account which the attribute pertains to.
 @param host          Host on which the attribute applies to. Pass
                      Null if it applies across hosts.
 @param sourceObj     Source where the attribute was found.]]>
      </doc>
    </constructor>
    <constructor name="OsAccountAttribute" type="org.sleuthkit.datamodel.BlackboardAttribute.Type, double, org.sleuthkit.datamodel.OsAccount, org.sleuthkit.datamodel.Host, org.sleuthkit.datamodel.Content"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Creates an os account attribute with double value.

 @param attributeType Attribute type.
 @param valueDouble   Double value.
 @param osAccount     Account which the attribute pertains to.
 @param host          Host on which the attribute applies to. Pass
                      Null if it applies across hosts.
 @param sourceObj     Source where the attribute was found.]]>
      </doc>
    </constructor>
    <constructor name="OsAccountAttribute" type="org.sleuthkit.datamodel.BlackboardAttribute.Type, java.lang.String, org.sleuthkit.datamodel.OsAccount, org.sleuthkit.datamodel.Host, org.sleuthkit.datamodel.Content"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Creates an os account attribute with string value.

 @param attributeType Attribute type.
 @param valueString   String value.
 @param osAccount     Account which the attribute pertains to.
 @param host          Host on which the attribute applies to. Pass
                      Null if applies across hosts.
 @param sourceObj     Source where the attribute was found.]]>
      </doc>
    </constructor>
    <constructor name="OsAccountAttribute" type="org.sleuthkit.datamodel.BlackboardAttribute.Type, byte[], org.sleuthkit.datamodel.OsAccount, org.sleuthkit.datamodel.Host, org.sleuthkit.datamodel.Content"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Creates an os account attribute with byte-array value.

 @param attributeType Attribute type.
 @param valueBytes    Bytes value.
 @param osAccount     Account which the attribute pertains to.
 @param host          Host on which the attribute applies to. Pass
                      Null if it applies across hosts.
 @param sourceObj     Source where the attribute was found.]]>
      </doc>
    </constructor>
    <method name="getHostId" return="java.util.Optional&lt;java.lang.Long&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the host id for the account attribute.

 @return Optional with Host id.]]>
      </doc>
    </method>
    <method name="getOsAccountObjectId" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the object id of account to which this attribute applies.

 @return Account row id.]]>
      </doc>
    </method>
    <method name="getSourceObjectId" return="java.util.Optional&lt;java.lang.Long&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the object id of the source where the attribute was found.

 @return Object id of source.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Abstracts attributes of an OS account. An attribute may be specific to a
 host, or applicable across all hosts.

 As an example, last login time is host specific, whereas last password
 reset date is independent of a host.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.OsAccount.OsAccountAttribute -->
  <!-- start class org.sleuthkit.datamodel.OsAccount.OsAccountDbStatus -->
  <class name="OsAccount.OsAccountDbStatus" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.OsAccount.OsAccountDbStatus&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.OsAccount.OsAccountDbStatus[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.OsAccount.OsAccountDbStatus"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getId" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="fromID" return="org.sleuthkit.datamodel.OsAccount.OsAccountDbStatus"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="typeId" type="int"/>
    </method>
    <doc>
    <![CDATA[Encapsulates status of OsAccount row. OsAccounts that are not "Active"
 are generally invisible - they will not be returned by any queries on the
 string fields.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.OsAccount.OsAccountDbStatus -->
  <!-- start class org.sleuthkit.datamodel.OsAccount.OsAccountStatus -->
  <class name="OsAccount.OsAccountStatus" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.OsAccount.OsAccountStatus&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.OsAccount.OsAccountStatus[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.OsAccount.OsAccountStatus"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getId" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get account status id.

 @return Account status id.]]>
      </doc>
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the account status enum name.

 @return]]>
      </doc>
    </method>
    <method name="fromID" return="org.sleuthkit.datamodel.OsAccount.OsAccountStatus"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="statusId" type="int"/>
      <doc>
      <![CDATA[Gets account status enum from id.

 @param statusId Id to look for.

 @return Account status enum.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Encapsulates status of an account - whether is it active or disabled or
 deleted.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.OsAccount.OsAccountStatus -->
  <!-- start class org.sleuthkit.datamodel.OsAccount.OsAccountType -->
  <class name="OsAccount.OsAccountType" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.OsAccount.OsAccountType&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.OsAccount.OsAccountType[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.OsAccount.OsAccountType"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getId" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get account type id.

 @return Account type id.]]>
      </doc>
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get account type name.

 @return Account type name.]]>
      </doc>
    </method>
    <method name="fromID" return="org.sleuthkit.datamodel.OsAccount.OsAccountType"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="typeId" type="int"/>
      <doc>
      <![CDATA[Gets account type enum from id.

 @param typeId Id to look for.

 @return Account type enum.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Encapsulates an account type - whether it's an interactive login account
 or a service account.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.OsAccount.OsAccountType -->
  <!-- start class org.sleuthkit.datamodel.OsAccountInstance -->
  <class name="OsAccountInstance" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="java.lang.Comparable&lt;org.sleuthkit.datamodel.OsAccountInstance&gt;"/>
    <method name="getOsAccount" return="org.sleuthkit.datamodel.OsAccount"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns the OsAccount object for this instance.

 @return The OsAccount object.]]>
      </doc>
    </method>
    <method name="getDataSource" return="org.sleuthkit.datamodel.DataSource"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Returns the data source for this account instance.

 @return Return the data source instance.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getInstanceType" return="org.sleuthkit.datamodel.OsAccountInstance.OsAccountInstanceType"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns the type for this OsAccount instance.

 @return]]>
      </doc>
    </method>
    <method name="compareTo" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="other" type="org.sleuthkit.datamodel.OsAccountInstance"/>
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="obj" type="java.lang.Object"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[An OsAccountInstance represents the appearance of a particular OsAccount on a
 particular data source.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.OsAccountInstance -->
  <!-- start class org.sleuthkit.datamodel.OsAccountInstance.OsAccountInstanceType -->
  <class name="OsAccountInstance.OsAccountInstanceType" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.OsAccountInstance.OsAccountInstanceType&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.OsAccountInstance.OsAccountInstanceType[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.OsAccountInstance.OsAccountInstanceType"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getId" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get account instance type id.

 @return Account instance type id.]]>
      </doc>
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get account instance type name.

 @return Account instance type name.]]>
      </doc>
    </method>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get account instance type description.

 @return Account instance type description.]]>
      </doc>
    </method>
    <method name="fromID" return="org.sleuthkit.datamodel.OsAccountInstance.OsAccountInstanceType"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="typeId" type="int"/>
      <doc>
      <![CDATA[Gets account instance type enum from id.

 @param typeId Id to look for.

 @return Account instance type enum.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Describes the relationship between an os account instance and the host
 where the instance was found.

 Whether an os account actually performed any action on the host or if
 just a reference to it was found on the host (such as in a log file)]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.OsAccountInstance.OsAccountInstanceType -->
  <!-- start class org.sleuthkit.datamodel.OsAccountManager -->
  <class name="OsAccountManager" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="newWindowsOsAccount" return="org.sleuthkit.datamodel.OsAccount"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="sid" type="java.lang.String"/>
      <param name="loginName" type="java.lang.String"/>
      <param name="realmName" type="java.lang.String"/>
      <param name="referringHost" type="org.sleuthkit.datamodel.Host"/>
      <param name="realmScope" type="org.sleuthkit.datamodel.OsAccountRealm.RealmScope"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <exception name="OsAccountManager.NotUserSIDException" type="org.sleuthkit.datamodel.OsAccountManager.NotUserSIDException"/>
      <doc>
      <![CDATA[Creates an OS account with Windows-specific data. If an account already
 exists with the given id or realm/login, then the existing OS account is
 returned.

 If the account realm already exists, but is missing the address or the
 realm name, the realm is updated.

 @param sid           Account sid/uid, can be null if loginName is
                      supplied.
 @param loginName     Login name, can be null if sid is supplied.
 @param realmName     Realm within which the accountId or login name is
                      unique. Can be null if sid is supplied.
 @param referringHost Host referring the account.
 @param realmScope    Realm scope.

 @return OsAccount.

 @throws TskCoreException                     If there is an error in
                                              creating the OSAccount.
 @throws OsAccountManager.NotUserSIDException If the given SID is not a
                                              user SID.]]>
      </doc>
    </method>
    <method name="getOsAccountByObjectId" return="org.sleuthkit.datamodel.OsAccount"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="osAccountObjId" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get the OS Account with the given object id.

 @param osAccountObjId Object id for the account.

 @return OsAccount.

 @throws TskCoreException If there is an error getting the account.]]>
      </doc>
    </method>
    <method name="newOsAccountInstance"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="osAccount" type="org.sleuthkit.datamodel.OsAccount"/>
      <param name="dataSource" type="org.sleuthkit.datamodel.DataSource"/>
      <param name="instanceType" type="org.sleuthkit.datamodel.OsAccountInstance.OsAccountInstanceType"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Records that an OsAccount was used or referenced on a given data source.
 This data is automatically recorded when a file or DataArtifact is
 created.

 Use this method to explicitly record the association when: - Parsing
 account information (such as in the registry) because the account may
 already exist in the database, but the account did not create any files.
 Therefore, no instance for it would be automatically created, even though
 you found data about it. - You want to associate more than one OsAccount
 with a DataArtifact. Call this for each OsAccount not specified in
 'newDataArtifact()'.

 This method does nothing if the instance is already recorded.

 @param osAccount    Account for which an instance needs to be added.
 @param dataSource   Data source where the instance is found.
 @param instanceType Instance type.

 @throws TskCoreException If there is an error creating the account
                          instance.]]>
      </doc>
    </method>
    <method name="getOsAccounts" return="java.util.List&lt;org.sleuthkit.datamodel.OsAccount&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="host" type="org.sleuthkit.datamodel.Host"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all accounts that had an instance on the specified host.

 @param host Host for which to look accounts for.

 @return Set of OsAccounts, may be empty.

 @throws org.sleuthkit.datamodel.TskCoreException]]>
      </doc>
    </method>
    <method name="getOsAccounts" return="java.util.List&lt;org.sleuthkit.datamodel.OsAccount&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all active accounts.

 @return Set of OsAccounts, may be empty.

 @throws org.sleuthkit.datamodel.TskCoreException]]>
      </doc>
    </method>
    <method name="getWindowsOsAccount" return="java.util.Optional&lt;org.sleuthkit.datamodel.OsAccount&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="sid" type="java.lang.String"/>
      <param name="loginName" type="java.lang.String"/>
      <param name="realmName" type="java.lang.String"/>
      <param name="referringHost" type="org.sleuthkit.datamodel.Host"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <exception name="OsAccountManager.NotUserSIDException" type="org.sleuthkit.datamodel.OsAccountManager.NotUserSIDException"/>
      <doc>
      <![CDATA[Gets an OS account using Windows-specific data.

 @param sid           Account SID, maybe null if loginName is supplied.
 @param loginName     Login name, maybe null if sid is supplied.
 @param realmName     Realm within which the accountId or login name is
                      unique. Can be null if sid is supplied.
 @param referringHost Host referring the account.

 @return Optional with OsAccount, Optional.empty if no matching OsAccount
         is found.

 @throws TskCoreException    If there is an error getting the account.
 @throws NotUserSIDException If the given SID is not a user SID.]]>
      </doc>
    </method>
    <method name="addExtendedOsAccountAttributes"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="account" type="org.sleuthkit.datamodel.OsAccount"/>
      <param name="accountAttributes" type="java.util.List&lt;org.sleuthkit.datamodel.OsAccount.OsAccountAttribute&gt;"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Adds a rows to the tsk_os_account_attributes table for the given set of
 attribute.

 @param account           Account for which the attributes is being added.
 @param accountAttributes List of attributes to add.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="updateStandardOsAccountAttributes" return="org.sleuthkit.datamodel.OsAccountManager.OsAccountUpdateResult"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="osAccount" type="org.sleuthkit.datamodel.OsAccount"/>
      <param name="fullName" type="java.lang.String"/>
      <param name="accountType" type="org.sleuthkit.datamodel.OsAccount.OsAccountType"/>
      <param name="accountStatus" type="org.sleuthkit.datamodel.OsAccount.OsAccountStatus"/>
      <param name="creationTime" type="java.lang.Long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Updates the properties of the specified account in the database.

 A column is updated only if a non-null value has been specified.

 @param osAccount     OsAccount that needs to be updated in the database.
 @param fullName      Full name, may be null.
 @param accountType   Account type, may be null
 @param accountStatus Account status, may be null.
 @param creationTime  Creation time, may be null.

 @return OsAccountUpdateResult Account update status, and updated account.

 @throws TskCoreException If there is a database error or if the updated
                          information conflicts with an existing account.]]>
      </doc>
    </method>
    <method name="updateCoreWindowsOsAccountAttributes" return="org.sleuthkit.datamodel.OsAccountManager.OsAccountUpdateResult"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="osAccount" type="org.sleuthkit.datamodel.OsAccount"/>
      <param name="accountSid" type="java.lang.String"/>
      <param name="loginName" type="java.lang.String"/>
      <param name="realmName" type="java.lang.String"/>
      <param name="referringHost" type="org.sleuthkit.datamodel.Host"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <exception name="OsAccountManager.NotUserSIDException" type="org.sleuthkit.datamodel.OsAccountManager.NotUserSIDException"/>
      <doc>
      <![CDATA[Update the address and/or login name for the specified account in the
 database. Also update the realm addr/name if needed.
 
 A column is updated only if its current value is null and a
 non-null value has been specified.


 @param osAccount     OsAccount that needs to be updated in the database.
 @param accountSid    Account SID, may be null.
 @param loginName     Login name, may be null.
 @param realmName     Realm name for the account.
 @param referringHost Host.

 @return OsAccountUpdateResult Account update status, and the updated
         account.

 @throws TskCoreException If there is a database error or if the updated
                          information conflicts with an existing account.]]>
      </doc>
    </method>
    <method name="getHosts" return="java.util.List&lt;org.sleuthkit.datamodel.Host&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="account" type="org.sleuthkit.datamodel.OsAccount"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Returns a list of hosts where the OsAccount has appeared.

 @param account OsAccount

 @return List of Hosts that reference the given OsAccount.

 @throws TskCoreException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Responsible for creating/updating/retrieving the OS accounts for files and
 artifacts.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.OsAccountManager -->
  <!-- start class org.sleuthkit.datamodel.OsAccountManager.NotUserSIDException -->
  <class name="OsAccountManager.NotUserSIDException" extends="org.sleuthkit.datamodel.TskException"
    abstract="false"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="NotUserSIDException"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Default constructor when error message is not available]]>
      </doc>
    </constructor>
    <constructor name="NotUserSIDException" type="java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Create exception containing the error message

 @param msg the message]]>
      </doc>
    </constructor>
    <constructor name="NotUserSIDException" type="java.lang.String, java.lang.Exception"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Create exception containing the error message and cause exception

 @param msg the message
 @param ex  cause exception]]>
      </doc>
    </constructor>
    <doc>
    <![CDATA[Exception thrown if a given SID is a valid SID but is a group SID, and
 not an individual user SID.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.OsAccountManager.NotUserSIDException -->
  <!-- start class org.sleuthkit.datamodel.OsAccountManager.OsAccountUpdateResult -->
  <class name="OsAccountManager.OsAccountUpdateResult" extends="java.lang.Object"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="getUpdateStatusCode" return="org.sleuthkit.datamodel.OsAccountManager.OsAccountUpdateStatus"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getUpdatedAccount" return="java.util.Optional&lt;org.sleuthkit.datamodel.OsAccount&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[Container that encapsulates the account update status and the updated account.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.OsAccountManager.OsAccountUpdateResult -->
  <!-- start class org.sleuthkit.datamodel.OsAccountManager.OsAccountUpdateStatus -->
  <class name="OsAccountManager.OsAccountUpdateStatus" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.OsAccountManager.OsAccountUpdateStatus&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.OsAccountManager.OsAccountUpdateStatus[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.OsAccountManager.OsAccountUpdateStatus"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <doc>
    <![CDATA[Status of an account update.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.OsAccountManager.OsAccountUpdateStatus -->
  <!-- start class org.sleuthkit.datamodel.OsAccountRealm -->
  <class name="OsAccountRealm" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="getRealmNames" return="java.util.List&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get realm names list.

 Currently we only support a single name for realm, so this list may have
 at most a single name. And the list may be empty if there is no name.

 @return List of realm names, may be empty.]]>
      </doc>
    </method>
    <method name="getRealmAddr" return="java.util.Optional&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the realm address, such as part of a Windows SID. 

 @return Optional realm unique address.]]>
      </doc>
    </method>
    <method name="getScopeHost" return="java.util.Optional&lt;org.sleuthkit.datamodel.Host&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the realm scope host, if it's a single host realm.
 
 @return Optional host. Is empty if the scope of the realm is domain-scoped.]]>
      </doc>
    </method>
    <method name="getScopeConfidence" return="org.sleuthkit.datamodel.OsAccountRealm.ScopeConfidence"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get realm scope confidence.
 
 @return Realm scope confidence.]]>
      </doc>
    </method>
    <method name="getDbStatus" return="org.sleuthkit.datamodel.OsAccountRealm.RealmDbStatus"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the database status of this realm.
 
 @return Realm database status.]]>
      </doc>
    </method>
    <method name="getScope" return="org.sleuthkit.datamodel.OsAccountRealm.RealmScope"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the realm scope.
 
 @return Realm scope.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Realm encapsulates the scope of an OsAccount. An account is unique within a realm.

 A realm may be host scoped, say for a local standalone computer, or 
 domain scoped.

 Many times, we may learn about the existence of a realm without fully understanding
 it. Such as when we find a Windows SID before we've parsed the registry to know if
 it is for the local computer or domain. By default, a realm is created with a 
 host-level scope and a confidence of "inferred".]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.OsAccountRealm -->
  <!-- start class org.sleuthkit.datamodel.OsAccountRealm.RealmDbStatus -->
  <class name="OsAccountRealm.RealmDbStatus" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.OsAccountRealm.RealmDbStatus&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.OsAccountRealm.RealmDbStatus[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.OsAccountRealm.RealmDbStatus"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getId" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="fromID" return="org.sleuthkit.datamodel.OsAccountRealm.RealmDbStatus"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="typeId" type="int"/>
    </method>
    <doc>
    <![CDATA[Encapsulates status of realm row.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.OsAccountRealm.RealmDbStatus -->
  <!-- start class org.sleuthkit.datamodel.OsAccountRealm.RealmScope -->
  <class name="OsAccountRealm.RealmScope" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.OsAccountRealm.RealmScope&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.OsAccountRealm.RealmScope[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.OsAccountRealm.RealmScope"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getId" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the id of the realm scope.
 
 @return Realm scope id.]]>
      </doc>
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the realm scope name.
 
 @return Realm scope name.]]>
      </doc>
    </method>
    <method name="fromID" return="org.sleuthkit.datamodel.OsAccountRealm.RealmScope"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="typeId" type="int"/>
      <doc>
      <![CDATA[Gets a realm scope confidence enum by id. 
 
 @param typeId Realm scope confidence id.
 
 @return ScopeConfidence enum.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Enum to encapsulate a realm scope.

 Scope of a realm may extend to a single host (local) 
 or to a domain.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.OsAccountRealm.RealmScope -->
  <!-- start class org.sleuthkit.datamodel.OsAccountRealm.ScopeConfidence -->
  <class name="OsAccountRealm.ScopeConfidence" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.OsAccountRealm.ScopeConfidence&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.OsAccountRealm.ScopeConfidence[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.OsAccountRealm.ScopeConfidence"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getId" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the id of the realm scope confidence.
 
 @return Realm scope confidence id.]]>
      </doc>
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the realm scope confidence name.
 
 @return Realm scope confidence name.]]>
      </doc>
    </method>
    <method name="fromID" return="org.sleuthkit.datamodel.OsAccountRealm.ScopeConfidence"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="typeId" type="int"/>
      <doc>
      <![CDATA[Gets a realm scope confidence enum by id. 
 
 @param typeId Realm scope confidence id.
 
 @return ScopeConfidence enum.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Enum to encapsulate scope confidence.

 We may know for sure that a realm is domain scope or host scope, based
 on where it is found. Occasionally, we may have to infer or assume a scope to
 initially create a realm.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.OsAccountRealm.ScopeConfidence -->
  <!-- start class org.sleuthkit.datamodel.OsAccountRealmManager -->
  <class name="OsAccountRealmManager" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="newWindowsRealm" return="org.sleuthkit.datamodel.OsAccountRealm"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="accountSid" type="java.lang.String"/>
      <param name="realmName" type="java.lang.String"/>
      <param name="referringHost" type="org.sleuthkit.datamodel.Host"/>
      <param name="realmScope" type="org.sleuthkit.datamodel.OsAccountRealm.RealmScope"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <exception name="OsAccountManager.NotUserSIDException" type="org.sleuthkit.datamodel.OsAccountManager.NotUserSIDException"/>
      <doc>
      <![CDATA[Create realm based on Windows information. The input SID is a user/group
 SID.The domain SID is extracted from this incoming SID.

 @param accountSid    User/group SID. May be null only if name is not
                      null.
 @param realmName     Realm name. May be null only if SID is not null.
 @param referringHost Host where realm reference is found.
 @param realmScope    Scope of realm. Use UNKNOWN if you are not sure and
                      the method will try to detect the correct scope.

 @return OsAccountRealm.

 @throws TskCoreException                     If there is an error
                                              creating the realm.
 @throws OsAccountManager.NotUserSIDException If the SID is not a user
                                              SID.]]>
      </doc>
    </method>
    <method name="getWindowsRealm" return="java.util.Optional&lt;org.sleuthkit.datamodel.OsAccountRealm&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="accountSid" type="java.lang.String"/>
      <param name="realmName" type="java.lang.String"/>
      <param name="referringHost" type="org.sleuthkit.datamodel.Host"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <exception name="OsAccountManager.NotUserSIDException" type="org.sleuthkit.datamodel.OsAccountManager.NotUserSIDException"/>
      <doc>
      <![CDATA[Get a windows realm by the account SID, or the domain name. The input SID
 is an user/group account SID. The domain SID is extracted from this
 incoming SID.

 @param accountSid    Account SID, may be null.
 @param realmName     Realm name, may be null only if accountSid is not
                      null.
 @param referringHost Referring Host.

 @return Optional with OsAccountRealm, Optional.empty if no matching realm
         is found.

 @throws TskCoreException
 @throws OsAccountManager.NotUserSIDException If the SID is not a user
                                              SID.]]>
      </doc>
    </method>
    <method name="updateRealm" return="org.sleuthkit.datamodel.OsAccountRealmManager.OsRealmUpdateResult"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="realm" type="org.sleuthkit.datamodel.OsAccountRealm"/>
      <param name="realmAddr" type="java.lang.String"/>
      <param name="realmName" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Updates the realm address and/or name, if a non blank address/name is
 specified and the current address/name is blank.
 
 NOTE: This will not merge two realms if the updated information exists
 for another realm (i.e. such as adding an address to a realm that has
 only a name and there is already a realm with that address). 
 

 @param realm      Realm to update.
 @param realmAddr  Realm address, may be null if the address doesn't need
                   to be updated.
 @param realmName  Realm name, may be null if the name doesn't need to be
                   updated.
 
 @return OsRealmUpdateResult Update status and updated realm.
 
 @throws TskCoreException If there is a database error or if a realm
 already exists with that information.]]>
      </doc>
    </method>
    <method name="getRealmByRealmId" return="org.sleuthkit.datamodel.OsAccountRealm"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get the realm from the given row id. 
 
 @param id Realm row id.
 
 @return Realm. 
 @throws TskCoreException on error]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Create/Retrieve/Update OS account realms. Realms represent either an individual
 host with local accounts or a domain.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.OsAccountRealmManager -->
  <!-- start class org.sleuthkit.datamodel.OsAccountRealmManager.OsRealmUpdateResult -->
  <class name="OsAccountRealmManager.OsRealmUpdateResult" extends="java.lang.Object"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="getUpdateStatus" return="org.sleuthkit.datamodel.OsAccountRealmManager.OsRealmUpdateStatus"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getUpdatedRealm" return="java.util.Optional&lt;org.sleuthkit.datamodel.OsAccountRealm&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[Container to encapsulate the status returned by the realm update api, and
 the updated realm.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.OsAccountRealmManager.OsRealmUpdateResult -->
  <!-- start class org.sleuthkit.datamodel.OsAccountRealmManager.OsRealmUpdateStatus -->
  <class name="OsAccountRealmManager.OsRealmUpdateStatus" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.OsAccountRealmManager.OsRealmUpdateStatus&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.OsAccountRealmManager.OsRealmUpdateStatus[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.OsAccountRealmManager.OsRealmUpdateStatus"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <doc>
    <![CDATA[Status of a realm update.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.OsAccountRealmManager.OsRealmUpdateStatus -->
  <!-- start class org.sleuthkit.datamodel.OSInfo -->
  <class name="OSInfo" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="OSInfo"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="OSInfo" type="org.sleuthkit.datamodel.BlackboardArtifact, boolean, long, org.sleuthkit.datamodel.Content"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Initialize an OSInfo object

 @param a_art          - OSInfo artifact associated with one registry hive
 @param a_isBackup     - True if the registry hive was found in a
                       "RegBack" directory
 @param a_fileSystemId - File system ID for FS containing the registry
                       hive
 @param a_parent       - Parent directory containing the registry hive.
                       Can be null

 @throws TskCoreException]]>
      </doc>
    </constructor>
    <constructor name="OSInfo" type="org.sleuthkit.datamodel.BlackboardArtifact, boolean, org.sleuthkit.datamodel.Content"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Initialize an OSInfo object (without file system information)

 @param a_art      - OSInfo artifact associated with one registry hive
 @param a_isBackup - True if the registry hive was found in a "RegBack"
                   directory
 @param a_parent   - Parent directory containing the registry hive. Can be
                   null

 @throws TskCoreException]]>
      </doc>
    </constructor>
    <method name="matches" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="a_osInfo" type="org.sleuthkit.datamodel.OSInfo"/>
      <doc>
      <![CDATA[Determine whether two OSInfo objects should be combined.

 @param a_osInfo - the OSInfo object to compare against

 @return]]>
      </doc>
    </method>
    <method name="combine"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="a_osInfo" type="org.sleuthkit.datamodel.OSInfo"/>
      <doc>
      <![CDATA[Combine the attribute map for two OSInfo objects.

 @param a_osInfo - The OSInfo object to combine with]]>
      </doc>
    </method>
    <method name="getArtifacts" return="java.util.List&lt;org.sleuthkit.datamodel.BlackboardArtifact&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="haveFileSystem" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getFileSystemId" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getIsBackup" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getAttributeValue" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="attrType" type="org.sleuthkit.datamodel.BlackboardAttribute.ATTRIBUTE_TYPE"/>
      <doc>
      <![CDATA[Generic method to get an OSInfo attribute value by ATTRIBUTE_TYPE.

 @param attrType - the attribute to get

 @return]]>
      </doc>
    </method>
    <method name="getCompName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getProcessorArchitecture" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDomain" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getOSName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[Utility class to hold information from OS Info artifacts]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.OSInfo -->
  <!-- start class org.sleuthkit.datamodel.OSUtility -->
  <class name="OSUtility" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getOSInfo" return="java.util.List&lt;org.sleuthkit.datamodel.OSInfo&gt;"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="skCase" type="org.sleuthkit.datamodel.SleuthkitCase"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all non-backup OSInfo data

 @param skCase - Have to pass this in because we don't have access to the
               normal method

 @return List of OSInfo objects

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getOSInfo" return="java.util.List&lt;org.sleuthkit.datamodel.OSInfo&gt;"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="skCase" type="org.sleuthkit.datamodel.SleuthkitCase"/>
      <param name="fsc" type="org.sleuthkit.datamodel.FsContent"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get OSInfo from the same file system as the given object. Will not
 include backups.

 @param skCase - Have to pass this in because we don't have access to the
               normal method
 @param fsc    - FsContent from the same file system we want the OS
               information from

 @return - List of OSInfo objects

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getAllOSInfo" return="java.util.List&lt;org.sleuthkit.datamodel.OSInfo&gt;"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="skCase" type="org.sleuthkit.datamodel.SleuthkitCase"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Creates a list of all OS Info data on any file system, including the
 backups

 @param skCase - Have to pass this in because we don't have access to the
               normal method

 @return - List of OSInfo objects

 @throws TskCoreException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Utility class to combine information from various OS info artifacts into
 fewer objects.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.OSUtility -->
  <!-- start class org.sleuthkit.datamodel.Person -->
  <class name="Person" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="getPersonId" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the row id for the person.

 @return Row id.]]>
      </doc>
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the name for the person.

 @return Person name.]]>
      </doc>
    </method>
    <method name="setName"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="newName" type="java.lang.String"/>
      <doc>
      <![CDATA[Sets the name for the person.
 Does not update the database.

 @param newName The new name.]]>
      </doc>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="obj" type="java.lang.Object"/>
    </method>
    <doc>
    <![CDATA[Encapsulates a person.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.Person -->
  <!-- start class org.sleuthkit.datamodel.PersonManager -->
  <class name="PersonManager" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="getPersons" return="java.util.List&lt;org.sleuthkit.datamodel.Person&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all persons in the database.

 @return List of persons

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="updatePerson" return="org.sleuthkit.datamodel.Person"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="person" type="org.sleuthkit.datamodel.Person"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Update the database to match the given Person.

 @param person The person to update.

 @return person The person that was updated.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="deletePerson"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Delete a person. Name comparison is case-insensitive.

 @param name Name of the person to delete

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getPerson" return="java.util.Optional&lt;org.sleuthkit.datamodel.Person&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get person with given name. Name comparison is case-insensitive.

 @param name Person name to look for.

 @return Optional with person. Optional.empty if no matching person is
         found.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getPerson" return="java.util.Optional&lt;org.sleuthkit.datamodel.Person&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get person with given id.

 @param id Id of the person to look for.

 @return Optional with person. Optional.empty if no matching person is
         found.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="newPerson" return="org.sleuthkit.datamodel.Person"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Create a person with specified name. If a person already exists with the
 given name, it returns the existing person. Name comparison is
 case-insensitive.

 @param name	Person name.

 @return Person with the specified name.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getHostsForPerson" return="java.util.List&lt;org.sleuthkit.datamodel.Host&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="person" type="org.sleuthkit.datamodel.Person"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all hosts associated with the given person.

 @param person The person.

 @return The list of hosts corresponding to the person.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getPerson" return="java.util.Optional&lt;org.sleuthkit.datamodel.Person&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="host" type="org.sleuthkit.datamodel.Host"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get person for the given host or empty if no associated person.

 @param host The host.

 @return The parent person or empty if no parent person.

 @throws TskCoreException if error occurs.]]>
      </doc>
    </method>
    <method name="setPerson"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="host" type="org.sleuthkit.datamodel.Host"/>
      <param name="person" type="org.sleuthkit.datamodel.Person"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Set host's parent person.

 @param host   The host whose parent will be set.
 @param person The person to be a parent or null to remove any parent
               person reference from this host.

 @throws TskCoreException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Responsible for creating/updating/retrieving Persons.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.PersonManager -->
  <!-- start class org.sleuthkit.datamodel.Pool -->
  <class name="Pool" extends="org.sleuthkit.datamodel.AbstractContent"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="Pool" type="org.sleuthkit.datamodel.SleuthkitCase, long, java.lang.String, long"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructor most inputs are from the database

 @param db        case database handle
 @param obj_id    the unique content object id for the pool
 @param name      name of the pool
 @param type      type of the pool]]>
      </doc>
    </constructor>
    <method name="read" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="readBuffer" type="byte[]"/>
      <param name="offset" type="long"/>
      <param name="len" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getSize" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getType" return="org.sleuthkit.datamodel.TskData.TSK_POOL_TYPE_ENUM"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[get the type

 @return type]]>
      </doc>
    </method>
    <method name="close"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="finalize"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <exception name="Throwable" type="java.lang.Throwable"/>
    </method>
    <method name="accept" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="v" type="org.sleuthkit.datamodel.SleuthkitItemVisitor&lt;T&gt;"/>
    </method>
    <method name="accept" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="v" type="org.sleuthkit.datamodel.ContentVisitor&lt;T&gt;"/>
    </method>
    <method name="getChildren" return="java.util.List&lt;org.sleuthkit.datamodel.Content&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getChildrenIds" return="java.util.List&lt;java.lang.Long&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="preserveState" type="boolean"/>
    </method>
    <doc>
    <![CDATA[Represents a pool. Populated based on data in database.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.Pool -->
  <!-- start class org.sleuthkit.datamodel.ReadContentInputStream -->
  <class name="ReadContentInputStream" extends="java.io.InputStream"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <constructor name="ReadContentInputStream" type="org.sleuthkit.datamodel.Content"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="read" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="ReadContentInputStream.ReadContentInputStreamException" type="org.sleuthkit.datamodel.ReadContentInputStream.ReadContentInputStreamException"/>
    </method>
    <method name="read" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="b" type="byte[]"/>
      <exception name="ReadContentInputStream.ReadContentInputStreamException" type="org.sleuthkit.datamodel.ReadContentInputStream.ReadContentInputStreamException"/>
    </method>
    <method name="read" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="b" type="byte[]"/>
      <param name="off" type="int"/>
      <param name="len" type="int"/>
      <exception name="ReadContentInputStream.ReadContentInputStreamException" type="org.sleuthkit.datamodel.ReadContentInputStream.ReadContentInputStreamException"/>
    </method>
    <method name="available" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="IOException" type="java.io.IOException"/>
    </method>
    <method name="skip" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="n" type="long"/>
      <exception name="IOException" type="java.io.IOException"/>
    </method>
    <method name="close"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="IOException" type="java.io.IOException"/>
    </method>
    <method name="markSupported" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getLength" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get total length of the stream

 @return number of bytes that can be read from this stream]]>
      </doc>
    </method>
    <method name="getCurPosition" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get current position in the stream

 @return current offset in bytes]]>
      </doc>
    </method>
    <method name="seek" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="newPosition" type="long"/>
      <doc>
      <![CDATA[Set new current position in the stream, up to and including EOF

 @param newPosition new position in the stream to be set

 @return the actual position set, which can be less than position passed
         in if EOF has been reached]]>
      </doc>
    </method>
    <doc>
    <![CDATA[InputStream to read bytes from a Content object's data]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.ReadContentInputStream -->
  <!-- start class org.sleuthkit.datamodel.ReadContentInputStream.ReadContentInputStreamException -->
  <class name="ReadContentInputStream.ReadContentInputStreamException" extends="java.io.IOException"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <constructor name="ReadContentInputStreamException" type="java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="ReadContentInputStreamException" type="java.lang.String, java.lang.Throwable"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <doc>
    <![CDATA[Exception thrown when there's an error reading from the
 ReadContentInputStream.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.ReadContentInputStream.ReadContentInputStreamException -->
  <!-- start class org.sleuthkit.datamodel.Relationship -->
  <class name="Relationship" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <constructor name="Relationship"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <doc>
    <![CDATA[A relationship between Accounts, such as a communication ( email, sms, phone
 call (call log) ) or presence in a contact book.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.Relationship -->
  <!-- start class org.sleuthkit.datamodel.Relationship.Type -->
  <class name="Relationship.Type" extends="java.lang.Object"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="getDisplayName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the display name.

 @return The display name.]]>
      </doc>
    </method>
    <method name="getTypeName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the unique type name

 @return The unique type name.]]>
      </doc>
    </method>
    <method name="getTypeID" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the id of this type.

 @return The type ID.]]>
      </doc>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="obj" type="java.lang.Object"/>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <field name="MESSAGE" type="org.sleuthkit.datamodel.Relationship.Type"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="CALL_LOG" type="org.sleuthkit.datamodel.Relationship.Type"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="CONTACT" type="org.sleuthkit.datamodel.Relationship.Type"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
  </class>
  <!-- end class org.sleuthkit.datamodel.Relationship.Type -->
  <!-- start class org.sleuthkit.datamodel.Report -->
  <class name="Report" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="org.sleuthkit.datamodel.Content"/>
    <method name="getId" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPath" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the absolute local path to the report.

 @return]]>
      </doc>
    </method>
    <method name="getCreatedTime" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the creation date of the report.

 @return Number of seconds since Jan 1, 1970.]]>
      </doc>
    </method>
    <method name="getSourceModuleName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the name of the module (e.g., ingest module, reporting module) that
 generated the report.

 @return The module name.]]>
      </doc>
    </method>
    <method name="getReportName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the report name, if any.

 @return The name of the report, possibly empty.]]>
      </doc>
    </method>
    <method name="read" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="buf" type="byte[]"/>
      <param name="offset" type="long"/>
      <param name="len" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="close"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getSize" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="accept" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="v" type="org.sleuthkit.datamodel.ContentVisitor&lt;T&gt;"/>
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getUniquePath" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getDataSource" return="org.sleuthkit.datamodel.Content"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getChildren" return="java.util.List&lt;org.sleuthkit.datamodel.Content&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="hasChildren" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getChildrenCount" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getParent" return="org.sleuthkit.datamodel.Content"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getChildrenIds" return="java.util.List&lt;java.lang.Long&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="newArtifact" return="org.sleuthkit.datamodel.BlackboardArtifact"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactTypeID" type="int"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="newAnalysisResult" return="org.sleuthkit.datamodel.AnalysisResultAdded"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactType" type="org.sleuthkit.datamodel.BlackboardArtifact.Type"/>
      <param name="score" type="org.sleuthkit.datamodel.Score"/>
      <param name="conclusion" type="java.lang.String"/>
      <param name="configuration" type="java.lang.String"/>
      <param name="justification" type="java.lang.String"/>
      <param name="attributesList" type="java.util.Collection&lt;org.sleuthkit.datamodel.BlackboardAttribute&gt;"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="newDataArtifact" return="org.sleuthkit.datamodel.DataArtifact"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactType" type="org.sleuthkit.datamodel.BlackboardArtifact.Type"/>
      <param name="attributesList" type="java.util.Collection&lt;org.sleuthkit.datamodel.BlackboardAttribute&gt;"/>
      <param name="osAccount" type="org.sleuthkit.datamodel.OsAccount"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="newArtifact" return="org.sleuthkit.datamodel.BlackboardArtifact"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="type" type="org.sleuthkit.datamodel.BlackboardArtifact.ARTIFACT_TYPE"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getArtifacts" return="java.util.ArrayList&lt;org.sleuthkit.datamodel.BlackboardArtifact&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactTypeName" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getGenInfoArtifact" return="org.sleuthkit.datamodel.BlackboardArtifact"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getGenInfoArtifact" return="org.sleuthkit.datamodel.BlackboardArtifact"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="create" type="boolean"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getGenInfoAttributes" return="java.util.ArrayList&lt;org.sleuthkit.datamodel.BlackboardAttribute&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="attr_type" type="org.sleuthkit.datamodel.BlackboardAttribute.ATTRIBUTE_TYPE"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getArtifacts" return="java.util.ArrayList&lt;org.sleuthkit.datamodel.BlackboardArtifact&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactTypeID" type="int"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getArtifacts" return="java.util.ArrayList&lt;org.sleuthkit.datamodel.BlackboardArtifact&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="type" type="org.sleuthkit.datamodel.BlackboardArtifact.ARTIFACT_TYPE"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getAllArtifacts" return="java.util.ArrayList&lt;org.sleuthkit.datamodel.BlackboardArtifact&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getAllAnalysisResults" return="java.util.List&lt;org.sleuthkit.datamodel.AnalysisResult&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getAnalysisResults" return="java.util.List&lt;org.sleuthkit.datamodel.AnalysisResult&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactType" type="org.sleuthkit.datamodel.BlackboardArtifact.Type"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getAggregateScore" return="org.sleuthkit.datamodel.Score"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getHashSetNames" return="java.util.Set&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getArtifactsCount" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactTypeName" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getArtifactsCount" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactTypeID" type="int"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getArtifactsCount" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="type" type="org.sleuthkit.datamodel.BlackboardArtifact.ARTIFACT_TYPE"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getAllArtifactsCount" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="accept" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="v" type="org.sleuthkit.datamodel.SleuthkitItemVisitor&lt;T&gt;"/>
    </method>
    <doc>
    <![CDATA[This is a class that models reports.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.Report -->
  <!-- start class org.sleuthkit.datamodel.Score -->
  <class name="Score" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="java.lang.Comparable&lt;org.sleuthkit.datamodel.Score&gt;"/>
    <constructor name="Score" type="org.sleuthkit.datamodel.Score.Significance, org.sleuthkit.datamodel.Score.MethodCategory"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getSignificance" return="org.sleuthkit.datamodel.Score.Significance"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getMethodCategory" return="org.sleuthkit.datamodel.Score.MethodCategory"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="compareTo" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="other" type="org.sleuthkit.datamodel.Score"/>
    </method>
    <method name="getScoreComparator" return="java.util.Comparator&lt;org.sleuthkit.datamodel.Score&gt;"
      abstract="false" native="false" synchronized="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </method>
    <field name="SCORE_UNKNOWN" type="org.sleuthkit.datamodel.Score"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <doc>
    <![CDATA[Encapsulates either an analysis result score or the aggregate score of
 Content. A score measures how likely the Content object is to be relevant to
 an investigation. Relevance is determined by a series of analysis techniques,
 each of which has a score. The aggregate score for an item is then determined
 based on its analysis results.

 A score has two primary fields: Significance and MethodCategory.

 There are two method categories : Auto and User Defined. "Auto" comes from
 various (automated) analysis modules assigning a significance. "User Defined"
 comes from a user manually assigning a significance to the item. The "User
 Defined" scores will overrule the "Auto" scores. Modules should be
 creating score with category "Auto".

 The significance is a range of how Notable (i.e. "Bad") the item is. The
 range is from NONE (i.e. "Good") to NOTABLE with values in the middle, such
 as LIKELY_NOTABLE for suspicious items. The LIKELY_ values are used when
 there is less confidence in the result. The significance has to do with the
 false positive rate at actually detecting notable or benign things.


 For an example, if a file is found in a MD5 hashset of notable files, then a
 module would use a significance of NOTABLE. This is because the MD5 is exact
 match and the hash set is all notable files.

 For a keyword hit, the significance would be LIKELY_NOTABLE because keywords
 often can be used in both good and bad ways. A user will need to review the
 file to determine if it is a true or false positive.

 If a file is found to be on a good list (via MD5), then it could have a
 significance of NONE and then other modules could ignore it.

 An aggregate score is the combination of the specific analysis results.
 USER_RESULTS will overrule NORMAL. NOTABLE overrules NONE. Both of those
 overrule the LIKELY_* results. 
 
 NOTABLE > NONE > LIKELY_NOTABLE > LIKELY_NONE > UNKNOWN]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.Score -->
  <!-- start class org.sleuthkit.datamodel.Score.MethodCategory -->
  <class name="Score.MethodCategory" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.Score.MethodCategory&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.Score.MethodCategory[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.Score.MethodCategory"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="fromString" return="org.sleuthkit.datamodel.Score.MethodCategory"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="fromID" return="org.sleuthkit.datamodel.Score.MethodCategory"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="int"/>
    </method>
    <method name="getId" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDisplayName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[Encapsulates category of methods assigning significance.

 Significance assigned by a user overrides the significance assigned by
 automated analysis.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.Score.MethodCategory -->
  <!-- start class org.sleuthkit.datamodel.Score.Significance -->
  <class name="Score.Significance" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.Score.Significance&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.Score.Significance[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.Score.Significance"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="fromString" return="org.sleuthkit.datamodel.Score.Significance"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="fromID" return="org.sleuthkit.datamodel.Score.Significance"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="int"/>
    </method>
    <method name="getId" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get enum ordinal.
 
 @return Ordinal.]]>
      </doc>
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets name that has no spaces in it.
 Does not get translated.
 
 @return Name.]]>
      </doc>
    </method>
    <method name="getDisplayName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets display name that may have spaces and can be used in the UI.
 May return a translated version. 
 
 @return Display name.]]>
      </doc>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[Indicates the relevance of an item based on the analysis result's conclusion.
 
 For comparing significance, the following ordering applies
 
 Bad > Good > Likely Bad > Likely Good > Unknown]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.Score.Significance -->
  <!-- start class org.sleuthkit.datamodel.ScoreChange -->
  <class name="ScoreChange" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="getDataSourceObjectId" return="java.lang.Long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getObjectId" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getOldScore" return="org.sleuthkit.datamodel.Score"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getNewScore" return="org.sleuthkit.datamodel.Score"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[This class encapsulates a score change.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.ScoreChange -->
  <!-- start class org.sleuthkit.datamodel.ScoringManager -->
  <class name="ScoringManager" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getAggregateScore" return="org.sleuthkit.datamodel.Score"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="objId" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get the aggregate score for the given object.

 @param objId Object id.

 @return Score, if it is found, unknown otherwise.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getContentCount" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="dataSourceObjectId" type="long"/>
      <param name="significance" type="org.sleuthkit.datamodel.Score.Significance"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get the count of contents within the specified data source
 with the specified significance.

 @param dataSourceObjectId Data source object id.
 @param significance Significance to look for.

 @return Number of contents with given score.
 @throws TskCoreException if there is an error getting the count.]]>
      </doc>
    </method>
    <method name="getContent" return="java.util.List&lt;org.sleuthkit.datamodel.Content&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="dataSourceObjectId" type="long"/>
      <param name="significance" type="org.sleuthkit.datamodel.Score.Significance"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get the contents with the specified score.

 @param dataSourceObjectId Data source object id.
 @param significance       Significance to look for.

 @return Collection of contents with given score.
 
 @throws TskCoreException if there is an error getting the contents.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[The scoring manager is responsible for updating and querying the score of
 objects.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.ScoringManager -->
  <!-- start class org.sleuthkit.datamodel.SlackFile -->
  <class name="SlackFile" extends="org.sleuthkit.datamodel.FsContent"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="readInt" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="buf" type="byte[]"/>
      <param name="offset" type="long"/>
      <param name="len" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Reads bytes from the slack space

 @param buf    Buffer to read into.
 @param offset Start position in the slack space.
 @param len    Number of bytes to read.

 @return Number of bytes read.

 @throws TskCoreException if there is a problem reading the file.]]>
      </doc>
    </method>
    <method name="accept" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="v" type="org.sleuthkit.datamodel.SleuthkitItemVisitor&lt;T&gt;"/>
      <doc>
      <![CDATA[Accepts a content visitor (Visitor design pattern).

 @param v A ContentVisitor supplying an algorithm to run using this file
          as input.

 @return The output of the algorithm.]]>
      </doc>
    </method>
    <method name="accept" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="v" type="org.sleuthkit.datamodel.ContentVisitor&lt;T&gt;"/>
      <doc>
      <![CDATA[Accepts a Sleuthkit item visitor (Visitor design pattern).

 @param v A SleuthkitItemVisitor supplying an algorithm to run using this
          file as input.

 @return The output of the algorithm.]]>
      </doc>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="preserveState" type="boolean"/>
      <doc>
      <![CDATA[Provides a string representation of this file.

 @param preserveState True if state should be included in the string
                      representation of this object.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[A representation of a slack file that has been added to a case.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.SlackFile -->
  <!-- start class org.sleuthkit.datamodel.SleuthkitCase -->
  <class name="SleuthkitCase" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="registerForEvents"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="listener" type="java.lang.Object"/>
    </method>
    <method name="unregisterForEvents"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="listener" type="java.lang.Object"/>
    </method>
    <method name="tryConnect"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="info" type="org.sleuthkit.datamodel.CaseDbConnectionInfo"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Attempts to connect to the database with the passed in settings, throws
 if the settings are not sufficient to connect to the database type
 indicated. Only attempts to connect to remote databases.

 When issues occur, it attempts to diagnose them by looking at the
 exception messages, returning the appropriate user-facing text for the
 exception received. This method expects the Exceptions messages to be in
 English and compares against English text.

 @param info The connection information

 @throws org.sleuthkit.datamodel.TskCoreException]]>
      </doc>
    </method>
    <method name="getCommunicationsManager" return="org.sleuthkit.datamodel.CommunicationsManager"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the communications manager for this case.

 @return The per case CommunicationsManager object.

 @throws org.sleuthkit.datamodel.TskCoreException]]>
      </doc>
    </method>
    <method name="getBlackboard" return="org.sleuthkit.datamodel.Blackboard"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the artifacts blackboard for this case.

 @return The per case Blackboard object.]]>
      </doc>
    </method>
    <method name="getTimelineManager" return="org.sleuthkit.datamodel.TimelineManager"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the communications manager for this case.

 @return The per case TimelineManager object.

 @throws org.sleuthkit.datamodel.TskCoreException]]>
      </doc>
    </method>
    <method name="getCaseDbAccessManager" return="org.sleuthkit.datamodel.CaseDbAccessManager"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getTaggingManager" return="org.sleuthkit.datamodel.TaggingManager"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the case database TaggingManager object.

 @return The per case TaggingManager object.]]>
      </doc>
    </method>
    <method name="getScoringManager" return="org.sleuthkit.datamodel.ScoringManager"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the scoring manager for this case.

 @return The per case ScoringManager object.

 @throws org.sleuthkit.datamodel.TskCoreException]]>
      </doc>
    </method>
    <method name="getOsAccountRealmManager" return="org.sleuthkit.datamodel.OsAccountRealmManager"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the OS account realm manager for this case.

 @return The per case OsAccountRealmManager object.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getOsAccountManager" return="org.sleuthkit.datamodel.OsAccountManager"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the OS account manager for this case.

 @return The per case OsAccountManager object.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getHostManager" return="org.sleuthkit.datamodel.HostManager"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the Hosts manager for this case.

 @return The per case HostManager object.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getPersonManager" return="org.sleuthkit.datamodel.PersonManager"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the Person manager for this case.

 @return The per case PersonManager object.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getHostAddressManager" return="org.sleuthkit.datamodel.HostAddressManager"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the HostAddress manager for this case.

 @return The per case HostAddressManager object.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="copyCaseDB"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="newDBPath" type="java.lang.String"/>
      <exception name="IOException" type="java.io.IOException"/>
      <doc>
      <![CDATA[Make a duplicate / backup copy of the current case database. Makes a new
 copy only, and continues to use the current connection.

 @param newDBPath Path to the copy to be created. File will be overwritten
                  if it exists.

 @throws IOException if copying fails.]]>
      </doc>
    </method>
    <method name="getSchemaVersion" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="since 4.5.0 Use getDBSchemaVersion() instead for more
 complete version info.">
      <doc>
      <![CDATA[Returns case database schema version number. As of TSK 4.5.0 db schema
 versions are two part Major.minor. This method only returns the major
 part. Use getDBSchemaVersion() for the complete version.

 @return The schema version number as an integer.

 @deprecated since 4.5.0 Use getDBSchemaVersion() instead for more
 complete version info.]]>
      </doc>
    </method>
    <method name="getDBSchemaVersion" return="org.sleuthkit.datamodel.VersionNumber"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the database schema version in use.

 @return the database schema version in use.]]>
      </doc>
    </method>
    <method name="getDBSchemaCreationVersion" return="org.sleuthkit.datamodel.CaseDbSchemaVersionNumber"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the creation version of the database schema.

 @return the creation version for the database schema, the creation
         version will be 0.0 for databases created prior to 8.2]]>
      </doc>
    </method>
    <method name="getDatabaseType" return="org.sleuthkit.datamodel.TskData.DbType"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns the type of database in use.

 @return database type]]>
      </doc>
    </method>
    <method name="getBackupDatabasePath" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns the path of a backup copy of the database made when a schema
 version upgrade has occurred.

 @return The path of the backup file or null if no backup was made.]]>
      </doc>
    </method>
    <method name="beginTransaction" return="org.sleuthkit.datamodel.SleuthkitCase.CaseDbTransaction"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Create a new transaction on the case database. The transaction object
 that is returned can be passed to methods that take a CaseDbTransaction.
 The caller is responsible for calling either commit() or rollback() on
 the transaction object.
 
 Note that this beginning the transaction also acquires the single user
 case write lock, which will be automatically released when the transaction
 is closed.

 @return A CaseDbTransaction object.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getDatabaseName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the case database name.

 @return The case database name.]]>
      </doc>
    </method>
    <method name="getDbDirPath" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the full path to the case directory. For a SQLite case database, this
 is the same as the database directory path.

 @return Case directory path.]]>
      </doc>
    </method>
    <method name="acquireSingleUserCaseWriteLock"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Acquires a write lock, but only if this is a single-user case. Always
 call this method in a try block with a call to the lock release method in
 an associated finally block.]]>
      </doc>
    </method>
    <method name="releaseSingleUserCaseWriteLock"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Releases a write lock, but only if this is a single-user case. This
 method should always be called in the finally block of a try block in
 which the lock was acquired.]]>
      </doc>
    </method>
    <method name="acquireSingleUserCaseReadLock"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Acquires a read lock, but only if this is a single-user case. Call this
 method in a try block with a call to the lock release method in an
 associated finally block.]]>
      </doc>
    </method>
    <method name="releaseSingleUserCaseReadLock"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Releases a read lock, but only if this is a single-user case. This method
 should always be called in the finally block of a try block in which the
 lock was acquired.]]>
      </doc>
    </method>
    <method name="openCase" return="org.sleuthkit.datamodel.SleuthkitCase"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="dbPath" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Open an existing case database.

 @param dbPath Path to SQLite case database.

 @return Case database object.

 @throws org.sleuthkit.datamodel.TskCoreException]]>
      </doc>
    </method>
    <method name="openCase" return="org.sleuthkit.datamodel.SleuthkitCase"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="databaseName" type="java.lang.String"/>
      <param name="info" type="org.sleuthkit.datamodel.CaseDbConnectionInfo"/>
      <param name="caseDir" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Open an existing multi-user case database.

 @param databaseName The name of the database.
 @param info         Connection information for the the database.
 @param caseDir      The folder where the case metadata fils is stored.

 @return A case database object.

 @throws TskCoreException If there is a problem opening the database.]]>
      </doc>
    </method>
    <method name="newCase" return="org.sleuthkit.datamodel.SleuthkitCase"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="dbPath" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Creates a new SQLite case database.

 @param dbPath Path to where SQlite case database should be created.

 @return A case database object.

 @throws org.sleuthkit.datamodel.TskCoreException]]>
      </doc>
    </method>
    <method name="newCase" return="org.sleuthkit.datamodel.SleuthkitCase"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="caseName" type="java.lang.String"/>
      <param name="info" type="org.sleuthkit.datamodel.CaseDbConnectionInfo"/>
      <param name="caseDirPath" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Creates a new PostgreSQL case database.

 @param caseName    The name of the case. It will be used to create a case
                    database name that can be safely used in SQL commands
                    and will not be subject to name collisions on the case
                    database server. Use getDatabaseName to get the
                    created name.
 @param info        The information to connect to the database.
 @param caseDirPath The case directory path.

 @return A case database object.

 @throws org.sleuthkit.datamodel.TskCoreException]]>
      </doc>
    </method>
    <method name="getCurrentExaminer" return="org.sleuthkit.datamodel.Examiner"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Returns the Examiner object for currently logged in user

 @return A Examiner object.

 @throws org.sleuthkit.datamodel.TskCoreException]]>
      </doc>
    </method>
    <method name="makeAddImageProcess" return="org.sleuthkit.datamodel.SleuthkitJNI.CaseDbHandle.AddImageProcess"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="timeZone" type="java.lang.String"/>
      <param name="addUnallocSpace" type="boolean"/>
      <param name="noFatFsOrphans" type="boolean"/>
      <param name="imageCopyPath" type="java.lang.String"/>
      <doc>
      <![CDATA[Starts the multi-step process of adding an image data source to the case
 by creating an object that can be used to control the process and get
 progress messages from it.

 @param timeZone        The time zone of the image.
 @param addUnallocSpace Set to true to create virtual files for
                        unallocated space in the image.
 @param noFatFsOrphans  Set to true to skip processing orphan files of FAT
                        file systems.
 @param imageCopyPath   Path to which a copy of the image should be
                        written. Use the empty string to disable image
                        writing.

 @return An object that encapsulates control of adding an image via the
         SleuthKit native code layer.]]>
      </doc>
    </method>
    <method name="getRootObjects" return="java.util.List&lt;org.sleuthkit.datamodel.Content&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get the list of root objects (data sources) from the case database, e.g.,
 image files, logical (local) files, virtual directories.

 @return List of content objects representing root objects.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getDataSources" return="java.util.List&lt;org.sleuthkit.datamodel.DataSource&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the data sources for the case. For each data source, if it is an
 image, an Image will be instantiated. Otherwise, a LocalFilesDataSource
 will be instantiated.

 NOTE: The DataSource interface is an emerging feature and at present is
 only useful for obtaining the object id and the device id, an
 ASCII-printable identifier for the device associated with the data source
 that is intended to be unique across multiple cases (e.g., a UUID). In
 the future, this method will be a replacement for the getRootObjects
 method.

 @return A list of the data sources for the case.

 @throws TskCoreException if there is a problem getting the data sources.]]>
      </doc>
    </method>
    <method name="getDataSource" return="org.sleuthkit.datamodel.DataSource"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="objectId" type="long"/>
      <exception name="TskDataException" type="org.sleuthkit.datamodel.TskDataException"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets a specific data source for the case. If it is an image, an Image
 will be instantiated. Otherwise, a LocalFilesDataSource will be
 instantiated.

 NOTE: The DataSource class is an emerging feature and at present is only
 useful for obtaining the object id and the data source identifier, an
 ASCII-printable identifier for the data source that is intended to be
 unique across multiple cases (e.g., a UUID). In the future, this method
 will be a replacement for the getRootObjects method.

 @param objectId The object id of the data source.

 @return The data source.

 @throws TskDataException If there is no data source for the given object
                          id.
 @throws TskCoreException If there is a problem getting the data source.]]>
      </doc>
    </method>
    <method name="getBlackboardArtifacts" return="java.util.ArrayList&lt;org.sleuthkit.datamodel.BlackboardArtifact&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactTypeID" type="int"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all blackboard artifacts of a given type. Does not included rejected
 artifacts.

 @param artifactTypeID artifact type id (must exist in database)

 @return list of blackboard artifacts.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getBlackboardArtifactsCount" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="objId" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get a count of blackboard artifacts for a given content. Does not include
 rejected artifacts.

 @param objId Id of the content.

 @return The artifacts count for the content.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getBlackboardArtifactsTypeCount" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactTypeID" type="int"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get a count of artifacts of a given type. Does not include rejected
 artifacts.

 @param artifactTypeID Id of the artifact type.

 @return The artifacts count for the type.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getBlackboardArtifactsTypeCount" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactTypeID" type="int"/>
      <param name="dataSourceID" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get a count of artifacts of a given type for the given data source. Does
 not include rejected artifacts.

 @param artifactTypeID Id of the artifact type.
 @param dataSourceID

 @return The artifacts count for the type.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getBlackboardArtifacts" return="java.util.List&lt;org.sleuthkit.datamodel.BlackboardArtifact&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="attrType" type="org.sleuthkit.datamodel.BlackboardAttribute.ATTRIBUTE_TYPE"/>
      <param name="value" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all blackboard artifacts that have an attribute of the given type and
 String value. Does not included rejected artifacts.

 @param attrType attribute of this attribute type to look for in the
                 artifacts
 @param value    value of the attribute of the attrType type to look for

 @return a list of blackboard artifacts with such an attribute

 @throws TskCoreException exception thrown if a critical error occurred
                          within tsk core and artifacts could not be
                          queried]]>
      </doc>
    </method>
    <method name="getBlackboardArtifacts" return="java.util.List&lt;org.sleuthkit.datamodel.BlackboardArtifact&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="attrType" type="org.sleuthkit.datamodel.BlackboardAttribute.ATTRIBUTE_TYPE"/>
      <param name="subString" type="java.lang.String"/>
      <param name="startsWith" type="boolean"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all blackboard artifacts that have an attribute of the given type and
 String value. Does not included rejected artifacts.

 @param attrType   attribute of this attribute type to look for in the
                   artifacts
 @param subString  value substring of the string attribute of the attrType
                   type to look for
 @param startsWith if true, the artifact attribute string should start
                   with the substring, if false, it should just contain it

 @return a list of blackboard artifacts with such an attribute

 @throws TskCoreException exception thrown if a critical error occurred
                          within tsk core and artifacts could not be
                          queried]]>
      </doc>
    </method>
    <method name="getBlackboardArtifacts" return="java.util.List&lt;org.sleuthkit.datamodel.BlackboardArtifact&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="attrType" type="org.sleuthkit.datamodel.BlackboardAttribute.ATTRIBUTE_TYPE"/>
      <param name="value" type="int"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all blackboard artifacts that have an attribute of the given type and
 integer value. Does not included rejected artifacts.

 @param attrType attribute of this attribute type to look for in the
                 artifacts
 @param value    value of the attribute of the attrType type to look for

 @return a list of blackboard artifacts with such an attribute

 @throws TskCoreException exception thrown if a critical error occurred
                          within tsk core and artifacts could not be
                          queried]]>
      </doc>
    </method>
    <method name="getBlackboardArtifacts" return="java.util.List&lt;org.sleuthkit.datamodel.BlackboardArtifact&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="attrType" type="org.sleuthkit.datamodel.BlackboardAttribute.ATTRIBUTE_TYPE"/>
      <param name="value" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all blackboard artifacts that have an attribute of the given type and
 long value. Does not included rejected artifacts.

 @param attrType attribute of this attribute type to look for in the
                 artifacts
 @param value    value of the attribute of the attrType type to look for

 @return a list of blackboard artifacts with such an attribute

 @throws TskCoreException exception thrown if a critical error occurred
                          within tsk core and artifacts could not be
                          queried]]>
      </doc>
    </method>
    <method name="getBlackboardArtifacts" return="java.util.List&lt;org.sleuthkit.datamodel.BlackboardArtifact&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="attrType" type="org.sleuthkit.datamodel.BlackboardAttribute.ATTRIBUTE_TYPE"/>
      <param name="value" type="double"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all blackboard artifacts that have an attribute of the given type and
 double value. Does not included rejected artifacts.

 @param attrType attribute of this attribute type to look for in the
                 artifacts
 @param value    value of the attribute of the attrType type to look for

 @return a list of blackboard artifacts with such an attribute

 @throws TskCoreException exception thrown if a critical error occurred
                          within tsk core and artifacts could not be
                          queried]]>
      </doc>
    </method>
    <method name="getBlackboardArtifacts" return="java.util.List&lt;org.sleuthkit.datamodel.BlackboardArtifact&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="attrType" type="org.sleuthkit.datamodel.BlackboardAttribute.ATTRIBUTE_TYPE"/>
      <param name="value" type="byte"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all blackboard artifacts that have an attribute of the given type and
 byte value. Does not include rejected artifacts.

 @param attrType attribute of this attribute type to look for in the
                 artifacts
 @param value    value of the attribute of the attrType type to look for

 @return a list of blackboard artifacts with such an attribute

 @throws TskCoreException exception thrown if a critical error occurred
                          within tsk core and artifacts could not be
                          queried]]>
      </doc>
    </method>
    <method name="getArtifactTypes" return="java.lang.Iterable&lt;org.sleuthkit.datamodel.BlackboardArtifact.Type&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets a list of all the artifact types for this case

 @return a list of artifact types

 @throws TskCoreException when there is an error getting the types]]>
      </doc>
    </method>
    <method name="getBlackboardArtifactTypesInUse" return="java.util.ArrayList&lt;org.sleuthkit.datamodel.BlackboardArtifact.ARTIFACT_TYPE&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all of the standard blackboard artifact types that are in use in the
 blackboard.

 @return List of standard blackboard artifact types

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getArtifactTypesInUse" return="java.util.List&lt;org.sleuthkit.datamodel.BlackboardArtifact.Type&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the list of all unique artifact IDs in use.

 Gets both static and dynamic IDs.

 @return The list of unique IDs

 @throws TskCoreException exception thrown if a critical error occurred
                          within tsk core]]>
      </doc>
    </method>
    <method name="getAttributeTypes" return="java.util.List&lt;org.sleuthkit.datamodel.BlackboardAttribute.Type&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets a list of all the attribute types for this case

 @return a list of attribute types

 @throws TskCoreException when there is an error getting the types]]>
      </doc>
    </method>
    <method name="getBlackboardAttributeTypesCount" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get count of blackboard attribute types

 Counts both static (in enum) and dynamic attributes types (created by
 modules at runtime)

 @return count of attribute types

 @throws TskCoreException exception thrown if a critical error occurs
                          within TSK core]]>
      </doc>
    </method>
    <method name="getBlackboardArtifacts" return="java.util.ArrayList&lt;org.sleuthkit.datamodel.BlackboardArtifact&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactTypeName" type="java.lang.String"/>
      <param name="obj_id" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all blackboard artifacts of a given type for the given object id.
 Does	not included rejected artifacts.

 @param artifactTypeName artifact type name
 @param obj_id           object id

 @return list of blackboard artifacts

 @throws TskCoreException exception thrown if a critical error occurs
                          within TSK core]]>
      </doc>
    </method>
    <method name="getBlackboardArtifacts" return="java.util.ArrayList&lt;org.sleuthkit.datamodel.BlackboardArtifact&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactTypeID" type="int"/>
      <param name="obj_id" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all blackboard artifacts of a given type for the given object id.
 Does not included rejected artifacts.

 @param artifactTypeID artifact type id (must exist in database)
 @param obj_id         object id

 @return list of blackboard artifacts

 @throws TskCoreException exception thrown if a critical error occurs
                          within TSK core]]>
      </doc>
    </method>
    <method name="getBlackboardArtifacts" return="java.util.ArrayList&lt;org.sleuthkit.datamodel.BlackboardArtifact&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactType" type="org.sleuthkit.datamodel.BlackboardArtifact.ARTIFACT_TYPE"/>
      <param name="obj_id" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all blackboard artifacts of a given type for the given object id.
 Does not included rejected artifacts.

 @param artifactType artifact type enum
 @param obj_id       object id

 @return list of blackboard artifacts

 @throws TskCoreException exception thrown if a critical error occurs
                          within TSK core]]>
      </doc>
    </method>
    <method name="getBlackboardArtifactsCount" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactTypeName" type="java.lang.String"/>
      <param name="obj_id" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get count of all blackboard artifacts of a given type for the given
 object id. Does not include rejected artifacts.

 @param artifactTypeName artifact type name
 @param obj_id           object id

 @return count of blackboard artifacts

 @throws TskCoreException exception thrown if a critical error occurs
                          within TSK core]]>
      </doc>
    </method>
    <method name="getBlackboardArtifactsCount" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactTypeID" type="int"/>
      <param name="obj_id" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get count of all blackboard artifacts of a given type for the given
 object id. Does not include rejected artifacts.

 @param artifactTypeID artifact type id (must exist in database)
 @param obj_id         object id

 @return count of blackboard artifacts

 @throws TskCoreException exception thrown if a critical error occurs
                          within TSK core]]>
      </doc>
    </method>
    <method name="getBlackboardArtifactsCount" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactType" type="org.sleuthkit.datamodel.BlackboardArtifact.ARTIFACT_TYPE"/>
      <param name="obj_id" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get count of all blackboard artifacts of a given type for the given
 object id. Does not include rejected artifacts.

 @param artifactType artifact type enum
 @param obj_id       object id

 @return count of blackboard artifacts

 @throws TskCoreException exception thrown if a critical error occurs
                          within TSK core]]>
      </doc>
    </method>
    <method name="getBlackboardArtifacts" return="java.util.ArrayList&lt;org.sleuthkit.datamodel.BlackboardArtifact&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactTypeName" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all blackboard artifacts of a given type. Does not included rejected
 artifacts.

 @param artifactTypeName artifact type name

 @return list of blackboard artifacts

 @throws TskCoreException exception thrown if a critical error occurs
                          within TSK core]]>
      </doc>
    </method>
    <method name="getBlackboardArtifacts" return="java.util.ArrayList&lt;org.sleuthkit.datamodel.BlackboardArtifact&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactType" type="org.sleuthkit.datamodel.BlackboardArtifact.ARTIFACT_TYPE"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all blackboard artifacts of a given type. Does not included rejected
 artifacts.

 @param artifactType artifact type enum

 @return list of blackboard artifacts

 @throws TskCoreException exception thrown if a critical error occurs
                          within TSK core]]>
      </doc>
    </method>
    <method name="getBlackboardArtifacts" return="java.util.List&lt;org.sleuthkit.datamodel.BlackboardArtifact&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactType" type="org.sleuthkit.datamodel.BlackboardArtifact.ARTIFACT_TYPE"/>
      <param name="attrType" type="org.sleuthkit.datamodel.BlackboardAttribute.ATTRIBUTE_TYPE"/>
      <param name="value" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all blackboard artifacts of a given type with an attribute of a given
 type and String value. Does not included rejected artifacts.

 @param artifactType artifact type enum
 @param attrType     attribute type enum
 @param value        String value of attribute

 @return list of blackboard artifacts

 @throws TskCoreException exception thrown if a critical error occurs
                          within TSK core]]>
      </doc>
    </method>
    <method name="getBlackboardArtifact" return="org.sleuthkit.datamodel.BlackboardArtifact"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactID" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get the blackboard artifact with the given artifact id (artifact_id in blackboard_artifacts)

 @param artifactID artifact ID (artifact_id column)

 @return blackboard artifact

 @throws TskCoreException exception thrown if a critical error occurs
                          within TSK core]]>
      </doc>
    </method>
    <method name="addBlackboardAttribute"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="attr" type="org.sleuthkit.datamodel.BlackboardAttribute"/>
      <param name="artifactTypeId" type="int"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Add a blackboard attribute.

 @param attr           A blackboard attribute.
 @param artifactTypeId The type of artifact associated with the attribute.

 @throws TskCoreException thrown if a critical error occurs.]]>
      </doc>
    </method>
    <method name="addBlackboardAttributes"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="attributes" type="java.util.Collection&lt;org.sleuthkit.datamodel.BlackboardAttribute&gt;"/>
      <param name="artifactTypeId" type="int"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Add a set blackboard attributes.

 @param attributes     A set of blackboard attribute.
 @param artifactTypeId The type of artifact associated with the
                       attributes.

 @throws TskCoreException thrown if a critical error occurs.]]>
      </doc>
    </method>
    <method name="addArtifactAttributeType" return="org.sleuthkit.datamodel.BlackboardAttribute.Type"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="attrTypeString" type="java.lang.String"/>
      <param name="valueType" type="org.sleuthkit.datamodel.BlackboardAttribute.TSK_BLACKBOARD_ATTRIBUTE_VALUE_TYPE"/>
      <param name="displayName" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <exception name="TskDataException" type="org.sleuthkit.datamodel.TskDataException"/>
      <doc>
      <![CDATA[Add an attribute type with the given name

 @param attrTypeString Name of the new attribute
 @param valueType      The value type of this new attribute type
 @param displayName    The (non-unique) display name of the attribute type

 @return the id of the new attribute

 @throws TskCoreException exception thrown if a critical error occurs
                          within tsk core
 @throws TskDataException exception thrown if attribute type was already
                          in the system]]>
      </doc>
    </method>
    <method name="getAttributeType" return="org.sleuthkit.datamodel.BlackboardAttribute.Type"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="attrTypeName" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get the attribute type associated with an attribute type name.

 @param attrTypeName An attribute type name.

 @return An attribute type or null if the attribute type does not exist.

 @throws TskCoreException If an error occurs accessing the case database.]]>
      </doc>
    </method>
    <method name="getArtifactType" return="org.sleuthkit.datamodel.BlackboardArtifact.Type"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artTypeName" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get the artifact type associated with an artifact type name.

 @param artTypeName An artifact type name.

 @return An artifact type or null if the artifact type does not exist.

 @throws TskCoreException If an error occurs accessing the case database.]]>
      </doc>
    </method>
    <method name="addBlackboardArtifactType" return="org.sleuthkit.datamodel.BlackboardArtifact.Type"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactTypeName" type="java.lang.String"/>
      <param name="displayName" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <exception name="TskDataException" type="org.sleuthkit.datamodel.TskDataException"/>
      <doc>
      <![CDATA[Add an artifact type with the given name. Will return an artifact Type.
 
 This assumes that the artifact type being added has the category DATA_ARTIFACT.

 @param artifactTypeName System (unique) name of artifact
 @param displayName      Display (non-unique) name of artifact

 @return Type of the artifact added

 @throws TskCoreException exception thrown if a critical error occurs
 @throws TskDataException exception thrown if given data is already in db
                          within tsk core]]>
      </doc>
    </method>
    <method name="getBlackboardAttributes" return="java.util.ArrayList&lt;org.sleuthkit.datamodel.BlackboardAttribute&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifact" type="org.sleuthkit.datamodel.BlackboardArtifact"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getMatchingAttributes" return="java.util.ArrayList&lt;org.sleuthkit.datamodel.BlackboardAttribute&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="whereClause" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all attributes that match a where clause. The clause should begin
 with "WHERE" or "JOIN". To use this method you must know the database
 tables

 @param whereClause a sqlite where clause

 @return a list of matching attributes

 @throws TskCoreException exception thrown if a critical error occurs
                          within tsk core \ref query_database_page]]>
      </doc>
    </method>
    <method name="getMatchingArtifacts" return="java.util.ArrayList&lt;org.sleuthkit.datamodel.BlackboardArtifact&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="whereClause" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get all artifacts that match a where clause. The clause should begin with
 "WHERE" or "JOIN". To use this method you must know the database tables

 @param whereClause a sqlite where clause

 @return a list of matching artifacts

 @throws TskCoreException exception thrown if a critical error occurs
                          within tsk core \ref query_database_page]]>
      </doc>
    </method>
    <method name="newBlackboardArtifact" return="org.sleuthkit.datamodel.BlackboardArtifact"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactTypeID" type="int"/>
      <param name="obj_id" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Add a new blackboard artifact with the given type. If that artifact type
 does not exist an error will be thrown. The artifact type name can be
 looked up in the returned blackboard artifact.

 @param artifactTypeID the type the given artifact should have
 @param obj_id         the content object id associated with this artifact

 @return a new blackboard artifact

 @throws TskCoreException exception thrown if a critical error occurs
                          within tsk core]]>
      </doc>
    </method>
    <method name="newBlackboardArtifact" return="org.sleuthkit.datamodel.BlackboardArtifact"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactType" type="org.sleuthkit.datamodel.BlackboardArtifact.ARTIFACT_TYPE"/>
      <param name="obj_id" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Add a new blackboard artifact with the given type.

 @param artifactType the type the given artifact should have
 @param obj_id       the content object id associated with this artifact

 @return a new blackboard artifact

 @throws TskCoreException exception thrown if a critical error occurs
                          within tsk core]]>
      </doc>
    </method>
    <method name="getContentById" return="org.sleuthkit.datamodel.Content"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get content object by content id

 @param id to get content object for

 @return instance of a Content object (one of its subclasses), or null if
         not found.

 @throws TskCoreException thrown if critical error occurred within tsk
                          core]]>
      </doc>
    </method>
    <method name="getAbstractFileById" return="org.sleuthkit.datamodel.AbstractFile"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get abstract file object from tsk_files table by its id

 @param id id of the file object in tsk_files table

 @return AbstractFile object populated, or null if not found.

 @throws TskCoreException thrown if critical error occurred within tsk
                          core and file could not be queried]]>
      </doc>
    </method>
    <method name="getArtifactById" return="org.sleuthkit.datamodel.BlackboardArtifact"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get artifact from blackboard_artifacts table by its artifact_obj_id

 @param id id of the artifact in blackboard_artifacts table (artifact_obj_id column)

 @return Artifact object populated, or null if not found.

 @throws TskCoreException thrown if critical error occurred within tsk
                          core and file could not be queried]]>
      </doc>
    </method>
    <method name="getArtifactByArtifactId" return="org.sleuthkit.datamodel.BlackboardArtifact"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get artifact from blackboard_artifacts table by its artifact_id

 @param id Artifact ID of the artifact in blackboard_artifacts table

 @return Artifact object populated, or null if not found.

 @throws TskCoreException thrown if critical error occurred within tsk
                          core and file could not be queried]]>
      </doc>
    </method>
    <method name="isFileFromSource" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="dataSource" type="org.sleuthkit.datamodel.Content"/>
      <param name="fileId" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Checks if the file is a (sub)child of the data source (parentless Content
 object such as Image or VirtualDirectory representing filesets)

 @param dataSource dataSource to check
 @param fileId     id of file to check

 @return true if the file is in the dataSource hierarchy

 @throws TskCoreException thrown if check failed]]>
      </doc>
    </method>
    <method name="findFiles" return="java.util.List&lt;org.sleuthkit.datamodel.AbstractFile&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="dataSource" type="org.sleuthkit.datamodel.Content"/>
      <param name="fileName" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[@param dataSource the dataSource (Image, parent-less VirtualDirectory) to
                   search for the given file name
 @param fileName   Pattern of the name of the file or directory to match
                   (case insensitive, used in LIKE SQL statement).

 @return a list of AbstractFile for files/directories whose name matches
         the given fileName

 @throws TskCoreException thrown if check failed]]>
      </doc>
    </method>
    <method name="findFiles" return="java.util.List&lt;org.sleuthkit.datamodel.AbstractFile&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="dataSource" type="org.sleuthkit.datamodel.Content"/>
      <param name="fileName" type="java.lang.String"/>
      <param name="dirSubString" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[@param dataSource   the dataSource (Image, parent-less VirtualDirectory)
                     to search for the given file name
 @param fileName     Pattern of the name of the file or directory to match
                     (case insensitive, used in LIKE SQL statement).
 @param dirSubString Substring that must exist in parent path. Will be
                     surrounded by % in LIKE query

 @return a list of AbstractFile for files/directories whose name matches
         fileName and whose parent directory contains dirName.

 @throws org.sleuthkit.datamodel.TskCoreException]]>
      </doc>
    </method>
    <method name="addVirtualDirectory" return="org.sleuthkit.datamodel.VirtualDirectory"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="parentId" type="long"/>
      <param name="directoryName" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Adds a virtual directory to the database and returns a VirtualDirectory
 object representing it.

 @param parentId      the ID of the parent, or 0 if NULL
 @param directoryName the name of the virtual directory to create

 @return

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="addVirtualDirectory" return="org.sleuthkit.datamodel.VirtualDirectory"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="parentId" type="long"/>
      <param name="directoryName" type="java.lang.String"/>
      <param name="transaction" type="org.sleuthkit.datamodel.SleuthkitCase.CaseDbTransaction"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Adds a virtual directory to the database and returns a VirtualDirectory
 object representing it.

 Make sure the connection in transaction is used for all database
 interactions called by this method

 @param parentId      the ID of the parent, or 0 if NULL
 @param directoryName the name of the virtual directory to create
 @param transaction   the transaction in the scope of which the operation
                      is to be performed, managed by the caller

 @return a VirtualDirectory object representing the one added to the
         database.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="addLocalDirectory" return="org.sleuthkit.datamodel.LocalDirectory"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="parentId" type="long"/>
      <param name="directoryName" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Adds a local directory to the database and returns a LocalDirectory
 object representing it.

 @param parentId      the ID of the parent, or 0 if NULL
 @param directoryName the name of the local directory to create

 @return a LocalDirectory object representing the one added to the
         database.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="addLocalDirectory" return="org.sleuthkit.datamodel.LocalDirectory"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="parentId" type="long"/>
      <param name="directoryName" type="java.lang.String"/>
      <param name="transaction" type="org.sleuthkit.datamodel.SleuthkitCase.CaseDbTransaction"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Adds a local directory to the database and returns a LocalDirectory
 object representing it.

 Make sure the connection in transaction is used for all database
 interactions called by this method

 @param parentId      the ID of the parent, or 0 if NULL
 @param directoryName the name of the local directory to create
 @param transaction   the transaction in the scope of which the operation
                      is to be performed, managed by the caller

 @return a LocalDirectory object representing the one added to the
         database.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="addLocalFilesDataSource" return="org.sleuthkit.datamodel.LocalFilesDataSource"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="deviceId" type="java.lang.String"/>
      <param name="rootDirectoryName" type="java.lang.String"/>
      <param name="timeZone" type="java.lang.String"/>
      <param name="transaction" type="org.sleuthkit.datamodel.SleuthkitCase.CaseDbTransaction"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Adds a local/logical files and/or directories data source.

 @param deviceId          An ASCII-printable identifier for the device
                          associated with the data source that is intended
                          to be unique across multiple cases (e.g., a
                          UUID).
 @param rootDirectoryName The name for the root virtual directory for the
                          data source.
 @param timeZone          The time zone used to process the data source,
                          may be the empty string.
 @param transaction       A transaction in the scope of which the
                          operation is to be performed, managed by the
                          caller.

 @return The new local files data source.

 @throws TskCoreException if there is an error adding the data source.]]>
      </doc>
    </method>
    <method name="addLocalFilesDataSource" return="org.sleuthkit.datamodel.LocalFilesDataSource"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="deviceId" type="java.lang.String"/>
      <param name="rootDirectoryName" type="java.lang.String"/>
      <param name="timeZone" type="java.lang.String"/>
      <param name="host" type="org.sleuthkit.datamodel.Host"/>
      <param name="transaction" type="org.sleuthkit.datamodel.SleuthkitCase.CaseDbTransaction"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Adds a local/logical files and/or directories data source.

 @param deviceId          An ASCII-printable identifier for the device
                          associated with the data source that is intended
                          to be unique across multiple cases (e.g., a
                          UUID).
 @param rootDirectoryName The name for the root virtual directory for the
                          data source.
 @param timeZone          The time zone used to process the data source,
                          may be the empty string.
 @param host              The host for the data source (may be null)
 @param transaction       A transaction in the scope of which the
                          operation is to be performed, managed by the
                          caller.

 @return The new local files data source.

 @throws TskCoreException if there is an error adding the data source.]]>
      </doc>
    </method>
    <method name="addImage" return="org.sleuthkit.datamodel.Image"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="type" type="org.sleuthkit.datamodel.TskData.TSK_IMG_TYPE_ENUM"/>
      <param name="sectorSize" type="long"/>
      <param name="size" type="long"/>
      <param name="displayName" type="java.lang.String"/>
      <param name="imagePaths" type="java.util.List&lt;java.lang.String&gt;"/>
      <param name="timezone" type="java.lang.String"/>
      <param name="md5" type="java.lang.String"/>
      <param name="sha1" type="java.lang.String"/>
      <param name="sha256" type="java.lang.String"/>
      <param name="deviceId" type="java.lang.String"/>
      <param name="transaction" type="org.sleuthkit.datamodel.SleuthkitCase.CaseDbTransaction"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Add an image to the database.

 @param type        Type of image
 @param sectorSize  Sector size
 @param size        Image size
 @param displayName Display name for the image
 @param imagePaths  Image path(s)
 @param timezone    Time zone
 @param md5         MD5 hash
 @param sha1        SHA1 hash
 @param sha256      SHA256 hash
 @param deviceId    Device ID
 @param transaction Case DB transaction

 @return the newly added Image

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="addImage" return="org.sleuthkit.datamodel.Image"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="type" type="org.sleuthkit.datamodel.TskData.TSK_IMG_TYPE_ENUM"/>
      <param name="sectorSize" type="long"/>
      <param name="size" type="long"/>
      <param name="displayName" type="java.lang.String"/>
      <param name="imagePaths" type="java.util.List&lt;java.lang.String&gt;"/>
      <param name="timezone" type="java.lang.String"/>
      <param name="md5" type="java.lang.String"/>
      <param name="sha1" type="java.lang.String"/>
      <param name="sha256" type="java.lang.String"/>
      <param name="deviceId" type="java.lang.String"/>
      <param name="host" type="org.sleuthkit.datamodel.Host"/>
      <param name="transaction" type="org.sleuthkit.datamodel.SleuthkitCase.CaseDbTransaction"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Add an image to the database.

 @param type        Type of image
 @param sectorSize  Sector size
 @param size        Image size
 @param displayName Display name for the image
 @param imagePaths  Image path(s)
 @param timezone    Time zone
 @param md5         MD5 hash
 @param sha1        SHA1 hash
 @param sha256      SHA256 hash
 @param deviceId    Device ID
 @param host        Host
 @param transaction Case DB transaction

 @return the newly added Image

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="addVolumeSystem" return="org.sleuthkit.datamodel.VolumeSystem"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="parentObjId" type="long"/>
      <param name="type" type="org.sleuthkit.datamodel.TskData.TSK_VS_TYPE_ENUM"/>
      <param name="imgOffset" type="long"/>
      <param name="blockSize" type="long"/>
      <param name="transaction" type="org.sleuthkit.datamodel.SleuthkitCase.CaseDbTransaction"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Add a volume system to the database.

 @param parentObjId Object ID of the volume system's parent
 @param type        Type of volume system
 @param imgOffset   Image offset
 @param blockSize   Block size
 @param transaction Case DB transaction

 @return the newly added VolumeSystem

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="addVolume" return="org.sleuthkit.datamodel.Volume"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="parentObjId" type="long"/>
      <param name="addr" type="long"/>
      <param name="start" type="long"/>
      <param name="length" type="long"/>
      <param name="desc" type="java.lang.String"/>
      <param name="flags" type="long"/>
      <param name="transaction" type="org.sleuthkit.datamodel.SleuthkitCase.CaseDbTransaction"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Add a volume to the database

 @param parentObjId Object ID of the volume's parent
 @param addr			     Address of the volume
 @param start       Start of the volume
 @param length      Length of the volume
 @param desc        Description of the volume
 @param flags       Flags
 @param transaction Case DB transaction

 @return the newly created Volume

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="addPool" return="org.sleuthkit.datamodel.Pool"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="parentObjId" type="long"/>
      <param name="type" type="org.sleuthkit.datamodel.TskData.TSK_POOL_TYPE_ENUM"/>
      <param name="transaction" type="org.sleuthkit.datamodel.SleuthkitCase.CaseDbTransaction"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Add a pool to the database.

 @param parentObjId Object ID of the pool's parent
 @param type        Type of pool
 @param transaction Case DB transaction

 @return the newly created Pool

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="addFileSystem" return="org.sleuthkit.datamodel.FileSystem"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="parentObjId" type="long"/>
      <param name="imgOffset" type="long"/>
      <param name="type" type="org.sleuthkit.datamodel.TskData.TSK_FS_TYPE_ENUM"/>
      <param name="blockSize" type="long"/>
      <param name="blockCount" type="long"/>
      <param name="rootInum" type="long"/>
      <param name="firstInum" type="long"/>
      <param name="lastInum" type="long"/>
      <param name="displayName" type="java.lang.String"/>
      <param name="transaction" type="org.sleuthkit.datamodel.SleuthkitCase.CaseDbTransaction"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Add a FileSystem to the database.

 @param parentObjId Object ID of the file system's parent
 @param imgOffset   Offset in the image
 @param type        Type of file system
 @param blockSize   Block size
 @param blockCount  Block count
 @param rootInum    root inum
 @param firstInum   first inum
 @param lastInum    last inum
 @param displayName display name
 @param transaction Case DB transaction

 @return the newly created FileSystem

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="addFileSystemFile" return="org.sleuthkit.datamodel.FsContent"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="dataSourceObjId" type="long"/>
      <param name="fsObjId" type="long"/>
      <param name="fileName" type="java.lang.String"/>
      <param name="metaAddr" type="long"/>
      <param name="metaSeq" type="int"/>
      <param name="attrType" type="org.sleuthkit.datamodel.TskData.TSK_FS_ATTR_TYPE_ENUM"/>
      <param name="attrId" type="int"/>
      <param name="dirFlag" type="org.sleuthkit.datamodel.TskData.TSK_FS_NAME_FLAG_ENUM"/>
      <param name="metaFlags" type="short"/>
      <param name="size" type="long"/>
      <param name="ctime" type="long"/>
      <param name="crtime" type="long"/>
      <param name="atime" type="long"/>
      <param name="mtime" type="long"/>
      <param name="isFile" type="boolean"/>
      <param name="parent" type="org.sleuthkit.datamodel.Content"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Add a file system file.

 @param dataSourceObjId	The object id of the root data source of this
                        file.
 @param fsObjId		       The file system object id.
 @param fileName		      The name of the file.
 @param metaAddr		      The meta address of the file.
 @param metaSeq		       The meta address sequence of the file.
 @param attrType		      The attributed type of the file.
 @param attrId		        The attribute id
 @param dirFlag		       The allocated status from the name structure
 @param metaFlags
 @param size			         The size of the file in bytes.
 @param ctime			        The changed time of the file.
 @param crtime		        The creation time of the file.
 @param atime			        The accessed time of the file
 @param mtime			        The modified time of the file.
 @param isFile		        True, unless the file is a directory.
 @param parent		        The parent of the file (e.g., a virtual directory)

 @return Newly created file

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="addFileSystemFile" return="org.sleuthkit.datamodel.FsContent"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="dataSourceObjId" type="long"/>
      <param name="fsObjId" type="long"/>
      <param name="fileName" type="java.lang.String"/>
      <param name="metaAddr" type="long"/>
      <param name="metaSeq" type="int"/>
      <param name="attrType" type="org.sleuthkit.datamodel.TskData.TSK_FS_ATTR_TYPE_ENUM"/>
      <param name="attrId" type="int"/>
      <param name="dirFlag" type="org.sleuthkit.datamodel.TskData.TSK_FS_NAME_FLAG_ENUM"/>
      <param name="metaFlags" type="short"/>
      <param name="size" type="long"/>
      <param name="ctime" type="long"/>
      <param name="crtime" type="long"/>
      <param name="atime" type="long"/>
      <param name="mtime" type="long"/>
      <param name="md5Hash" type="java.lang.String"/>
      <param name="sha256Hash" type="java.lang.String"/>
      <param name="mimeType" type="java.lang.String"/>
      <param name="isFile" type="boolean"/>
      <param name="parent" type="org.sleuthkit.datamodel.Content"/>
      <param name="ownerUid" type="java.lang.String"/>
      <param name="osAccount" type="org.sleuthkit.datamodel.OsAccount"/>
      <param name="fileAttributes" type="java.util.List&lt;org.sleuthkit.datamodel.Attribute&gt;"/>
      <param name="transaction" type="org.sleuthkit.datamodel.SleuthkitCase.CaseDbTransaction"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Add a file system file.

 @param dataSourceObjId The object id of the root data source of this
                        file.
 @param fsObjId         The file system object id.
 @param fileName        The name of the file.
 @param metaAddr        The meta address of the file.
 @param metaSeq         The meta address sequence of the file.
 @param attrType        The attributed type of the file.
 @param attrId          The attribute id.
 @param dirFlag         The allocated status from the name structure
 @param metaFlags       The allocated status of the file, usually as
                        reported in the metadata structure of the file
                        system.
 @param size            The size of the file in bytes.
 @param ctime           The changed time of the file.
 @param crtime          The creation time of the file.
 @param atime           The accessed time of the file
 @param mtime           The modified time of the file.
 @param md5Hash         The MD5 hash of the file
 @param sha256Hash      The SHA256 hash of the file
 @param mimeType        The MIME type of the file
 @param isFile          True, unless the file is a directory.
 @param parent          The parent of the file (e.g., a virtual
                        directory).
 @param ownerUid        UID of the file owner as found in the file system,
                        can be null.
 @param osAccount       OS account of owner, may be null.
 @param fileAttributes  A list of file attributes. May be empty.
 @param transaction     A caller-managed transaction within which the add
                        file operations are performed.

 @return Newly created file

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getVirtualDirectoryRoots" return="java.util.List&lt;org.sleuthkit.datamodel.VirtualDirectory&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get IDs of the virtual folder roots (at the same level as image), used
 for containers such as for local files.

 @return IDs of virtual directory root objects.

 @throws org.sleuthkit.datamodel.TskCoreException]]>
      </doc>
    </method>
    <method name="addLayoutFiles" return="java.util.List&lt;org.sleuthkit.datamodel.LayoutFile&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="public"
      deprecated="not deprecated">
      <param name="parent" type="org.sleuthkit.datamodel.Content"/>
      <param name="fileRanges" type="java.util.List&lt;org.sleuthkit.datamodel.TskFileRange&gt;"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Adds one or more layout files for a parent Content object to the case
 database.

 @param parent     The parent Content.
 @param fileRanges File range objects for the file(s).

 @return A list of LayoutFile objects.

 @throws TskCoreException If there is a problem completing a case database
                          operation.]]>
      </doc>
    </method>
    <method name="addCarvedFiles" return="java.util.List&lt;org.sleuthkit.datamodel.LayoutFile&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="public"
      deprecated="not deprecated">
      <param name="carvingResult" type="org.sleuthkit.datamodel.CarvingResult"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Adds a carving result to the case database.

 @param carvingResult The carving result (a set of carved files and their
                      parent) to be added.

 @return A list of LayoutFile representations of the carved files.

 @throws TskCoreException If there is a problem completing a case database
                          operation.]]>
      </doc>
    </method>
    <method name="addDerivedFile" return="org.sleuthkit.datamodel.DerivedFile"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="fileName" type="java.lang.String"/>
      <param name="localPath" type="java.lang.String"/>
      <param name="size" type="long"/>
      <param name="ctime" type="long"/>
      <param name="crtime" type="long"/>
      <param name="atime" type="long"/>
      <param name="mtime" type="long"/>
      <param name="isFile" type="boolean"/>
      <param name="parentObj" type="org.sleuthkit.datamodel.Content"/>
      <param name="rederiveDetails" type="java.lang.String"/>
      <param name="toolName" type="java.lang.String"/>
      <param name="toolVersion" type="java.lang.String"/>
      <param name="otherDetails" type="java.lang.String"/>
      <param name="encodingType" type="org.sleuthkit.datamodel.TskData.EncodingType"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Creates a new derived file object, adds it to database and returns it.

 TODO add support for adding derived method

 @param fileName        file name the derived file
 @param localPath       local path of the derived file, including the file
                        name. The path is relative to the database path.
 @param size            size of the derived file in bytes
 @param ctime           The changed time of the file.
 @param crtime          The creation time of the file.
 @param atime           The accessed time of the file
 @param mtime           The modified time of the file.
 @param isFile          whether a file or directory, true if a file
 @param parentObj		     parent content object
 @param rederiveDetails details needed to re-derive file (will be specific
                        to the derivation method), currently unused
 @param toolName        name of derivation method/tool, currently unused
 @param toolVersion     version of derivation method/tool, currently
                        unused
 @param otherDetails    details of derivation method/tool, currently
                        unused
 @param encodingType    Type of encoding used on the file (or NONE if no
                        encoding)

 @return newly created derived file object

 @throws TskCoreException exception thrown if the object creation failed
                          due to a critical system error]]>
      </doc>
    </method>
    <method name="updateDerivedFile" return="org.sleuthkit.datamodel.DerivedFile"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="derivedFile" type="org.sleuthkit.datamodel.DerivedFile"/>
      <param name="localPath" type="java.lang.String"/>
      <param name="size" type="long"/>
      <param name="ctime" type="long"/>
      <param name="crtime" type="long"/>
      <param name="atime" type="long"/>
      <param name="mtime" type="long"/>
      <param name="isFile" type="boolean"/>
      <param name="mimeType" type="java.lang.String"/>
      <param name="rederiveDetails" type="java.lang.String"/>
      <param name="toolName" type="java.lang.String"/>
      <param name="toolVersion" type="java.lang.String"/>
      <param name="otherDetails" type="java.lang.String"/>
      <param name="encodingType" type="org.sleuthkit.datamodel.TskData.EncodingType"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Updates an existing derived file in the database and returns a new
 derived file object with the updated contents

 @param derivedFile	    The derived file you wish to update
 @param localPath       local path of the derived file, including the file
                        name. The path is relative to the database path.
 @param size            size of the derived file in bytes
 @param ctime           The changed time of the file.
 @param crtime          The creation time of the file.
 @param atime           The accessed time of the file
 @param mtime           The modified time of the file.
 @param isFile          whether a file or directory, true if a file
 @param mimeType		      The MIME type the updated file should have, null
                        to unset it
 @param rederiveDetails details needed to re-derive file (will be specific
                        to the derivation method), currently unused
 @param toolName        name of derivation method/tool, currently unused
 @param toolVersion     version of derivation method/tool, currently
                        unused
 @param otherDetails    details of derivation method/tool, currently
                        unused
 @param encodingType    Type of encoding used on the file (or NONE if no
                        encoding)

 @return newly created derived file object which contains the updated data

 @throws TskCoreException exception thrown if the object creation failed
                          due to a critical system error]]>
      </doc>
    </method>
    <method name="addLocalFile" return="org.sleuthkit.datamodel.LocalFile"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="fileName" type="java.lang.String"/>
      <param name="localPath" type="java.lang.String"/>
      <param name="size" type="long"/>
      <param name="ctime" type="long"/>
      <param name="crtime" type="long"/>
      <param name="atime" type="long"/>
      <param name="mtime" type="long"/>
      <param name="isFile" type="boolean"/>
      <param name="encodingType" type="org.sleuthkit.datamodel.TskData.EncodingType"/>
      <param name="parent" type="org.sleuthkit.datamodel.AbstractFile"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Wraps the version of addLocalFile that takes a Transaction in a
 transaction local to this method.

 @param fileName
 @param localPath
 @param size
 @param ctime
 @param crtime
 @param atime
 @param mtime
 @param isFile
 @param encodingType
 @param parent

 @return

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="addLocalFile" return="org.sleuthkit.datamodel.LocalFile"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="fileName" type="java.lang.String"/>
      <param name="localPath" type="java.lang.String"/>
      <param name="size" type="long"/>
      <param name="ctime" type="long"/>
      <param name="crtime" type="long"/>
      <param name="atime" type="long"/>
      <param name="mtime" type="long"/>
      <param name="isFile" type="boolean"/>
      <param name="encodingType" type="org.sleuthkit.datamodel.TskData.EncodingType"/>
      <param name="parent" type="org.sleuthkit.datamodel.Content"/>
      <param name="transaction" type="org.sleuthkit.datamodel.SleuthkitCase.CaseDbTransaction"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Adds a local/logical file to the case database. The database operations
 are done within a caller-managed transaction; the caller is responsible
 for committing or rolling back the transaction.

 @param fileName     The name of the file.
 @param localPath    The absolute path (including the file name) of the
                     local/logical in secondary storage.
 @param size         The size of the file in bytes.
 @param ctime        The changed time of the file.
 @param crtime       The creation time of the file.
 @param atime        The accessed time of the file
 @param mtime        The modified time of the file.
 @param isFile       True, unless the file is a directory.
 @param encodingType Type of encoding used on the file
 @param parent       The parent of the file (e.g., a virtual directory)
 @param transaction  A caller-managed transaction within which the add
                     file operations are performed.

 @return An object representing the local/logical file.

 @throws TskCoreException if there is an error completing a case database
                          operation.]]>
      </doc>
    </method>
    <method name="addLocalFile" return="org.sleuthkit.datamodel.LocalFile"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="fileName" type="java.lang.String"/>
      <param name="localPath" type="java.lang.String"/>
      <param name="size" type="long"/>
      <param name="ctime" type="long"/>
      <param name="crtime" type="long"/>
      <param name="atime" type="long"/>
      <param name="mtime" type="long"/>
      <param name="md5" type="java.lang.String"/>
      <param name="sha256" type="java.lang.String"/>
      <param name="known" type="org.sleuthkit.datamodel.TskData.FileKnown"/>
      <param name="mimeType" type="java.lang.String"/>
      <param name="isFile" type="boolean"/>
      <param name="encodingType" type="org.sleuthkit.datamodel.TskData.EncodingType"/>
      <param name="parent" type="org.sleuthkit.datamodel.Content"/>
      <param name="transaction" type="org.sleuthkit.datamodel.SleuthkitCase.CaseDbTransaction"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Adds a local/logical file to the case database. The database operations
 are done within a caller-managed transaction; the caller is responsible
 for committing or rolling back the transaction.

 @param fileName     The name of the file.
 @param localPath    The absolute path (including the file name) of the
                     local/logical in secondary storage.
 @param size         The size of the file in bytes.
 @param ctime        The changed time of the file.
 @param crtime       The creation time of the file.
 @param atime        The accessed time of the file
 @param mtime        The modified time of the file.
 @param md5          The MD5 hash of the file
 @param sha256       the SHA-256 hash of the file.
 @param known        The known status of the file (can be null)
 @param mimeType     The MIME type of the file
 @param isFile       True, unless the file is a directory.
 @param encodingType Type of encoding used on the file
 @param parent       The parent of the file (e.g., a virtual directory)
 @param transaction  A caller-managed transaction within which the add
                     file operations are performed.

 @return An object representing the local/logical file.

 @throws TskCoreException if there is an error completing a case database
                          operation.]]>
      </doc>
    </method>
    <method name="addLayoutFile" return="org.sleuthkit.datamodel.LayoutFile"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="fileName" type="java.lang.String"/>
      <param name="size" type="long"/>
      <param name="dirFlag" type="org.sleuthkit.datamodel.TskData.TSK_FS_NAME_FLAG_ENUM"/>
      <param name="metaFlag" type="org.sleuthkit.datamodel.TskData.TSK_FS_META_FLAG_ENUM"/>
      <param name="ctime" type="long"/>
      <param name="crtime" type="long"/>
      <param name="atime" type="long"/>
      <param name="mtime" type="long"/>
      <param name="fileRanges" type="java.util.List&lt;org.sleuthkit.datamodel.TskFileRange&gt;"/>
      <param name="parent" type="org.sleuthkit.datamodel.Content"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Add a new layout file to the database.

 @param fileName   The name of the file.
 @param size       The size of the file in bytes.
 @param dirFlag    The allocated status from the name structure
 @param metaFlag   The allocated status from the metadata structure
 @param ctime      The changed time of the file.
 @param crtime     The creation time of the file.
 @param atime      The accessed time of the file
 @param mtime      The modified time of the file.
 @param fileRanges The byte ranges that belong to this file (relative to
                   start of image)
 @param parent     The parent of the file

 @return The new LayoutFile

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="findFiles" return="java.util.List&lt;org.sleuthkit.datamodel.AbstractFile&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="dataSource" type="org.sleuthkit.datamodel.Content"/>
      <param name="fileName" type="java.lang.String"/>
      <param name="parentFile" type="org.sleuthkit.datamodel.AbstractFile"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Find all files in the data source, by name and parent

 @param dataSource the dataSource (Image, parent-less VirtualDirectory) to
                   search for the given file name
 @param fileName   Pattern of the name of the file or directory to match
                   (case insensitive, used in LIKE SQL statement).
 @param parentFile Object for parent file/directory to find children in

 @return a list of AbstractFile for files/directories whose name matches
         fileName and that were inside a directory described by
         parentFile.

 @throws org.sleuthkit.datamodel.TskCoreException]]>
      </doc>
    </method>
    <method name="countFilesWhere" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="sqlWhereClause" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Count files matching the specific Where clause

 @param sqlWhereClause a SQL where clause appropriate for the desired
                       files (do not begin the WHERE clause with the word
                       WHERE!)

 @return count of files each of which satisfy the given WHERE clause

 @throws TskCoreException \ref query_database_page]]>
      </doc>
    </method>
    <method name="findAllFilesWhere" return="java.util.List&lt;org.sleuthkit.datamodel.AbstractFile&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="sqlWhereClause" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Find and return list of all (abstract) files matching the specific Where
 clause. You need to know the database schema to use this, which is
 outlined on the
 <a href="http://wiki.sleuthkit.org/index.php?title=SQLite_Database_v3_Schema">wiki</a>.
 You should use enums from org.sleuthkit.datamodel.TskData to make the
 queries easier to maintain and understand.

 @param sqlWhereClause a SQL where clause appropriate for the desired
                       files (do not begin the WHERE clause with the word
                       WHERE!)

 @return a list of AbstractFile each of which satisfy the given WHERE
         clause

 @throws TskCoreException \ref query_database_page]]>
      </doc>
    </method>
    <method name="findAllFilesInFolderWhere" return="java.util.List&lt;org.sleuthkit.datamodel.AbstractFile&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="parentId" type="long"/>
      <param name="sqlWhereClause" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Find and return list of all (abstract) files matching the specific Where
 clause with the give parentId. You need to know the database schema to 
 use this, which is outlined on the
 <a href="http://wiki.sleuthkit.org/index.php?title=SQLite_Database_v3_Schema">wiki</a>.
 You should use enums from org.sleuthkit.datamodel.TskData to make the
 queries easier to maintain and understand.
 
 @param parentId The parentId 
 @param sqlWhereClause a SQL where clause appropriate for the desired
                       files (do not begin the WHERE clause with the word
                       WHERE!)

 @return a list of AbstractFile each of which satisfy the given WHERE
         clause

 @throws TskCoreException \ref query_database_page]]>
      </doc>
    </method>
    <method name="findAllFileIdsWhere" return="java.util.List&lt;java.lang.Long&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="sqlWhereClause" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Find and return list of all (abstract) ids of files matching the specific
 Where clause

 @param sqlWhereClause a SQL where clause appropriate for the desired
                       files (do not begin the WHERE clause with the word
                       WHERE!)

 @return a list of file ids each of which satisfy the given WHERE clause

 @throws TskCoreException \ref query_database_page]]>
      </doc>
    </method>
    <method name="openFiles" return="java.util.List&lt;org.sleuthkit.datamodel.AbstractFile&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="dataSource" type="org.sleuthkit.datamodel.Content"/>
      <param name="filePath" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[@param dataSource the data source (Image, VirtualDirectory for file-sets,
                   etc) to search for the given file name
 @param filePath   The full path to the file(s) of interest. This can
                   optionally include the image and volume names. Treated
                   in a case- insensitive manner.

 @return a list of AbstractFile that have the given file path.

 @throws org.sleuthkit.datamodel.TskCoreException]]>
      </doc>
    </method>
    <method name="getFileRanges" return="java.util.List&lt;org.sleuthkit.datamodel.TskFileRange&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get file layout ranges from tsk_file_layout, for a file with specified id

 @param id of the file to get file layout ranges for

 @return list of populated file ranges

 @throws TskCoreException thrown if a critical error occurred within tsk
                          core]]>
      </doc>
    </method>
    <method name="getImageById" return="org.sleuthkit.datamodel.Image"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get am image by the image object id

 @param id of the image object

 @return Image object populated

 @throws TskCoreException thrown if a critical error occurred within tsk
                          core]]>
      </doc>
    </method>
    <method name="getImageFileSystems" return="java.util.Collection&lt;org.sleuthkit.datamodel.FileSystem&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="image" type="org.sleuthkit.datamodel.Image"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Helper to return FileSystems in an Image

 @param image Image to lookup FileSystem for

 @return Collection of FileSystems in the image

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="addImageInfo" return="org.sleuthkit.datamodel.Image"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="deviceObjId" type="long"/>
      <param name="imageFilePaths" type="java.util.List&lt;java.lang.String&gt;"/>
      <param name="timeZone" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Adds an image to the case database.

 @param deviceObjId    The object id of the device associated with the
                       image.
 @param imageFilePaths The image file paths.
 @param timeZone       The time zone for the image.

 @return An Image object.

 @throws TskCoreException if there is an error adding the image to case
                          database.]]>
      </doc>
    </method>
    <method name="addImageInfo" return="org.sleuthkit.datamodel.Image"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="deviceObjId" type="long"/>
      <param name="imageFilePaths" type="java.util.List&lt;java.lang.String&gt;"/>
      <param name="timeZone" type="java.lang.String"/>
      <param name="host" type="org.sleuthkit.datamodel.Host"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Adds an image to the case database.

 @param deviceObjId    The object id of the device associated with the
                       image.
 @param imageFilePaths The image file paths.
 @param timeZone       The time zone for the image.
 @param host           The host for this image.

 @return An Image object.

 @throws TskCoreException if there is an error adding the image to case
                          database.]]>
      </doc>
    </method>
    <method name="getImagePaths" return="java.util.Map&lt;java.lang.Long, java.util.List&lt;java.lang.String&gt;&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Returns a map of image object IDs to a list of fully qualified file paths
 for that image

 @return map of image object IDs to file paths

 @throws TskCoreException thrown if a critical error occurred within tsk
                          core]]>
      </doc>
    </method>
    <method name="getImages" return="java.util.List&lt;org.sleuthkit.datamodel.Image&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[@return a collection of Images associated with this instance of
         SleuthkitCase

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="setImagePaths"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="obj_id" type="long"/>
      <param name="paths" type="java.util.List&lt;java.lang.String&gt;"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Set the file paths for the image given by obj_id

 @param obj_id the ID of the image to update
 @param paths  the fully qualified path to the files that make up the
               image

 @throws TskCoreException exception thrown when critical error occurs
                          within tsk core and the update fails]]>
      </doc>
    </method>
    <method name="executeQuery" return="org.sleuthkit.datamodel.SleuthkitCase.CaseDbQuery"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="query" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[This method allows developers to run arbitrary SQL "SELECT" queries. The
 CaseDbQuery object will take care of acquiring the necessary database
 lock and when used in a try-with-resources block will automatically take
 care of releasing the lock. If you do not use a try-with-resources block
 you must call CaseDbQuery.close() once you are done processing the files
 of the query.

 Also note that if you use it within a transaction to insert something
 into the database, and then within that same transaction query the
 inserted item from the database, you will likely not see your inserted
 item, as the method uses new connections for each execution. With this
 method, you must close your transaction before successfully querying for
 newly-inserted items.

 @param query The query string to execute.

 @return A CaseDbQuery instance.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="executeInsertOrUpdate" return="org.sleuthkit.datamodel.SleuthkitCase.CaseDbQuery"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="query" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[This method allows developers to run arbitrary SQL queries, including
 INSERT and UPDATE. The CaseDbQuery object will take care of acquiring the
 necessary database lock and when used in a try-with-resources block will
 automatically take care of releasing the lock. If you do not use a
 try-with-resources block you must call CaseDbQuery.close() once you are
 done processing the files of the query.

 Also note that if you use it within a transaction to insert something
 into the database, and then within that same transaction query the
 inserted item from the database, you will likely not see your inserted
 item, as the method uses new connections for each execution. With this
 method, you must close your transaction before successfully querying for
 newly-inserted items.

 @param query The query string to execute.

 @return A CaseDbQuery instance.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="finalize"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <exception name="Throwable" type="java.lang.Throwable"/>
    </method>
    <method name="close"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Call to free resources when done with instance.]]>
      </doc>
    </method>
    <method name="setKnown" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="file" type="org.sleuthkit.datamodel.AbstractFile"/>
      <param name="fileKnown" type="org.sleuthkit.datamodel.TskData.FileKnown"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Store the known status for the FsContent in the database Note: will not
 update status if content is already 'Known Bad'

 @param	file      The AbstractFile object
 @param	fileKnown The object's known status

 @return	true if the known status was updated, false otherwise

 @throws TskCoreException thrown if a critical error occurred within tsk
                          core]]>
      </doc>
    </method>
    <method name="setFileMIMEType"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="file" type="org.sleuthkit.datamodel.AbstractFile"/>
      <param name="mimeType" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Stores the MIME type of a file in the case database and updates the MIME
 type of the given file object.

 @param file     A file.
 @param mimeType The MIME type.

 @throws TskCoreException If there is an error updating the case database.]]>
      </doc>
    </method>
    <method name="setFileUnalloc"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="file" type="org.sleuthkit.datamodel.AbstractFile"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Sets the unalloc meta flags for the file in the case database, and updates
 the meta flags in given file object. Also updates the dir flag to
 unalloc.

 @param file A file.


 @throws TskCoreException If there is an error updating the case database.]]>
      </doc>
    </method>
    <method name="setReviewStatus"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifact" type="org.sleuthkit.datamodel.BlackboardArtifact"/>
      <param name="newStatus" type="org.sleuthkit.datamodel.BlackboardArtifact.ReviewStatus"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Set the review status of the given artifact to newStatus

 @param artifact  The artifact whose review status is being set.
 @param newStatus The new review status for the given artifact. Must not
                  be null.

 @throws TskCoreException thrown if a critical error occurred within tsk
                          core]]>
      </doc>
    </method>
    <method name="countFsContentType" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="contentType" type="org.sleuthkit.datamodel.TskData.TSK_FS_META_TYPE_ENUM"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Return the number of objects in the database of a given file type.

 @param contentType Type of file to count

 @return Number of objects with that type.

 @throws TskCoreException thrown if a critical error occurred within tsk
                          core]]>
      </doc>
    </method>
    <method name="escapeSingleQuotes" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="text" type="java.lang.String"/>
      <doc>
      <![CDATA[Escape the single quotes in the given string so they can be added to the
 SQL caseDbConnection

 @param text

 @return text the escaped version]]>
      </doc>
    </method>
    <method name="findFilesByMd5" return="java.util.List&lt;org.sleuthkit.datamodel.AbstractFile&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="md5Hash" type="java.lang.String"/>
      <doc>
      <![CDATA[Find all the files with the given MD5 hash.

 @param md5Hash hash value to match files with

 @return List of AbstractFile with the given hash]]>
      </doc>
    </method>
    <method name="allFilesMd5Hashed" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Query all the files to verify if they have an MD5 hash associated with
 them.

 @return true if all files have an MD5 hash]]>
      </doc>
    </method>
    <method name="countFilesMd5Hashed" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Query all the files and counts how many have an MD5 hash.

 @return the number of files with an MD5 hash]]>
      </doc>
    </method>
    <method name="getAllTagNames" return="java.util.List&lt;org.sleuthkit.datamodel.TagName&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Selects all of the rows from the tag_names table in the case database.

 @return A list, possibly empty, of TagName data transfer objects (DTOs)
         for the rows.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getTagNamesInUse" return="java.util.List&lt;org.sleuthkit.datamodel.TagName&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Selects all of the rows from the tag_names table in the case database for
 which there is at least one matching row in the content_tags or
 blackboard_artifact_tags tables.

 @return A list, possibly empty, of TagName data transfer objects (DTOs)
         for the rows.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getTagNamesInUse" return="java.util.List&lt;org.sleuthkit.datamodel.TagName&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="dsObjId" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Selects all of the rows from the tag_names table in the case database for
 which there is at least one matching row in the content_tags or
 blackboard_artifact_tags tables, for the given data source object id.

 @param dsObjId data source object id

 @return A list, possibly empty, of TagName data transfer objects (DTOs)
         for the rows.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="addTagName" return="org.sleuthkit.datamodel.TagName"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="addOrUpdateTagName should be used this method calls
 addOrUpdateTagName with a default knownStatus value">
      <param name="displayName" type="java.lang.String"/>
      <param name="description" type="java.lang.String"/>
      <param name="color" type="org.sleuthkit.datamodel.TagName.HTML_COLOR"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Inserts row into the tags_names table in the case database.

 @param displayName The display name for the new tag name.
 @param description The description for the new tag name.
 @param color       The HTML color to associate with the new tag name.

 @return A TagName data transfer object (DTO) for the new row.

 @throws TskCoreException
 @deprecated addOrUpdateTagName should be used this method calls
 addOrUpdateTagName with a default knownStatus value]]>
      </doc>
    </method>
    <method name="addOrUpdateTagName" return="org.sleuthkit.datamodel.TagName"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="displayName" type="java.lang.String"/>
      <param name="description" type="java.lang.String"/>
      <param name="color" type="org.sleuthkit.datamodel.TagName.HTML_COLOR"/>
      <param name="knownStatus" type="org.sleuthkit.datamodel.TskData.FileKnown"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Inserts row into the tags_names table, or updates the existing row if the
 displayName already exists in the tag_names table in the case database.

 @param displayName The display name for the new tag name.
 @param description The description for the new tag name.
 @param color       The HTML color to associate with the new tag name.
 @param knownStatus The TskData.FileKnown value to associate with the new
                    tag name.

 @return A TagName data transfer object (DTO) for the new row.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="addContentTag" return="org.sleuthkit.datamodel.ContentTag"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="Use TaggingManager.addContentTag">
      <param name="content" type="org.sleuthkit.datamodel.Content"/>
      <param name="tagName" type="org.sleuthkit.datamodel.TagName"/>
      <param name="comment" type="java.lang.String"/>
      <param name="beginByteOffset" type="long"/>
      <param name="endByteOffset" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Inserts a row into the content_tags table in the case database.

 @param content         The content to tag.
 @param tagName         The name to use for the tag.
 @param comment         A comment to store with the tag.
 @param beginByteOffset Designates the beginning of a tagged section.
 @param endByteOffset   Designates the end of a tagged section.

 @return A ContentTag data transfer object (DTO) for the new row.

 @throws TskCoreException
 @deprecated Use TaggingManager.addContentTag]]>
      </doc>
    </method>
    <method name="deleteContentTag"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="tag" type="org.sleuthkit.datamodel.ContentTag"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getAllContentTags" return="java.util.List&lt;org.sleuthkit.datamodel.ContentTag&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Selects all of the rows from the content_tags table in the case database.

 @return A list, possibly empty, of ContentTag data transfer objects
         (DTOs) for the rows.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getContentTagsCountByTagName" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="tagName" type="org.sleuthkit.datamodel.TagName"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets a count of the rows in the content_tags table in the case database
 with a specified foreign key into the tag_names table.

 @param tagName A data transfer object (DTO) for the tag name to match.

 @return The count, possibly zero.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getContentTagsCountByTagName" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="tagName" type="org.sleuthkit.datamodel.TagName"/>
      <param name="dsObjId" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets content tags count by tag name, for the given data source

 @param tagName The representation of the desired tag type in the case
                database, which can be obtained by calling getTagNames
                and/or addTagName.

 @param dsObjId data source object id

 @return A count of the content tags with the specified tag name, and for
         the given data source

 @throws TskCoreException If there is an error getting the tags count from
                          the case database.]]>
      </doc>
    </method>
    <method name="getContentTagByID" return="org.sleuthkit.datamodel.ContentTag"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="contentTagID" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Selects the rows in the content_tags table in the case database with a
 specified tag id.

 @param contentTagID the tag id of the ContentTag to retrieve.

 @return The content tag.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getContentTagsByTagName" return="java.util.List&lt;org.sleuthkit.datamodel.ContentTag&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="tagName" type="org.sleuthkit.datamodel.TagName"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Selects the rows in the content_tags table in the case database with a
 specified foreign key into the tag_names table.

 @param tagName A data transfer object (DTO) for the tag name to match.

 @return A list, possibly empty, of ContentTag data transfer objects
         (DTOs) for the rows.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getContentTagsByTagName" return="java.util.List&lt;org.sleuthkit.datamodel.ContentTag&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="tagName" type="org.sleuthkit.datamodel.TagName"/>
      <param name="dsObjId" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets content tags by tag name, for the given data source.

 @param tagName The tag name of interest.
 @param dsObjId data source object id

 @return A list, possibly empty, of the content tags with the specified
         tag name, and for the given data source.

 @throws TskCoreException If there is an error getting the tags from the
                          case database.]]>
      </doc>
    </method>
    <method name="getContentTagsByContent" return="java.util.List&lt;org.sleuthkit.datamodel.ContentTag&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="content" type="org.sleuthkit.datamodel.Content"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Selects the rows in the content_tags table in the case database with a
 specified foreign key into the tsk_objects table.

 @param content A data transfer object (DTO) for the content to match.

 @return A list, possibly empty, of ContentTag data transfer objects
         (DTOs) for the rows.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="addBlackboardArtifactTag" return="org.sleuthkit.datamodel.BlackboardArtifactTag"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="User TaggingManager.addArtifactTag instead.">
      <param name="artifact" type="org.sleuthkit.datamodel.BlackboardArtifact"/>
      <param name="tagName" type="org.sleuthkit.datamodel.TagName"/>
      <param name="comment" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Inserts a row into the blackboard_artifact_tags table in the case
 database.

 @param artifact The blackboard artifact to tag.
 @param tagName  The name to use for the tag.
 @param comment  A comment to store with the tag.

 @return A BlackboardArtifactTag data transfer object (DTO) for the new
         row.

 @throws TskCoreException
 @deprecated User TaggingManager.addArtifactTag instead.]]>
      </doc>
    </method>
    <method name="deleteBlackboardArtifactTag"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="tag" type="org.sleuthkit.datamodel.BlackboardArtifactTag"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getAllBlackboardArtifactTags" return="java.util.List&lt;org.sleuthkit.datamodel.BlackboardArtifactTag&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Selects all of the rows from the blackboard_artifacts_tags table in the
 case database.

 @return A list, possibly empty, of BlackboardArtifactTag data transfer
         objects (DTOs) for the rows.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getBlackboardArtifactTagsCountByTagName" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="tagName" type="org.sleuthkit.datamodel.TagName"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets a count of the rows in the blackboard_artifact_tags table in the
 case database with a specified foreign key into the tag_names table.

 @param tagName A data transfer object (DTO) for the tag name to match.

 @return The count, possibly zero.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getBlackboardArtifactTagsCountByTagName" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="tagName" type="org.sleuthkit.datamodel.TagName"/>
      <param name="dsObjId" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets an artifact tags count by tag name, for the given data source.

 @param tagName The representation of the desired tag type in the case
                database, which can be obtained by calling getTagNames
                and/or addTagName.
 @param dsObjId data source object id

 @return A count of the artifact tags with the specified tag name, for the
         given data source.

 @throws TskCoreException If there is an error getting the tags count from
                          the case database.]]>
      </doc>
    </method>
    <method name="getBlackboardArtifactTagsByTagName" return="java.util.List&lt;org.sleuthkit.datamodel.BlackboardArtifactTag&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="tagName" type="org.sleuthkit.datamodel.TagName"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Selects the rows in the blackboard_artifacts_tags table in the case
 database with a specified foreign key into the tag_names table.

 @param tagName A data transfer object (DTO) for the tag name to match.

 @return A list, possibly empty, of BlackboardArtifactTag data transfer
         objects (DTOs) for the rows.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getBlackboardArtifactTagsByTagName" return="java.util.List&lt;org.sleuthkit.datamodel.BlackboardArtifactTag&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="tagName" type="org.sleuthkit.datamodel.TagName"/>
      <param name="dsObjId" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets artifact tags by tag name, for specified data source.

 @param tagName The representation of the desired tag type in the case
                database, which can be obtained by calling getTagNames
                and/or addTagName.
 @param dsObjId data source object id

 @return A list, possibly empty, of the artifact tags with the specified
         tag name, for the specified data source.

 @throws TskCoreException If there is an error getting the tags from the
                          case database.]]>
      </doc>
    </method>
    <method name="getBlackboardArtifactTagByID" return="org.sleuthkit.datamodel.BlackboardArtifactTag"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifactTagID" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Selects the row in the blackboard artifact tags table in the case
 database with a specified tag id.

 @param artifactTagID the tag id of the BlackboardArtifactTag to retrieve.

 @return the BlackBoardArtifact Tag with the given tag id, or null if no
         such tag could be found

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getBlackboardArtifactTagsByArtifact" return="java.util.List&lt;org.sleuthkit.datamodel.BlackboardArtifactTag&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifact" type="org.sleuthkit.datamodel.BlackboardArtifact"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Selects the rows in the blackboard_artifacts_tags table in the case
 database with a specified foreign key into the blackboard_artifacts
 table.

 @param artifact A data transfer object (DTO) for the artifact to match.

 @return A list, possibly empty, of BlackboardArtifactTag data transfer
         objects (DTOs) for the rows.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="updateImagePath"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="newPath" type="java.lang.String"/>
      <param name="objectId" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Change the path for an image in the database.

 @param newPath  New path to the image
 @param objectId Data source ID of the image

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="addReport" return="org.sleuthkit.datamodel.Report"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="localPath" type="java.lang.String"/>
      <param name="sourceModuleName" type="java.lang.String"/>
      <param name="reportName" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Inserts a row into the reports table in the case database.

 @param localPath        The path of the report file, must be in the
                         database directory (case directory in Autopsy) or
                         one of its subdirectories.
 @param sourceModuleName The name of the module that created the report.
 @param reportName       The report name.

 @return A Report object for the new row.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="addReport" return="org.sleuthkit.datamodel.Report"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="localPath" type="java.lang.String"/>
      <param name="sourceModuleName" type="java.lang.String"/>
      <param name="reportName" type="java.lang.String"/>
      <param name="parent" type="org.sleuthkit.datamodel.Content"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Inserts a row into the reports table in the case database.

 @param localPath        The path of the report file, must be in the
                         database directory (case directory in Autopsy) or
                         one of its subdirectories.
 @param sourceModuleName The name of the module that created the report.
 @param reportName       The report name.
 @param parent           The Content from which the report was created, if
                         available.

 @return A Report object for the new row.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getAllReports" return="java.util.List&lt;org.sleuthkit.datamodel.Report&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Selects all of the rows from the reports table in the case database.

 @return A list, possibly empty, of Report data transfer objects (DTOs)
         for the rows.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getReportById" return="org.sleuthkit.datamodel.Report"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="id" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get a Report object for the given id.

 @param id

 @return A new Report object for the given id.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="deleteReport"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="report" type="org.sleuthkit.datamodel.Report"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Deletes a row from the reports table in the case database.

 @param report A Report data transfer object (DTO) for the row to delete.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="addIngestJob" return="org.sleuthkit.datamodel.IngestJobInfo"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="public"
      deprecated="not deprecated">
      <param name="dataSource" type="org.sleuthkit.datamodel.Content"/>
      <param name="hostName" type="java.lang.String"/>
      <param name="ingestModules" type="java.util.List&lt;org.sleuthkit.datamodel.IngestModuleInfo&gt;"/>
      <param name="jobStart" type="java.util.Date"/>
      <param name="jobEnd" type="java.util.Date"/>
      <param name="status" type="org.sleuthkit.datamodel.IngestJobInfo.IngestJobStatusType"/>
      <param name="settingsDir" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[@param dataSource    The datasource the ingest job is being run on
 @param hostName      The name of the host
 @param ingestModules The ingest modules being run during the ingest job.
                      Should be in pipeline order.
 @param jobStart      The time the job started
 @param jobEnd        The time the job ended
 @param status        The ingest job status
 @param settingsDir   The directory of the job's settings

 @return An information object representing the ingest job added to the
         database.

 @throws TskCoreException If adding the job to the database fails.]]>
      </doc>
    </method>
    <method name="addIngestModule" return="org.sleuthkit.datamodel.IngestModuleInfo"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="public"
      deprecated="not deprecated">
      <param name="displayName" type="java.lang.String"/>
      <param name="factoryClassName" type="java.lang.String"/>
      <param name="type" type="org.sleuthkit.datamodel.IngestModuleInfo.IngestModuleType"/>
      <param name="version" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Adds the given ingest module to the database.

 @param displayName      The display name of the module
 @param factoryClassName The factory class name of the module.
 @param type             The type of the module.
 @param version          The version of the module.

 @return An ingest module info object representing the module added to the
         db.

 @throws TskCoreException When the ingest module cannot be added.]]>
      </doc>
    </method>
    <method name="getIngestJobs" return="java.util.List&lt;org.sleuthkit.datamodel.IngestJobInfo&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets all of the ingest jobs that have been run.

 @return The information about the ingest jobs that have been run

 @throws TskCoreException If there is a problem getting the ingest jobs]]>
      </doc>
    </method>
    <method name="addErrorObserver"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="Catch exceptions instead.">
      <param name="observer" type="org.sleuthkit.datamodel.SleuthkitCase.ErrorObserver"/>
      <doc>
      <![CDATA[Add an observer for SleuthkitCase errors.

 @param observer The observer to add.

 @deprecated Catch exceptions instead.]]>
      </doc>
    </method>
    <method name="removeErrorObserver"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="Catch exceptions instead.">
      <param name="observer" type="org.sleuthkit.datamodel.SleuthkitCase.ErrorObserver"/>
      <doc>
      <![CDATA[Remove an observer for SleuthkitCase errors.

 @param observer The observer to remove.

 @deprecated Catch exceptions instead.]]>
      </doc>
    </method>
    <method name="submitError"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="Catch exceptions instead.">
      <param name="context" type="java.lang.String"/>
      <param name="errorMessage" type="java.lang.String"/>
      <doc>
      <![CDATA[Submit an error to all clients that are listening.

 @param context      The context in which the error occurred.
 @param errorMessage A description of the error that occurred.

 @deprecated Catch exceptions instead.]]>
      </doc>
    </method>
    <method name="getLastObjectId" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="Do not use, assumes a single-threaded, single-user case.">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get last (max) object id of content object in tsk_objects.

 @return currently max id

 @throws TskCoreException exception thrown when database error occurs and
                          last object id could not be queried
 @deprecated Do not use, assumes a single-threaded, single-user case.]]>
      </doc>
    </method>
    <method name="findFilesWhere" return="java.util.List&lt;org.sleuthkit.datamodel.FsContent&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="use SleuthkitCase.findAllFilesWhere() instead">
      <param name="sqlWhereClause" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Find and return list of files matching the specific Where clause. Use
 findAllFilesWhere instead. It returns a more generic data type

 @param sqlWhereClause a SQL where clause appropriate for the desired
                       files (do not begin the WHERE clause with the word
                       WHERE!)

 @return a list of FsContent each of which satisfy the given WHERE clause

 @throws TskCoreException
 @deprecated	use SleuthkitCase.findAllFilesWhere() instead]]>
      </doc>
    </method>
    <method name="getArtifactTypeID" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="Use getArtifactType instead">
      <param name="artifactTypeName" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get the artifact type id associated with an artifact type name.

 @param artifactTypeName An artifact type name.

 @return An artifact id or -1 if the attribute type does not exist.

 @throws TskCoreException If an error occurs accessing the case database.

 @deprecated Use getArtifactType instead]]>
      </doc>
    </method>
    <method name="getBlackboardArtifactTypes" return="java.util.ArrayList&lt;org.sleuthkit.datamodel.BlackboardArtifact.ARTIFACT_TYPE&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="For a list of standard blackboard artifacts type enum
 objects, use BlackboardArtifact.ARTIFACT_TYPE.values.">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets a list of the standard blackboard artifact type enum objects.

 @return The members of the BlackboardArtifact.ARTIFACT_TYPE enum.

 @throws TskCoreException Specified, but not thrown.
 @deprecated For a list of standard blackboard artifacts type enum
 objects, use BlackboardArtifact.ARTIFACT_TYPE.values.]]>
      </doc>
    </method>
    <method name="addArtifactType" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="Use SleuthkitCase.addBlackboardArtifactType instead.">
      <param name="artifactTypeName" type="java.lang.String"/>
      <param name="displayName" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Adds a custom artifact type. The artifact type name must be unique, but
 the display name need not be unique.

 @param artifactTypeName The artifact type name.
 @param displayName      The artifact type display name.

 @return The artifact type id assigned to the artifact type.

 @throws TskCoreException If there is an error adding the type to the case
                          database.
 @deprecated Use SleuthkitCase.addBlackboardArtifactType instead.]]>
      </doc>
    </method>
    <method name="addAttrType" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="Use SleuthkitCase.addArtifactAttributeType instead.">
      <param name="attrTypeString" type="java.lang.String"/>
      <param name="displayName" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Adds a custom attribute type with a string value type. The attribute type
 name must be unique, but the display name need not be unique.

 @param attrTypeString The attribute type name.
 @param displayName    The attribute type display name.

 @return The attribute type id.

 @throws TskCoreException If there is an error adding the type to the case
                          database.
 @deprecated Use SleuthkitCase.addArtifactAttributeType instead.]]>
      </doc>
    </method>
    <method name="getAttrTypeID" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="Use SleuthkitCase.getAttributeType instead.">
      <param name="attrTypeName" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the attribute type id associated with an attribute type name.

 @param attrTypeName An attribute type name.

 @return An attribute id or -1 if the attribute type does not exist.

 @throws TskCoreException If an error occurs accessing the case database.
 @deprecated Use SleuthkitCase.getAttributeType instead.]]>
      </doc>
    </method>
    <method name="getAttrTypeString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="Use getAttributeType instead">
      <param name="attrTypeID" type="int"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get the string associated with the given id. Will throw an error if that
 id does not exist

 @param attrTypeID attribute id

 @return string associated with the given id

 @throws TskCoreException exception thrown if a critical error occurs
                          within tsk core
 @deprecated Use getAttributeType instead]]>
      </doc>
    </method>
    <method name="getAttrTypeDisplayName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="Use getAttributeType instead">
      <param name="attrTypeID" type="int"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get the display name for the attribute with the given id. Will throw an
 error if that id does not exist

 @param attrTypeID attribute id

 @return string associated with the given id

 @throws TskCoreException exception thrown if a critical error occurs
                          within tsk core
 @deprecated Use getAttributeType instead]]>
      </doc>
    </method>
    <method name="getBlackboardAttributeTypes" return="java.util.ArrayList&lt;org.sleuthkit.datamodel.BlackboardAttribute.ATTRIBUTE_TYPE&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="For a list of standard blackboard attribute types enum
 objects, use BlackboardAttribute.ATTRIBUTE_TYP.values.">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets a list of the standard blackboard attribute type enum objects.

 @return The members of the BlackboardAttribute.ATTRIBUTE_TYPE enum.

 @throws TskCoreException Specified, but not thrown.
 @deprecated For a list of standard blackboard attribute types enum
 objects, use BlackboardAttribute.ATTRIBUTE_TYP.values.]]>
      </doc>
    </method>
    <method name="runQuery" return="java.sql.ResultSet"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="Do not use runQuery(), use executeQuery() instead. \ref
 query_database_page">
      <param name="query" type="java.lang.String"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
      <doc>
      <![CDATA[Process a read-only query on the tsk database, any table Can be used to
 e.g. to find files of a given criteria. resultSetToFsContents() will
 convert the files to useful objects. MUST CALL closeRunQuery() when done

 @param query the given string query to run

 @return	the resultSet from running the query. Caller MUST CALL
         closeRunQuery(resultSet) as soon as possible, when done with
         retrieving data from the resultSet

 @throws SQLException if error occurred during the query
 @deprecated Do not use runQuery(), use executeQuery() instead. \ref
 query_database_page]]>
      </doc>
    </method>
    <method name="closeRunQuery"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="Do not use runQuery() and closeRunQuery(), use executeQuery()
 instead. \ref query_database_page">
      <param name="resultSet" type="java.sql.ResultSet"/>
      <exception name="SQLException" type="java.sql.SQLException"/>
      <doc>
      <![CDATA[Closes ResultSet and its Statement previously retrieved from runQuery()

 @param resultSet with its Statement to close

 @throws SQLException of closing the query files failed
 @deprecated Do not use runQuery() and closeRunQuery(), use executeQuery()
 instead. \ref query_database_page]]>
      </doc>
    </method>
    <method name="addCarvedFile" return="org.sleuthkit.datamodel.LayoutFile"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="Use addCarvedFile(CarvingResult) instead">
      <param name="carvedFileName" type="java.lang.String"/>
      <param name="carvedFileSize" type="long"/>
      <param name="containerId" type="long"/>
      <param name="data" type="java.util.List&lt;org.sleuthkit.datamodel.TskFileRange&gt;"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Adds a carved file to the VirtualDirectory '$CarvedFiles' in the volume
 or image given by systemId. Creates $CarvedFiles virtual directory if it
 does not exist already.

 @param carvedFileName the name of the carved file to add
 @param carvedFileSize the size of the carved file to add
 @param containerId    the ID of the parent volume, file system, or image
 @param data           the layout information - a list of offsets that
                       make up this carved file.

 @return A LayoutFile object representing the carved file.

 @throws org.sleuthkit.datamodel.TskCoreException
 @deprecated Use addCarvedFile(CarvingResult) instead]]>
      </doc>
    </method>
    <method name="addCarvedFiles" return="java.util.List&lt;org.sleuthkit.datamodel.LayoutFile&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="Use addCarvedFile(CarvingResult) instead">
      <param name="filesToAdd" type="java.util.List&lt;org.sleuthkit.datamodel.CarvedFileContainer&gt;"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Adds a collection of carved files to the VirtualDirectory '$CarvedFiles'
 in the volume or image given by systemId. Creates $CarvedFiles virtual
 directory if it does not exist already.

 @param filesToAdd A list of CarvedFileContainer files to add as carved
                   files.

 @return A list of the files added to the database.

 @throws org.sleuthkit.datamodel.TskCoreException
 @deprecated Use addCarvedFile(CarvingResult) instead]]>
      </doc>
    </method>
    <method name="addDerivedFile" return="org.sleuthkit.datamodel.DerivedFile"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="Use the newer version with explicit encoding type parameter">
      <param name="fileName" type="java.lang.String"/>
      <param name="localPath" type="java.lang.String"/>
      <param name="size" type="long"/>
      <param name="ctime" type="long"/>
      <param name="crtime" type="long"/>
      <param name="atime" type="long"/>
      <param name="mtime" type="long"/>
      <param name="isFile" type="boolean"/>
      <param name="parentFile" type="org.sleuthkit.datamodel.AbstractFile"/>
      <param name="rederiveDetails" type="java.lang.String"/>
      <param name="toolName" type="java.lang.String"/>
      <param name="toolVersion" type="java.lang.String"/>
      <param name="otherDetails" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Creates a new derived file object, adds it to database and returns it.

 TODO add support for adding derived method

 @param fileName        file name the derived file
 @param localPath       local path of the derived file, including the file
                        name. The path is relative to the database path.
 @param size            size of the derived file in bytes
 @param ctime           The changed time of the file.
 @param crtime          The creation time of the file.
 @param atime           The accessed time of the file
 @param mtime           The modified time of the file.
 @param isFile          whether a file or directory, true if a file
 @param parentFile      parent file object (derived or local file)
 @param rederiveDetails details needed to re-derive file (will be specific
                        to the derivation method), currently unused
 @param toolName        name of derivation method/tool, currently unused
 @param toolVersion     version of derivation method/tool, currently
                        unused
 @param otherDetails    details of derivation method/tool, currently
                        unused

 @return newly created derived file object

 @throws TskCoreException exception thrown if the object creation failed
                          due to a critical system error
 @deprecated Use the newer version with explicit encoding type parameter]]>
      </doc>
    </method>
    <method name="addLocalFile" return="org.sleuthkit.datamodel.LocalFile"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="Use the newer version with explicit sha256 parameter">
      <param name="fileName" type="java.lang.String"/>
      <param name="localPath" type="java.lang.String"/>
      <param name="size" type="long"/>
      <param name="ctime" type="long"/>
      <param name="crtime" type="long"/>
      <param name="atime" type="long"/>
      <param name="mtime" type="long"/>
      <param name="md5" type="java.lang.String"/>
      <param name="known" type="org.sleuthkit.datamodel.TskData.FileKnown"/>
      <param name="mimeType" type="java.lang.String"/>
      <param name="isFile" type="boolean"/>
      <param name="encodingType" type="org.sleuthkit.datamodel.TskData.EncodingType"/>
      <param name="parent" type="org.sleuthkit.datamodel.Content"/>
      <param name="transaction" type="org.sleuthkit.datamodel.SleuthkitCase.CaseDbTransaction"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Adds a local/logical file to the case database. The database operations
 are done within a caller-managed transaction; the caller is responsible
 for committing or rolling back the transaction.

 @param fileName     The name of the file.
 @param localPath    The absolute path (including the file name) of the
                     local/logical in secondary storage.
 @param size         The size of the file in bytes.
 @param ctime        The changed time of the file.
 @param crtime       The creation time of the file.
 @param atime        The accessed time of the file
 @param mtime        The modified time of the file.
 @param md5          The MD5 hash of the file
 @param known        The known status of the file (can be null)
 @param mimeType     The MIME type of the file
 @param isFile       True, unless the file is a directory.
 @param encodingType Type of encoding used on the file
 @param parent       The parent of the file (e.g., a virtual directory)
 @param transaction  A caller-managed transaction within which the add
                     file operations are performed.

 @return An object representing the local/logical file.

 @throws TskCoreException if there is an error completing a case database
                          operation.
 
 @deprecated Use the newer version with explicit sha256 parameter]]>
      </doc>
    </method>
    <method name="addLocalFile" return="org.sleuthkit.datamodel.LocalFile"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="Use the newer version with explicit encoding type parameter">
      <param name="fileName" type="java.lang.String"/>
      <param name="localPath" type="java.lang.String"/>
      <param name="size" type="long"/>
      <param name="ctime" type="long"/>
      <param name="crtime" type="long"/>
      <param name="atime" type="long"/>
      <param name="mtime" type="long"/>
      <param name="isFile" type="boolean"/>
      <param name="parent" type="org.sleuthkit.datamodel.AbstractFile"/>
      <param name="transaction" type="org.sleuthkit.datamodel.SleuthkitCase.CaseDbTransaction"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Adds a local/logical file to the case database. The database operations
 are done within a caller-managed transaction; the caller is responsible
 for committing or rolling back the transaction.

 @param fileName    The name of the file.
 @param localPath   The absolute path (including the file name) of the
                    local/logical in secondary storage.
 @param size        The size of the file in bytes.
 @param ctime       The changed time of the file.
 @param crtime      The creation time of the file.
 @param atime       The accessed time of the file
 @param mtime       The modified time of the file.
 @param isFile      True, unless the file is a directory.
 @param parent      The parent of the file (e.g., a virtual directory)
 @param transaction A caller-managed transaction within which the add file
                    operations are performed.

 @return An object representing the local/logical file.

 @throws TskCoreException if there is an error completing a case database
                          operation.
 @deprecated Use the newer version with explicit encoding type parameter]]>
      </doc>
    </method>
    <method name="addLocalFile" return="org.sleuthkit.datamodel.LocalFile"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="Use the newer version with explicit encoding type parameter">
      <param name="fileName" type="java.lang.String"/>
      <param name="localPath" type="java.lang.String"/>
      <param name="size" type="long"/>
      <param name="ctime" type="long"/>
      <param name="crtime" type="long"/>
      <param name="atime" type="long"/>
      <param name="mtime" type="long"/>
      <param name="isFile" type="boolean"/>
      <param name="parent" type="org.sleuthkit.datamodel.AbstractFile"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Wraps the version of addLocalFile that takes a Transaction in a
 transaction local to this method.

 @param fileName
 @param localPath
 @param size
 @param ctime
 @param crtime
 @param atime
 @param mtime
 @param isFile
 @param parent

 @return

 @throws TskCoreException
 @deprecated Use the newer version with explicit encoding type parameter]]>
      </doc>
    </method>
    <method name="makeAddImageProcess" return="org.sleuthkit.datamodel.SleuthkitJNI.CaseDbHandle.AddImageProcess"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="Use the newer version with explicit image writer path
 parameter">
      <param name="timezone" type="java.lang.String"/>
      <param name="addUnallocSpace" type="boolean"/>
      <param name="noFatFsOrphans" type="boolean"/>
      <doc>
      <![CDATA[Start process of adding a image to the case. Adding an image is a
 multi-step process and this returns an object that allows it to happen.

 @param timezone        TZ time zone string to use for ingest of image.
 @param addUnallocSpace Set to true to create virtual files for
                        unallocated space in the image.
 @param noFatFsOrphans  Set to true to skip processing orphan files of FAT
                        file systems.

 @return Object that encapsulates control of adding an image via the
         SleuthKit native code layer

 @deprecated Use the newer version with explicit image writer path
 parameter]]>
      </doc>
    </method>
    <method name="getFileSystems" return="java.util.Collection&lt;org.sleuthkit.datamodel.FileSystem&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="Use getImageFileSystems which throws an exception if an error
 occurs.">
      <param name="image" type="org.sleuthkit.datamodel.Image"/>
      <doc>
      <![CDATA[Helper to return FileSystems in an Image

 @param image Image to lookup FileSystem for

 @return Collection of FileSystems in the image

 @deprecated Use getImageFileSystems which throws an exception if an error
 occurs.]]>
      </doc>
    </method>
    <method name="acquireExclusiveLock"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="Use acquireSingleUserCaseWriteLock.">
      <doc>
      <![CDATA[Acquires a write lock, but only if this is a single-user case. Always
 call this method in a try block with a call to the lock release method in
 an associated finally block.

 @deprecated Use acquireSingleUserCaseWriteLock.]]>
      </doc>
    </method>
    <method name="releaseExclusiveLock"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="Use releaseSingleUserCaseWriteLock.">
      <doc>
      <![CDATA[Releases a write lock, but only if this is a single-user case. This
 method should always be called in the finally block of a try block in
 which the lock was acquired.

 @deprecated Use releaseSingleUserCaseWriteLock.]]>
      </doc>
    </method>
    <method name="acquireSharedLock"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="Use acquireSingleUserCaseReadLock.">
      <doc>
      <![CDATA[Acquires a read lock, but only if this is a single-user case. Call this
 method in a try block with a call to the lock release method in an
 associated finally block.

 @deprecated Use acquireSingleUserCaseReadLock.]]>
      </doc>
    </method>
    <method name="releaseSharedLock"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="Use releaseSingleUserCaseReadLock.">
      <doc>
      <![CDATA[Releases a read lock, but only if this is a single-user case. This method
 should always be called in the finally block of a try block in which the
 lock was acquired.

 @deprecated Use releaseSingleUserCaseReadLock.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Represents the case database with methods that provide abstractions for
 database operations.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.SleuthkitCase -->
  <!-- start class org.sleuthkit.datamodel.SleuthkitCase.CaseDbQuery -->
  <class name="SleuthkitCase.CaseDbQuery" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <implements name="java.lang.AutoCloseable"/>
    <method name="getResultSet" return="java.sql.ResultSet"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the result set for this query.

 @return The result set.]]>
      </doc>
    </method>
    <method name="close"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <doc>
    <![CDATA[The CaseDbQuery supports the use case where developers have a need for
 data that is not exposed through the SleuthkitCase API. A CaseDbQuery
 instance gets created through the SleuthkitCase executeDbQuery() method.
 It wraps the ResultSet and takes care of acquiring and releasing the
 appropriate database lock. It implements AutoCloseable so that it can be
 used in a try-with -resources block freeing developers from having to
 remember to close the result set and releasing the lock.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.SleuthkitCase.CaseDbQuery -->
  <!-- start class org.sleuthkit.datamodel.SleuthkitCase.CaseDbTransaction -->
  <class name="SleuthkitCase.CaseDbTransaction" extends="java.lang.Object"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="commit"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Commits the transaction on the case database that was begun when this
 object was constructed.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="rollback"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Rolls back the transaction on the case database that was begun when
 this object was constructed.

 @throws TskCoreException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Wraps the transactional capabilities of a CaseDbConnection object to
 support use cases where control of a transaction is given to a
 SleuthkitCase client. Note that this class does not implement the
 Transaction interface because that sort of flexibility and its associated
 complexity is not needed. Also, TskCoreExceptions are thrown to be
 consistent with the outer SleuthkitCase class.
 
 This class will automatically acquire the single user case write lock
 and release it when the transaction is closed. Otherwise we risk deadlock 
 because this transaction can lock up SQLite and make it "busy" and
 another thread may get a write lock to the DB, but not
 be able to do anything because the DB is busy.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.SleuthkitCase.CaseDbTransaction -->
  <!-- start interface org.sleuthkit.datamodel.SleuthkitCase.ErrorObserver -->
  <interface name="SleuthkitCase.ErrorObserver"    abstract="true"
    static="true" final="false" visibility="public"
    deprecated="Catch exceptions instead.">
    <method name="receiveError"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="context" type="java.lang.String"/>
      <param name="errorMessage" type="java.lang.String"/>
    </method>
    <doc>
    <![CDATA[Notifies observers of errors in the SleuthkitCase.

 @deprecated Catch exceptions instead.]]>
    </doc>
  </interface>
  <!-- end interface org.sleuthkit.datamodel.SleuthkitCase.ErrorObserver -->
  <!-- start class org.sleuthkit.datamodel.SleuthkitCase.ErrorObserver.Context -->
  <class name="SleuthkitCase.ErrorObserver.Context" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.SleuthkitCase.ErrorObserver.Context&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.SleuthkitCase.ErrorObserver.Context[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.SleuthkitCase.ErrorObserver.Context"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getContextString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[List of arguments for the context string parameters. This does not
 preclude the use of arbitrary context strings by client code, but it
 does provide a place to define standard context strings to allow
 filtering of notifications by implementations of ErrorObserver.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.SleuthkitCase.ErrorObserver.Context -->
  <!-- start class org.sleuthkit.datamodel.SleuthkitCaseAdminUtil -->
  <class name="SleuthkitCaseAdminUtil" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="deleteDataSource"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="caseDB" type="org.sleuthkit.datamodel.SleuthkitCase"/>
      <param name="dataSourceObjID" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Deletes a data source from a case database.

 @param caseDB          The case database.
 @param dataSourceObjID The object ID of the data source to be deleted.

 @throws TskCoreException If there is an error deleting the data source.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Utility methods for administering a case database.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.SleuthkitCaseAdminUtil -->
  <!-- start interface org.sleuthkit.datamodel.SleuthkitItemVisitor -->
  <interface name="SleuthkitItemVisitor"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="visit" return="T"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="d" type="org.sleuthkit.datamodel.Directory"/>
      <doc>
      <![CDATA[Act on (visit) a Directory content object

 @param d the directory to visit / act on

 @return result of the visit]]>
      </doc>
    </method>
    <method name="visit" return="T"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="f" type="org.sleuthkit.datamodel.File"/>
      <doc>
      <![CDATA[Act on (visit) a File content object

 @param f the file to visit / act on

 @return result of the visit]]>
      </doc>
    </method>
    <method name="visit" return="T"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="fs" type="org.sleuthkit.datamodel.FileSystem"/>
      <doc>
      <![CDATA[Act on (visit) a FileSystem content object

 @param fs the filesystem to visit / act on

 @return result of the visit]]>
      </doc>
    </method>
    <method name="visit" return="T"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="i" type="org.sleuthkit.datamodel.Image"/>
      <doc>
      <![CDATA[Act on (visit) an Image content object

 @param i the image to visit / act on

 @return result of the visit]]>
      </doc>
    </method>
    <method name="visit" return="T"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="v" type="org.sleuthkit.datamodel.Volume"/>
      <doc>
      <![CDATA[Act on (visit) a Volume content object

 @param v the volume to visit / act on

 @return result of the visit]]>
      </doc>
    </method>
    <method name="visit" return="T"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="vs" type="org.sleuthkit.datamodel.VolumeSystem"/>
      <doc>
      <![CDATA[Act on (visit) a VolumeSystem content object

 @param vs the volume system to visit / act on

 @return result of the visit]]>
      </doc>
    </method>
    <method name="visit" return="T"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="pool" type="org.sleuthkit.datamodel.Pool"/>
      <doc>
      <![CDATA[Act on (visit) a Pool content object

 @param pool the volume system to visit / act on

 @return result of the visit]]>
      </doc>
    </method>
    <method name="visit" return="T"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ba" type="org.sleuthkit.datamodel.BlackboardArtifact"/>
      <doc>
      <![CDATA[Act on (visit) a blackboard artifact object

 @param ba blackboard artifact object to visit / act on

 @return result of the visit]]>
      </doc>
    </method>
    <method name="visit" return="T"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="tw" type="org.sleuthkit.datamodel.BlackboardArtifact.ARTIFACT_TYPE"/>
      <doc>
      <![CDATA[Act on (visit) a blackboard artifact type

 @param tw blackboard artifact type to visit / act on

 @return result of the visit]]>
      </doc>
    </method>
    <method name="visit" return="T"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="lf" type="org.sleuthkit.datamodel.LayoutFile"/>
      <doc>
      <![CDATA[Act on (visit) a layout file content object

 @param lf layout file to visit / act on

 @return result of the visit]]>
      </doc>
    </method>
    <method name="visit" return="T"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ld" type="org.sleuthkit.datamodel.VirtualDirectory"/>
      <doc>
      <![CDATA[Act on (visit) a VirtualDirectory content object

 @param ld layout dir to visit / act on

 @return result of the visit]]>
      </doc>
    </method>
    <method name="visit" return="T"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ld" type="org.sleuthkit.datamodel.LocalDirectory"/>
      <doc>
      <![CDATA[Act on (visit) a LocalDirectory content object

 @param ld layout dir to visit / act on

 @return result of the visit]]>
      </doc>
    </method>
    <method name="visit" return="T"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="df" type="org.sleuthkit.datamodel.DerivedFile"/>
      <doc>
      <![CDATA[Act on (visit) a DerivedFile content object

 @param df derived file to visit / act on

 @return result of the visit]]>
      </doc>
    </method>
    <method name="visit" return="T"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="lf" type="org.sleuthkit.datamodel.LocalFile"/>
      <doc>
      <![CDATA[Act on (visit) a LocalFile content object

 @param lf local file to visit / act on

 @return result of the visit]]>
      </doc>
    </method>
    <method name="visit" return="T"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="sf" type="org.sleuthkit.datamodel.SlackFile"/>
      <doc>
      <![CDATA[Act on (visit) a SlackFile content object

 @param sf slack file to visit / act on

 @return result of the visit]]>
      </doc>
    </method>
    <method name="visit" return="T"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="report" type="org.sleuthkit.datamodel.Report"/>
      <doc>
      <![CDATA[Act on (visit) a Report content object

 @param report report to visit / act on

 @return result of the visit]]>
      </doc>
    </method>
    <method name="visit" return="T"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="account" type="org.sleuthkit.datamodel.OsAccount"/>
      <doc>
      <![CDATA[Act on (visit) a OsAccount content object

 @param account report to visit / act on

 @return result of the visit]]>
      </doc>
    </method>
    <method name="visit" return="T"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="unsupportedContent" type="org.sleuthkit.datamodel.UnsupportedContent"/>
      <doc>
      <![CDATA[Act on (visit) an UnsupportedContent object

 @param unsupportedContent content to visit / act on

 @return result of the visit]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Interface for implementing a visitor pattern on all displayable items:
 Content implementations and blackboard artifacts.

 Visitor implements an algorithm on the content and blackboard artifacts
 objects. The algorithm is completely decoupled from the data object. The
 visitor pattern emulates double dispatch mechanism. It allows to act
 differently depending on the instance type, without need to test what the
 actual type is. E.g. it allows for processing an object hierarchy without
 using instanceof statements. Generic type parameter T is a return type from
 the visit methods.

 @param <T> return type of visit methods]]>
    </doc>
  </interface>
  <!-- end interface org.sleuthkit.datamodel.SleuthkitItemVisitor -->
  <!-- start class org.sleuthkit.datamodel.SleuthkitItemVisitor.Default -->
  <class name="SleuthkitItemVisitor.Default" extends="java.lang.Object"
    abstract="true"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="org.sleuthkit.datamodel.SleuthkitItemVisitor&lt;T&gt;"/>
    <constructor name="Default"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="defaultVisit" return="T"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="s" type="org.sleuthkit.datamodel.SleuthkitVisitableItem"/>
    </method>
    <method name="visit" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="d" type="org.sleuthkit.datamodel.Directory"/>
    </method>
    <method name="visit" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="f" type="org.sleuthkit.datamodel.File"/>
    </method>
    <method name="visit" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="fs" type="org.sleuthkit.datamodel.FileSystem"/>
    </method>
    <method name="visit" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="i" type="org.sleuthkit.datamodel.Image"/>
    </method>
    <method name="visit" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="v" type="org.sleuthkit.datamodel.Volume"/>
    </method>
    <method name="visit" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="vs" type="org.sleuthkit.datamodel.VolumeSystem"/>
    </method>
    <method name="visit" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="p" type="org.sleuthkit.datamodel.Pool"/>
    </method>
    <method name="visit" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ba" type="org.sleuthkit.datamodel.BlackboardArtifact"/>
    </method>
    <method name="visit" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="tw" type="org.sleuthkit.datamodel.BlackboardArtifact.ARTIFACT_TYPE"/>
    </method>
    <method name="visit" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="lf" type="org.sleuthkit.datamodel.LayoutFile"/>
    </method>
    <method name="visit" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="vd" type="org.sleuthkit.datamodel.VirtualDirectory"/>
    </method>
    <method name="visit" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="ld" type="org.sleuthkit.datamodel.LocalDirectory"/>
    </method>
    <method name="visit" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="df" type="org.sleuthkit.datamodel.DerivedFile"/>
    </method>
    <method name="visit" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="lf" type="org.sleuthkit.datamodel.LocalFile"/>
    </method>
    <method name="visit" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="sf" type="org.sleuthkit.datamodel.SlackFile"/>
    </method>
    <method name="visit" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="report" type="org.sleuthkit.datamodel.Report"/>
    </method>
    <method name="visit" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="account" type="org.sleuthkit.datamodel.OsAccount"/>
    </method>
    <method name="visit" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="unsupportedContent" type="org.sleuthkit.datamodel.UnsupportedContent"/>
    </method>
    <doc>
    <![CDATA[The default visitor - quickest method for implementing a custom visitor.
 Every visit method delegates to the defaultVisit method, the only
 required method to be implemented. Then, implement the specific visit
 methods for the objects on which the algorithm needs to act differently.

 @param <T> generic type, signifies the object type to be returned from
            visit()]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.SleuthkitItemVisitor.Default -->
  <!-- start class org.sleuthkit.datamodel.SleuthkitJNI -->
  <class name="SleuthkitJNI" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getVersion" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[get the Sleuth Kit version string

 @return the version string]]>
      </doc>
    </method>
    <method name="startVerboseLogging"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="logPath" type="java.lang.String"/>
      <doc>
      <![CDATA[Enable verbose logging and redirect stderr to the given log file.

 @param logPath the log file path]]>
      </doc>
    </method>
    <method name="openImage" return="long"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="imageFiles" type="java.lang.String[]"/>
      <param name="skCase" type="org.sleuthkit.datamodel.SleuthkitCase"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Open the image and return the image info pointer.

 @param imageFiles the paths to the images
 @param skCase     the case this image belongs to

 @return the image info pointer

 @throws TskCoreException exception thrown if critical error occurs within
                          TSK]]>
      </doc>
    </method>
    <method name="openImage" return="long"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="imageFiles" type="java.lang.String[]"/>
      <param name="sSize" type="int"/>
      <param name="skCase" type="org.sleuthkit.datamodel.SleuthkitCase"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Open the image with a specified sector size and return the image info
 pointer.

 @param imageFiles the paths to the images
 @param sSize      the sector size (use '0' for autodetect)
 @param skCase     the case this image belongs to

 @return the image info pointer

 @throws TskCoreException exception thrown if critical error occurs within
                          TSK]]>
      </doc>
    </method>
    <method name="addImageToDatabase" return="org.sleuthkit.datamodel.Image"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="skCase" type="org.sleuthkit.datamodel.SleuthkitCase"/>
      <param name="imagePaths" type="java.lang.String[]"/>
      <param name="sectorSize" type="int"/>
      <param name="timeZone" type="java.lang.String"/>
      <param name="md5fromSettings" type="java.lang.String"/>
      <param name="sha1fromSettings" type="java.lang.String"/>
      <param name="sha256fromSettings" type="java.lang.String"/>
      <param name="deviceId" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Add an image to the database and return the open image.
 
 @param skCase     The current case.
 @param imagePaths The path(s) to the image (will just be the first for .e01, .001, etc).
 @param sectorSize The sector size (0 for auto-detect).
 @param timeZone   The time zone.
 @param md5fromSettings        MD5 hash (if known).
 @param sha1fromSettings       SHA1 hash (if known).
 @param sha256fromSettings     SHA256 hash (if known).
 @param deviceId   Device ID.
 
 @return The Image object.
 
 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="addImageToDatabase" return="org.sleuthkit.datamodel.Image"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="skCase" type="org.sleuthkit.datamodel.SleuthkitCase"/>
      <param name="imagePaths" type="java.lang.String[]"/>
      <param name="sectorSize" type="int"/>
      <param name="timeZone" type="java.lang.String"/>
      <param name="md5fromSettings" type="java.lang.String"/>
      <param name="sha1fromSettings" type="java.lang.String"/>
      <param name="sha256fromSettings" type="java.lang.String"/>
      <param name="deviceId" type="java.lang.String"/>
      <param name="host" type="org.sleuthkit.datamodel.Host"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Add an image to the database and return the open image.
 
 @param skCase     The current case.
 @param imagePaths The path(s) to the image (will just be the first for .e01, .001, etc).
 @param sectorSize The sector size (0 for auto-detect).
 @param timeZone   The time zone.
 @param md5fromSettings        MD5 hash (if known).
 @param sha1fromSettings       SHA1 hash (if known).
 @param sha256fromSettings     SHA256 hash (if known).
 @param deviceId   Device ID.
 @param host       Host.
 
 @return The Image object.
 
 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="openVs" return="long"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="imgHandle" type="long"/>
      <param name="vsOffset" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get volume system Handle

 @param imgHandle a handle to previously opened image
 @param vsOffset  byte offset in the image to the volume system (usually
                  0)

 @return pointer to a vsHandle structure in the sleuthkit

 @throws TskCoreException exception thrown if critical error occurs within
                          TSK]]>
      </doc>
    </method>
    <method name="openVsPart" return="long"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="vsHandle" type="long"/>
      <param name="volId" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get volume Handle

 @param vsHandle pointer to the volume system structure in the sleuthkit
 @param volId    id of the volume

 @return pointer to a volHandle structure in the sleuthkit

 @throws TskCoreException exception thrown if critical error occurs within
                          TSK]]>
      </doc>
    </method>
    <method name="openFs" return="long"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="imgHandle" type="long"/>
      <param name="fsOffset" type="long"/>
      <param name="skCase" type="org.sleuthkit.datamodel.SleuthkitCase"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get file system Handle Opened handle is cached (transparently) so it does
 not need be reopened next time for the duration of the application

 @param imgHandle pointer to imgHandle in sleuthkit
 @param fsOffset  byte offset to the file system
 @param skCase    the case containing the file system

 @return pointer to a fsHandle structure in the sleuthkit

 @throws TskCoreException exception thrown if critical error occurs within
                          TSK]]>
      </doc>
    </method>
    <method name="openFile" return="long"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="fsHandle" type="long"/>
      <param name="fileId" type="long"/>
      <param name="attrType" type="org.sleuthkit.datamodel.TskData.TSK_FS_ATTR_TYPE_ENUM"/>
      <param name="attrId" type="int"/>
      <param name="skCase" type="org.sleuthkit.datamodel.SleuthkitCase"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get file Handle

 @param fsHandle fsHandle pointer in the sleuthkit
 @param fileId   id of the file
 @param attrType file attribute type to open
 @param attrId   file attribute id to open
 @param skCase   the case associated with this file

 @return pointer to a file structure in the sleuthkit

 @throws TskCoreException exception thrown if critical error occurs within
                          TSK]]>
      </doc>
    </method>
    <method name="readImg" return="int"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="imgHandle" type="long"/>
      <param name="readBuffer" type="byte[]"/>
      <param name="offset" type="long"/>
      <param name="len" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[reads data from an image

 @param imgHandle
 @param readBuffer buffer to read to
 @param offset     byte offset in the image to start at
 @param len        amount of data to read

 @return the number of characters read, or -1 if the end of the stream has
         been reached

 @throws TskCoreException exception thrown if critical error occurs within
                          TSK]]>
      </doc>
    </method>
    <method name="readVs" return="int"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="vsHandle" type="long"/>
      <param name="readBuffer" type="byte[]"/>
      <param name="offset" type="long"/>
      <param name="len" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[reads data from an volume system

 @param vsHandle   pointer to a volume system structure in the sleuthkit
 @param readBuffer buffer to read to
 @param offset     sector offset in the image to start at
 @param len        amount of data to read

 @return the number of characters read, or -1 if the end of the stream has
         been reached

 @throws TskCoreException exception thrown if critical error occurs within
                          TSK]]>
      </doc>
    </method>
    <method name="readVsPart" return="int"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="volHandle" type="long"/>
      <param name="readBuffer" type="byte[]"/>
      <param name="offset" type="long"/>
      <param name="len" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[reads data from an volume

 @param volHandle  pointer to a volume structure in the sleuthkit
 @param readBuffer buffer to read to
 @param offset     byte offset in the image to start at
 @param len        amount of data to read

 @return the number of characters read, or -1 if the end of the stream has
         been reached

 @throws TskCoreException exception thrown if critical error occurs within
                          TSK]]>
      </doc>
    </method>
    <method name="readFs" return="int"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="fsHandle" type="long"/>
      <param name="readBuffer" type="byte[]"/>
      <param name="offset" type="long"/>
      <param name="len" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[reads data from an file system

 @param fsHandle   pointer to a file system structure in the sleuthkit
 @param readBuffer buffer to read to
 @param offset     byte offset in the image to start at
 @param len        amount of data to read

 @return the number of characters read, or -1 if the end of the stream has
         been reached

 @throws TskCoreException exception thrown if critical error occurs within
                          TSK]]>
      </doc>
    </method>
    <method name="readFile" return="int"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="fileHandle" type="long"/>
      <param name="readBuffer" type="byte[]"/>
      <param name="offset" type="long"/>
      <param name="len" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[reads data from an file

 @param fileHandle pointer to a file structure in the sleuthkit
 @param readBuffer pre-allocated buffer to read to
 @param offset     byte offset in the image to start at
 @param len        amount of data to read

 @return the number of characters read, or -1 if the end of the stream has
         been reached

 @throws TskCoreException exception thrown if critical error occurs within
                          TSK]]>
      </doc>
    </method>
    <method name="readFileSlack" return="int"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="fileHandle" type="long"/>
      <param name="readBuffer" type="byte[]"/>
      <param name="offset" type="long"/>
      <param name="len" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[reads data from the slack space of a file

 @param fileHandle pointer to a file structure in the sleuthkit
 @param readBuffer pre-allocated buffer to read to
 @param offset     byte offset in the slack to start at
 @param len        amount of data to read

 @return the number of characters read, or -1 if the end of the stream has
         been reached

 @throws TskCoreException exception thrown if critical error occurs within
                          TSK]]>
      </doc>
    </method>
    <method name="getFileMetaDataText" return="java.util.List&lt;java.lang.String&gt;"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="fileHandle" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get human readable (some what) details about a file. This is the same as
 the 'istat' TSK tool

 @param fileHandle pointer to file structure in the sleuthkit

 @return text

 @throws TskCoreException if errors occurred]]>
      </doc>
    </method>
    <method name="closeFile"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="fileHandle" type="long"/>
      <doc>
      <![CDATA[frees the fileHandle pointer

 @param fileHandle pointer to file structure in sleuthkit]]>
      </doc>
    </method>
    <method name="closeFile"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="fileHandle" type="long"/>
      <param name="skCase" type="org.sleuthkit.datamodel.SleuthkitCase"/>
      <doc>
      <![CDATA[frees the fileHandle pointer

 @param fileHandle pointer to file structure in sleuthkit
 @param skCase     the case containing the file]]>
      </doc>
    </method>
    <method name="createLookupIndexForHashDatabase"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="dbHandle" type="int"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Create an index for a hash database.

 @param dbHandle A hash database handle.

 @throws TskCoreException if a critical error occurs within TSK core]]>
      </doc>
    </method>
    <method name="hashDatabaseHasLookupIndex" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="dbHandle" type="int"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Check if an index exists for a hash database.

 @param dbHandle A hash database handle.

 @return true if index exists

 @throws TskCoreException if a critical error occurs within TSK core]]>
      </doc>
    </method>
    <method name="hashDatabaseCanBeReindexed" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="dbHandle" type="int"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[hashDatabaseCanBeReindexed

 @param dbHandle previously opened hash db handle

 @return Does this database have a source database that is different than
         the index?

 @throws TskCoreException if a critical error occurs within TSK core]]>
      </doc>
    </method>
    <method name="getHashDatabasePath" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="dbHandle" type="int"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[getHashDatabasePath

 @param dbHandle previously opened hash db handle

 @return Hash db file path

 @throws TskCoreException if a critical error occurs within TSK core]]>
      </doc>
    </method>
    <method name="getHashDatabaseIndexPath" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="dbHandle" type="int"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[getHashDatabaseIndexPath

 @param dbHandle previously opened hash db handle

 @return Index file path

 @throws TskCoreException if a critical error occurs within TSK core]]>
      </doc>
    </method>
    <method name="openHashDatabase" return="int"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="path" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Open a hash database for lookups
 @param path Path to Hash DB or index file
 @return Handle open db
 @throws TskCoreException if there is an error opening the DB]]>
      </doc>
    </method>
    <method name="createHashDatabase" return="int"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="path" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Creates a hash database. Will be of the default TSK hash database type.

 @param path The path to the database

 @return a handle for that database

 @throws TskCoreException if a critical error occurs within TSK core]]>
      </doc>
    </method>
    <method name="closeAllHashDatabases"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Close the currently open lookup databases. Resets the handle counting.

 @throws TskCoreException exception thrown if critical error occurs within
                          TSK]]>
      </doc>
    </method>
    <method name="closeHashDatabase"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="dbHandle" type="int"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Close a particular open lookup database. Existing handles are not
 affected.

 @param dbHandle Handle of database to close.

 @throws TskCoreException exception thrown if critical error occurs within
                          TSK]]>
      </doc>
    </method>
    <method name="getHashDatabaseDisplayName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="dbHandle" type="int"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get the name of the database

 @param dbHandle Previously opened hash db handle.

 @return The display name.

 @throws TskCoreException if a critical error occurs within TSK core]]>
      </doc>
    </method>
    <method name="lookupInHashDatabase" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="hash" type="java.lang.String"/>
      <param name="dbHandle" type="int"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Lookup the given hash value and get basic answer

 @param hash     Hash value to search for.
 @param dbHandle Handle of database to lookup in.

 @return True if hash was found in database.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="lookupInHashDatabaseVerbose" return="org.sleuthkit.datamodel.HashHitInfo"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="hash" type="java.lang.String"/>
      <param name="dbHandle" type="int"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Lookup hash value in DB and return details on results (more time
 consuming than basic lookup)

 @param hash     Hash value to search for
 @param dbHandle Handle of database to lookup in.

 @return Details on hash if it was in DB or null if it was not found.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="addToHashDatabase"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="filename" type="java.lang.String"/>
      <param name="md5" type="java.lang.String"/>
      <param name="sha1" type="java.lang.String"/>
      <param name="sha256" type="java.lang.String"/>
      <param name="comment" type="java.lang.String"/>
      <param name="dbHandle" type="int"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Adds a hash value to a hash database.

 @param filename Name of file (can be null)
 @param md5      Text of MD5 hash (can be null)
 @param sha1     Text of SHA1 hash (can be null)
 @param sha256   Text of SHA256 hash (can be null)
 @param comment  A comment (can be null)
 @param dbHandle Handle to DB

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="addToHashDatabase"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="hashes" type="java.util.List&lt;org.sleuthkit.datamodel.HashEntry&gt;"/>
      <param name="dbHandle" type="int"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="isUpdateableHashDatabase" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="dbHandle" type="int"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="hashDatabaseIsIndexOnly" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="dbHandle" type="int"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="finishImageWriter" return="int"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="imgHandle" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Fills in any gaps in the image created by image writer.

 @param imgHandle The image handle.

 @return 0 if no errors occurred; 1 otherwise.

 @throws TskCoreException exception thrown if critical error occurs within
                          TSK]]>
      </doc>
    </method>
    <method name="getFinishImageProgress" return="int"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="imgHandle" type="long"/>
      <doc>
      <![CDATA[Get the current progress of the finish image process (0-100)

 @param imgHandle

 @return Percentage of blocks completed (0-100)]]>
      </doc>
    </method>
    <method name="cancelFinishImage"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="imgHandle" type="long"/>
      <doc>
      <![CDATA[Cancel the finish image process

 @param imgHandle]]>
      </doc>
    </method>
    <method name="findDeviceSize" return="long"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="devPath" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get size of a device (physical, logical device, image) pointed to by
 devPath

 @param devPath device path pointing to the device

 @return size of the device in bytes

 @throws TskCoreException exception thrown if the device size could not be
                          queried]]>
      </doc>
    </method>
    <method name="isImageSupported" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="imagePath" type="java.lang.String"/>
    </method>
    <method name="closeImg"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="imgHandle" type="long"/>
      <doc>
      <![CDATA[frees the imgHandle pointer currently does not close the image -
 imgHandle should only be freed as part of CaseDbHandle.free().

 @param imgHandle to close the image]]>
      </doc>
    </method>
    <method name="closeVs"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="vsHandle" type="long"/>
      <doc>
      <![CDATA[frees the vsHandle pointer - currently does nothing

 @param vsHandle pointer to volume system structure in sleuthkit]]>
      </doc>
    </method>
    <method name="closeFs"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="fsHandle" type="long"/>
      <doc>
      <![CDATA[frees the fsHandle pointer Currently does not do anything - fsHandle
 should only be freed as part of CaseDbHandle.free().

 @param fsHandle pointer to file system structure in sleuthkit]]>
      </doc>
    </method>
    <method name="openImage" return="long"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="Use the version with the SleuthkitCase argument">
      <param name="imageFiles" type="java.lang.String[]"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Open the image and return the image info pointer.

 @param imageFiles the paths to the images

 @return the image info pointer

 @throws TskCoreException exception thrown if critical error occurs within
                          TSK
 @deprecated Use the version with the SleuthkitCase argument]]>
      </doc>
    </method>
    <method name="openImage" return="long"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="Use the version with the SleuthkitCase argument">
      <param name="imageFiles" type="java.lang.String[]"/>
      <param name="sSize" type="int"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Open the image with a specified sector size and return the image info
 pointer.

 @param imageFiles the paths to the images
 @param sSize      the sector size (use '0' for autodetect)

 @return the image info pointer

 @throws TskCoreException exception thrown if critical error occurs within
                          TSK
 @deprecated Use the version with the SleuthkitCase argument]]>
      </doc>
    </method>
    <method name="openFs" return="long"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="Use the version with the SleuthkitCase argument">
      <param name="imgHandle" type="long"/>
      <param name="fsOffset" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get file system Handle Opened handle is cached (transparently) so it does
 not need be reopened next time for the duration of the application

 @param imgHandle pointer to imgHandle in sleuthkit
 @param fsOffset  byte offset to the file system

 @return pointer to a fsHandle structure in the sleuthkit

 @throws TskCoreException exception thrown if critical error occurs within
                          TSK
 @deprecated Use the version with the SleuthkitCase argument]]>
      </doc>
    </method>
    <method name="openFile" return="long"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="Use the version with the SleuthkitCase argument">
      <param name="fsHandle" type="long"/>
      <param name="fileId" type="long"/>
      <param name="attrType" type="org.sleuthkit.datamodel.TskData.TSK_FS_ATTR_TYPE_ENUM"/>
      <param name="attrId" type="int"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Get file Handle

 @param fsHandle fsHandle pointer in the sleuthkit
 @param fileId   id of the file
 @param attrType file attribute type to open
 @param attrId   file attribute id to open

 @return pointer to a file structure in the sleuthkit

 @throws TskCoreException exception thrown if critical error occurs within
                          TSK
 @deprecated Use the version with the SleuthkitCase argument]]>
      </doc>
    </method>
    <doc>
    <![CDATA[A utility class that provides a interface to the SleuthKit via JNI. Supports
 case management, add image process, reading data off content objects Setting
 up Hash database parameters and updating / reading values

 Caches image and filesystem handles and reuses them for the duration of the
 application]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.SleuthkitJNI -->
  <!-- start class org.sleuthkit.datamodel.SleuthkitJNI.CaseDbHandle -->
  <class name="SleuthkitJNI.CaseDbHandle" extends="java.lang.Object"
    abstract="false"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <doc>
    <![CDATA[Encapsulates a handle to a SleuthKit case database with support for
 adding images to the database.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.SleuthkitJNI.CaseDbHandle -->
  <!-- start class org.sleuthkit.datamodel.SleuthkitJNI.CaseDbHandle.AddImageProcess -->
  <class name="SleuthkitJNI.CaseDbHandle.AddImageProcess" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="run"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="deviceId" type="java.lang.String"/>
      <param name="imageFilePaths" type="java.lang.String[]"/>
      <param name="sectorSize" type="int"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <exception name="TskDataException" type="org.sleuthkit.datamodel.TskDataException"/>
      <doc>
      <![CDATA[Starts the process of adding an image to the case database.

 @param deviceId       An ASCII-printable identifier for the
                       device associated with the image that
                       should be unique across multiple cases
                       (e.g., a UUID).
 @param imageFilePaths Full path(s) to the image file(s).
 @param sectorSize     The sector size (use '0' for autodetect).

 @throws TskCoreException if a critical error occurs within the
                          SleuthKit.
 @throws TskDataException if a non-critical error occurs within
                          the SleuthKit (should be OK to continue
                          the process)]]>
      </doc>
    </method>
    <method name="run"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="deviceId" type="java.lang.String"/>
      <param name="image" type="org.sleuthkit.datamodel.Image"/>
      <param name="sectorSize" type="int"/>
      <param name="addDataSourceCallbacks" type="org.sleuthkit.datamodel.AddDataSourceCallbacks"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <exception name="TskDataException" type="org.sleuthkit.datamodel.TskDataException"/>
      <doc>
      <![CDATA[Starts the process of adding an image to the case database.

 @param deviceId       An ASCII-printable identifier for the
                       device associated with the image that
                       should be unique across multiple cases
                       (e.g., a UUID).
 @param image          The image object (has already been added to the database)
 @param sectorSize     The sector size (no longer used).
 @param addDataSourceCallbacks  The callbacks to use to send data to ingest (may do nothing).

 @throws TskCoreException if a critical error occurs within the
                          SleuthKit.
 @throws TskDataException if a non-critical error occurs within
                          the SleuthKit (should be OK to continue
                          the process)]]>
      </doc>
    </method>
    <method name="stop"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Stops the process of adding the image to the case database that
 was started by calling AddImageProcess.run.
 AddImageProcess.revert should be called after calling
 AddImageProcess.stop.

 @throws TskCoreException if a critical error occurs within the
                          SleuthKit.]]>
      </doc>
    </method>
    <method name="revert"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="No longer necessary">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[This no longer needs to be called.

 @throws TskCoreException if a critical error occurs within the
                          SleuthKit.
 
 @deprecated No longer necessary]]>
      </doc>
    </method>
    <method name="commit" return="long"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="No longer necessary">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[This no longer needs to be called. Will simply return the 
 object ID of the new image.

 @return The object id of the image that was added.

 @throws TskCoreException if a critical error occurs within the
                          SleuthKit.
 
 @deprecated No longer necessary]]>
      </doc>
    </method>
    <method name="currentDirectory" return="java.lang.String"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the file system directory currently being processed by the
 SleuthKit.

 @return The directory]]>
      </doc>
    </method>
    <method name="run"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="Use run(String dataSourceId, String[] imageFilePaths)
 instead">
      <param name="imageFilePaths" type="java.lang.String[]"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <exception name="TskDataException" type="org.sleuthkit.datamodel.TskDataException"/>
      <doc>
      <![CDATA[Starts the process of adding an image to the case database.
 Either commit() or revert() MUST be called after calling run().

 @param imageFilePaths Full path(s) to the image file(s).

 @throws TskCoreException if a critical error occurs within the
                          SleuthKit.
 @throws TskDataException if a non-critical error occurs within
                          the SleuthKit (should be OK to continue
                          the process)

 @deprecated Use run(String dataSourceId, String[] imageFilePaths)
 instead]]>
      </doc>
    </method>
    <method name="run"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="deviceId" type="java.lang.String"/>
      <param name="imageFilePaths" type="java.lang.String[]"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <exception name="TskDataException" type="org.sleuthkit.datamodel.TskDataException"/>
      <doc>
      <![CDATA[Starts the process of adding an image to the case database.

 @param deviceId       An ASCII-printable identifier for the
                       device associated with the image that
                       should be unique across multiple cases
                       (e.g., a UUID).
 @param imageFilePaths Full path(s) to the image file(s).

 @throws TskCoreException if a critical error occurs within the
                          SleuthKit.
 @throws TskDataException if a non-critical error occurs within
                          the SleuthKit (should be OK to continue
                          the process)]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Encapsulates a multi-step process to add an image to the case
 database.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.SleuthkitJNI.CaseDbHandle.AddImageProcess -->
  <!-- start interface org.sleuthkit.datamodel.SleuthkitVisitableItem -->
  <interface name="SleuthkitVisitableItem"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="accept" return="T"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="v" type="org.sleuthkit.datamodel.SleuthkitItemVisitor&lt;T&gt;"/>
      <doc>
      <![CDATA[visitor pattern support

 @param v visitor

 @return visitor return value]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Interface for all visitable datatypes that can be found in the tsk database]]>
    </doc>
  </interface>
  <!-- end interface org.sleuthkit.datamodel.SleuthkitVisitableItem -->
  <!-- start class org.sleuthkit.datamodel.SpecialDirectory -->
  <class name="SpecialDirectory" extends="org.sleuthkit.datamodel.AbstractFile"
    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getRanges" return="java.util.List&lt;org.sleuthkit.datamodel.TskFileRange&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the extents in terms of byte addresses of this directory
 within its data source, always an empty list.

 @return An empty list.

 @throws TskCoreException if there was an error querying the case
                          database.]]>
      </doc>
    </method>
    <method name="isDataSource" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Indicates whether or not this is a data source.

 @return True or false.]]>
      </doc>
    </method>
    <method name="close"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Does nothing, a special directory cannot be opened, read, or closed.]]>
      </doc>
    </method>
    <method name="isRoot" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Indicates whether or not this directory is the root of a file
 system, always returns false.

 @return False.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Parent class for special directory types (Local and Virtual)]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.SpecialDirectory -->
  <!-- start class org.sleuthkit.datamodel.Tag -->
  <class name="Tag" extends="java.lang.Object"
    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getId" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get Tag ID (unique amongst tags)
 
 @return]]>
      </doc>
    </method>
    <method name="getName" return="org.sleuthkit.datamodel.TagName"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getComment" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getUserName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[This class is a base class for data transfer object (DTO) classes that model
 tags applied to content and blackboard artifacts by users.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.Tag -->
  <!-- start class org.sleuthkit.datamodel.TaggingManager -->
  <class name="TaggingManager" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getTagSets" return="java.util.List&lt;org.sleuthkit.datamodel.TagSet&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Returns a list of all the TagSets that exist in the case.

 @return A List of TagSet objects or an empty list if none were found.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="addTagSet" return="org.sleuthkit.datamodel.TagSet"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
      <param name="tagNames" type="java.util.List&lt;org.sleuthkit.datamodel.TagName&gt;"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Inserts a row into the tag_sets table in the case database.

 @param name     The tag set name.
 @param tagNames

 @return A TagSet object for the new row.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="deleteTagSet"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="tagSet" type="org.sleuthkit.datamodel.TagSet"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Remove a row from the tag set table. If the given TagSet has a valid list
 of TagNames the TagNames will be removed from the tag_name table if there
 are not references to the TagNames in the content_tag or
 blackboard_artifact_tag table.

 @param tagSet TagSet to be deleted.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="getTagSet" return="org.sleuthkit.datamodel.TagSet"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="tagName" type="org.sleuthkit.datamodel.TagName"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the tag set a tag name (tag definition) belongs to, if any.

 @param tagName The tag name.

 @return A TagSet object or null.

 @throws TskCoreException If there is an error querying the case database.]]>
      </doc>
    </method>
    <method name="addArtifactTag" return="org.sleuthkit.datamodel.TaggingManager.BlackboardArtifactTagChange"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifact" type="org.sleuthkit.datamodel.BlackboardArtifact"/>
      <param name="tagName" type="org.sleuthkit.datamodel.TagName"/>
      <param name="comment" type="java.lang.String"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Inserts a row into the blackboard_artifact_tags table in the case
 database.

 @param artifact The blackboard artifact to tag.
 @param tagName  The name to use for the tag.
 @param comment  A comment to store with the tag.

 @return A BlackboardArtifactTag data transfer object (DTO) for the new
         row.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="addContentTag" return="org.sleuthkit.datamodel.TaggingManager.ContentTagChange"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="content" type="org.sleuthkit.datamodel.Content"/>
      <param name="tagName" type="org.sleuthkit.datamodel.TagName"/>
      <param name="comment" type="java.lang.String"/>
      <param name="beginByteOffset" type="long"/>
      <param name="endByteOffset" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Inserts a row into the content_tags table in the case database.

 @param content         The content to tag.
 @param tagName         The name to use for the tag.
 @param comment         A comment to store with the tag.
 @param beginByteOffset Designates the beginning of a tagged section.
 @param endByteOffset   Designates the end of a tagged section.

 @return A ContentTag data transfer object (DTO) for the new row.

 @throws TskCoreException]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Provides an API to manage Tags.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TaggingManager -->
  <!-- start class org.sleuthkit.datamodel.TaggingManager.BlackboardArtifactTagChange -->
  <class name="TaggingManager.BlackboardArtifactTagChange" extends="java.lang.Object"
    abstract="false"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getAddedTag" return="org.sleuthkit.datamodel.BlackboardArtifactTag"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns the newly created tag.

 @return Add artifact tag.]]>
      </doc>
    </method>
    <method name="getRemovedTags" return="java.util.List&lt;org.sleuthkit.datamodel.BlackboardArtifactTag&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns a list of the artifacts tags that were removed.

 @return]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Object to store the tag change from a call to addArtifactTag.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TaggingManager.BlackboardArtifactTagChange -->
  <!-- start class org.sleuthkit.datamodel.TaggingManager.ContentTagChange -->
  <class name="TaggingManager.ContentTagChange" extends="java.lang.Object"
    abstract="false"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getAddedTag" return="org.sleuthkit.datamodel.ContentTag"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns the newly created tag.

 @return Add artifact tag.]]>
      </doc>
    </method>
    <method name="getRemovedTags" return="java.util.List&lt;org.sleuthkit.datamodel.ContentTag&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns a list of the artifacts tags that were removed.

 @return]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Object to store the tag change from a call to addContentTag.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TaggingManager.ContentTagChange -->
  <!-- start class org.sleuthkit.datamodel.TagName -->
  <class name="TagName" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="java.lang.Comparable&lt;org.sleuthkit.datamodel.TagName&gt;"/>
    <implements name="java.io.Serializable"/>
    <method name="getId" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDisplayName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getColor" return="org.sleuthkit.datamodel.TagName.HTML_COLOR"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getKnownStatus" return="org.sleuthkit.datamodel.TskData.FileKnown"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getRank" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="compareTo" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="other" type="org.sleuthkit.datamodel.TagName"/>
      <doc>
      <![CDATA[Compares two TagName objects by comparing their display names.

 @param other The other TagName to compare this TagName to

 @return the result of calling compareTo on the displayNames]]>
      </doc>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="obj" type="java.lang.Object"/>
    </method>
    <doc>
    <![CDATA[Instances of this class are data transfer objects (DTOs) that represent the
 names (and related properties) a user can select from to apply a tag to
 content or a blackboard artifact.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TagName -->
  <!-- start class org.sleuthkit.datamodel.TagName.HTML_COLOR -->
  <class name="TagName.HTML_COLOR" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.TagName.HTML_COLOR&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.TagName.HTML_COLOR[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.TagName.HTML_COLOR"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getRgbValue" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getColorByName" return="org.sleuthkit.datamodel.TagName.HTML_COLOR"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="colorName" type="java.lang.String"/>
    </method>
  </class>
  <!-- end class org.sleuthkit.datamodel.TagName.HTML_COLOR -->
  <!-- start class org.sleuthkit.datamodel.TagSet -->
  <class name="TagSet" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns the name of the tag set.

 @return Tag set name.]]>
      </doc>
    </method>
    <method name="getTagNames" return="java.util.List&lt;org.sleuthkit.datamodel.TagName&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns a list of the TagName objects that belong to the tag set.

 @return An unmodifiable list of TagName objects.]]>
      </doc>
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="obj" type="java.lang.Object"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[A TagSet is a named group of TagNames.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TagSet -->
  <!-- start class org.sleuthkit.datamodel.TimelineEvent -->
  <class name="TimelineEvent" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="eventSourceIsTagged" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Indicates whether or not the direct source (file or artifact) of this
 artifact has been tagged.

 @return True or false.]]>
      </doc>
    </method>
    <method name="eventSourceHasHashHits" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Indicates whether or not the file, if any, associated with this event,
 either directly or indirectly, is a file for which a hash set hit has
 been detected.

 @return True or false.]]>
      </doc>
    </method>
    <method name="getArtifactID" return="java.util.Optional&lt;java.lang.Long&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the artifact ID (not object ID) of the artifact, if any, that is the
 direct source of this event.

 @return An Optional object containing the artifact ID. May be empty.]]>
      </doc>
    </method>
    <method name="getEventID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the unique ID of this event in the case database.

 @return The event ID.]]>
      </doc>
    </method>
    <method name="getContentObjID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the object ID of the content that is the direct or indirect source
 of this event. For events associated with files, this will be the object
 ID of the file that is the direct event source. For events associated
 with artifacts, this will be the object ID of the artifact source: a
 file, a data source, or another artifact.

 @return The object ID.]]>
      </doc>
    </method>
    <method name="getTime" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the time this event occurred.

 @return The time this event occurred, in seconds from UNIX epoch.]]>
      </doc>
    </method>
    <method name="getEventType" return="org.sleuthkit.datamodel.TimelineEventType"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the type of this event.

 @return The event type.]]>
      </doc>
    </method>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="levelOfDetail" type="org.sleuthkit.datamodel.TimelineLevelOfDetail"/>
      <doc>
      <![CDATA[Gets the description of this event at a given level of detail.

 @param levelOfDetail The desired level of detail.

 @return The description of this event at the given level of detail.]]>
      </doc>
    </method>
    <method name="getDataSourceObjID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the object ID of the data source for the source content of this
 event.

 @return The data source object ID.]]>
      </doc>
    </method>
    <method name="getEventTimeInMs" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the time this event occured, in milliseconds from the UNIX epoch.

 @return The event time in milliseconds from the UNIX epoch.]]>
      </doc>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="obj" type="java.lang.Object"/>
    </method>
    <doc>
    <![CDATA[A representation of an event in the timeline of a case.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TimelineEvent -->
  <!-- start interface org.sleuthkit.datamodel.TimelineEventType -->
  <interface name="TimelineEventType"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="java.lang.Comparable&lt;org.sleuthkit.datamodel.TimelineEventType&gt;"/>
    <method name="getDisplayName" return="java.lang.String"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the display name of this event type.

 @return The event type display name.]]>
      </doc>
    </method>
    <method name="getTypeID" return="long"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the unique ID of this event type in the case database.

 @return The event type ID.]]>
      </doc>
    </method>
    <method name="getTypeHierarchyLevel" return="org.sleuthkit.datamodel.TimelineEventType.HierarchyLevel"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the type hierarchy level of this event type.

 @return The type hierarchy level.]]>
      </doc>
    </method>
    <method name="getChildren" return="java.util.SortedSet&lt;? extends org.sleuthkit.datamodel.TimelineEventType&gt;"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the child event types of this event type in the type hierarchy.

 @return A sorted set of the child event types.]]>
      </doc>
    </method>
    <method name="getChild" return="java.util.Optional&lt;? extends org.sleuthkit.datamodel.TimelineEventType&gt;"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="displayName" type="java.lang.String"/>
      <doc>
      <![CDATA[Gets a specific child event type of this event type in the type
 hierarchy.

 @param displayName The display name of the desired child event type.

 @return The child event type in an Optional object, may be empty.]]>
      </doc>
    </method>
    <method name="getParent" return="org.sleuthkit.datamodel.TimelineEventType"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the parent event type of this event type in the type hierarchy.

 @return The parent event type.]]>
      </doc>
    </method>
    <method name="getCategory" return="org.sleuthkit.datamodel.TimelineEventType"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the category level event type for this event type in the type
 hierarchy.

 @return The category event type.]]>
      </doc>
    </method>
    <method name="getSiblings" return="java.util.SortedSet&lt;? extends org.sleuthkit.datamodel.TimelineEventType&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the sibling event types of this event type in the type hierarchy.

 @return The sibling event types.]]>
      </doc>
    </method>
    <method name="compareTo" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="otherType" type="org.sleuthkit.datamodel.TimelineEventType"/>
    </method>
    <method name="getCategoryTypes" return="java.util.SortedSet&lt;? extends org.sleuthkit.datamodel.TimelineEventType&gt;"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getFileSystemTypes" return="java.util.SortedSet&lt;? extends org.sleuthkit.datamodel.TimelineEventType&gt;"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getWebActivityTypes" return="java.util.SortedSet&lt;? extends org.sleuthkit.datamodel.TimelineEventType&gt;"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getMiscTypes" return="java.util.SortedSet&lt;? extends org.sleuthkit.datamodel.TimelineEventType&gt;"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="stringValueOf" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="attr" type="org.sleuthkit.datamodel.BlackboardAttribute"/>
    </method>
    <method name="toFrom" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="dir" type="org.sleuthkit.datamodel.BlackboardAttribute"/>
    </method>
    <field name="ROOT_EVENT_TYPE" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The root type of all event types. No event should actually have this
 type.]]>
      </doc>
    </field>
    <field name="FILE_SYSTEM" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="WEB_ACTIVITY" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="MISC_TYPES" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="FILE_MODIFIED" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="FILE_ACCESSED" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="FILE_CREATED" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="FILE_CHANGED" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="WEB_DOWNLOADS" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="WEB_COOKIE" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="WEB_BOOKMARK" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="WEB_HISTORY" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="WEB_SEARCH" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="MESSAGE" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="GPS_ROUTE" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="GPS_TRACKPOINT" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="CALL_LOG" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="EMAIL" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="RECENT_DOCUMENTS" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="INSTALLED_PROGRAM" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="EXIF" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="DEVICES_ATTACHED" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="CUSTOM_TYPES" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="OTHER" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="LOG_ENTRY" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="REGISTRY" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="USER_CREATED" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="WEB_FORM_AUTOFILL" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="WEB_FORM_ADDRESSES" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="GPS_BOOKMARK" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="GPS_LAST_KNOWN_LOCATION" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="GPS_SEARCH" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="GPS_TRACK" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="METADATA_LAST_PRINTED" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="METADATA_LAST_SAVED" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="METADATA_CREATED" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="PROGRAM_EXECUTION" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="WEB_FORM_AUTOFILL_ACCESSED" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="CALL_LOG_END" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="EMAIL_RCVD" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="WEB_FORM_ADDRESSES_MODIFIED" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="WEB_COOKIE_ACCESSED" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="WEB_COOKIE_END" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="BACKUP_EVENT_START" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="BACKUP_EVENT_END" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="BLUETOOTH_PAIRING" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="CALENDAR_ENTRY_START" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="CALENDAR_ENTRY_END" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="PROGRAM_DELETED" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="OS_INFO" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="PROGRAM_NOTIFICATION" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="SCREEN_SHOT" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="SERVICE_ACCOUNT" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="USER_DEVICE_EVENT_START" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="USER_DEVICE_EVENT_END" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="WEB_CACHE" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="WIFI_NETWORK" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="WEB_HISTORY_CREATED" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="BLUETOOTH_ADAPTER" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <field name="BLUETOOTH_PAIRING_ACCESSED" type="org.sleuthkit.datamodel.TimelineEventType"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
    </field>
    <doc>
    <![CDATA[An interface implemented by timeline event types. Timeline event types are
 organized into a type hierarchy. This type hierarchy has three levels: the
 root level, the category level (e.g, file system events, web activity
 events), and the actual event level (e.g., file modified events, web download
 events).

 Currently (9/20/19), all supported timeline event types are defined as
 members of this interface.

 WARNING: THIS INTERFACE IS A "BETA" INTERFACE AND IS SUBJECT TO CHANGE AT ANY
 TIME.]]>
    </doc>
  </interface>
  <!-- end interface org.sleuthkit.datamodel.TimelineEventType -->
  <!-- start class org.sleuthkit.datamodel.TimelineEventType.HierarchyLevel -->
  <class name="TimelineEventType.HierarchyLevel" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.TimelineEventType.HierarchyLevel&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.TimelineEventType.HierarchyLevel[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.TimelineEventType.HierarchyLevel"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getDisplayName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the display name of this element of the enumeration of the
 levels in the event type hierarchy.

 @return The display name.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[An enumeration of the levels in the event type hierarchy.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TimelineEventType.HierarchyLevel -->
  <!-- start class org.sleuthkit.datamodel.TimelineFilter -->
  <class name="TimelineFilter" extends="java.lang.Object"
    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="TimelineFilter"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getDisplayName" return="java.lang.String"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the display name for this filter.

 @return The display name.]]>
      </doc>
    </method>
    <method name="copyOf" return="org.sleuthkit.datamodel.TimelineFilter"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Makes a copy of this filter.

 @return A copy of this filter.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[An interface for timeline events filters used to selectively query the
 timeline tables in the case database for timeline events via the APIs of the
 timeline manager.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TimelineFilter -->
  <!-- start class org.sleuthkit.datamodel.TimelineFilter.CompoundFilter -->
  <class name="TimelineFilter.CompoundFilter" extends="org.sleuthkit.datamodel.TimelineFilter"
    abstract="true"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="CompoundFilter" type="java.util.List&lt;SubFilterType&gt;"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructs a timeline events filter composed of a collection of event
 filters.

 @param subFilters The collection of filters.]]>
      </doc>
    </constructor>
    <method name="addSubFilter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <param name="subfilter" type="SubFilterType extends org.sleuthkit.datamodel.TimelineFilter"/>
    </method>
    <method name="getSubFilters" return="java.util.List&lt;SubFilterType&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="true" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the collection of filters that make up this filter.

 @return The filters.]]>
      </doc>
    </method>
    <method name="hasSubFilters" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Indicates whether or not this filter has subfilters.

 @return True or false.]]>
      </doc>
    </method>
    <method name="copyOf" return="org.sleuthkit.datamodel.TimelineFilter.CompoundFilter&lt;SubFilterType&gt;"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="obj" type="java.lang.Object"/>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[A timeline events filter composed of a collection of event filters.
 Concrete implementations can decide how to combine the filters in the
 collection.

 @param <SubFilterType> The type of the subfilters.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TimelineFilter.CompoundFilter -->
  <!-- start class org.sleuthkit.datamodel.TimelineFilter.DataSourceFilter -->
  <class name="TimelineFilter.DataSourceFilter" extends="org.sleuthkit.datamodel.TimelineFilter"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <constructor name="DataSourceFilter" type="java.lang.String, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructs a timeline events filter used to query for events
 associated with a given data source.

 @param dataSourceName The data source display name.
 @param dataSourceID   The data source object ID.]]>
      </doc>
    </constructor>
    <method name="getDataSourceID" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the object ID of the specified data source.

 @return The data source object ID.]]>
      </doc>
    </method>
    <method name="getDataSourceName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the display name of the specified data source.

 @return The data source display name.]]>
      </doc>
    </method>
    <method name="copyOf" return="org.sleuthkit.datamodel.TimelineFilter.DataSourceFilter"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDisplayName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="obj" type="java.lang.Object"/>
    </method>
    <doc>
    <![CDATA[A timeline events filter used to query for events associated with a given
 data source.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TimelineFilter.DataSourceFilter -->
  <!-- start class org.sleuthkit.datamodel.TimelineFilter.DataSourcesFilter -->
  <class name="TimelineFilter.DataSourcesFilter" extends="org.sleuthkit.datamodel.TimelineFilter.UnionFilter&lt;org.sleuthkit.datamodel.TimelineFilter.DataSourceFilter&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <constructor name="DataSourcesFilter"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="copyOf" return="org.sleuthkit.datamodel.TimelineFilter.DataSourcesFilter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDisplayName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[A timeline events filter used to query for events associated with a given
 subset of data sources. The filter is a union of one or more single data
 source filters.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TimelineFilter.DataSourcesFilter -->
  <!-- start class org.sleuthkit.datamodel.TimelineFilter.EventTypeFilter -->
  <class name="TimelineFilter.EventTypeFilter" extends="org.sleuthkit.datamodel.TimelineFilter.UnionFilter&lt;org.sleuthkit.datamodel.TimelineFilter.EventTypeFilter&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <constructor name="EventTypeFilter" type="org.sleuthkit.datamodel.TimelineEventType"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructs a timeline events filter used to query for a subset of the
 event types in the event types hierarchy. The subset of event types
 that pass the filter is determined by a recursive descent from any
 given type in the hierarchy, effectively creating a filter that
 accepts the events in a branch of the event types hierarchy.

 @param rootEventType The "root" of the event hierarchy for the
                      purposes of this filter.]]>
      </doc>
    </constructor>
    <method name="getRootEventType" return="org.sleuthkit.datamodel.TimelineEventType"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the "root" of the branch of the event types hierarchy accepted
 by this filter.

 @return The "root" event type.]]>
      </doc>
    </method>
    <method name="getDisplayName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="copyOf" return="org.sleuthkit.datamodel.TimelineFilter.EventTypeFilter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="obj" type="java.lang.Object"/>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[A timeline events filter used to query for a subset of the event types in
 the event types hierarchy. The filter is built via a recursive descent
 from any given type in the hierarchy, effectively creating a filter that
 accepts the events in a branch of the event types hierarchy.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TimelineFilter.EventTypeFilter -->
  <!-- start class org.sleuthkit.datamodel.TimelineFilter.FileTypeFilter -->
  <class name="TimelineFilter.FileTypeFilter" extends="org.sleuthkit.datamodel.TimelineFilter"
    abstract="false"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="FileTypeFilter" type="java.lang.String, java.util.Collection&lt;java.lang.String&gt;"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructs a timeline events filter used to query for events with
 direct or indirect event sources that are files with a given set of
 media types.

 @param displayName The display name for the filter.
 @param mediaTypes  The event source file media types that pass the
                    filter.]]>
      </doc>
    </constructor>
    <method name="getDisplayName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="copyOf" return="org.sleuthkit.datamodel.TimelineFilter.FileTypeFilter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="obj" type="java.lang.Object"/>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[A timeline events filter used to query for events with direct or indirect
 event sources that are files with a given set of media types.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TimelineFilter.FileTypeFilter -->
  <!-- start class org.sleuthkit.datamodel.TimelineFilter.FileTypesFilter -->
  <class name="TimelineFilter.FileTypesFilter" extends="org.sleuthkit.datamodel.TimelineFilter.UnionFilter&lt;org.sleuthkit.datamodel.TimelineFilter.FileTypeFilter&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <constructor name="FileTypesFilter"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="copyOf" return="org.sleuthkit.datamodel.TimelineFilter.FileTypesFilter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDisplayName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[A timeline events filter used to query for events with direct or indirect
 event sources that are files with a given set of media types. The filter
 is a union of one or more file source filters.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TimelineFilter.FileTypesFilter -->
  <!-- start class org.sleuthkit.datamodel.TimelineFilter.HashHitsFilter -->
  <class name="TimelineFilter.HashHitsFilter" extends="org.sleuthkit.datamodel.TimelineFilter"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <constructor name="HashHitsFilter"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructs a timeline events filter used to query for events where
 the files that are the direct or indirect sources of the events
 either do not have hash set hits.]]>
      </doc>
    </constructor>
    <constructor name="HashHitsFilter" type="boolean"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructs a timeline events filter used to query for events where
 the files that are the direct or indirect sources of the events
 either have or do not have hash set hits.

 @param eventSourcesHaveHashSetHits Whether or not the files
                                    associated with the events have or
                                    do not have hash set hits.]]>
      </doc>
    </constructor>
    <method name="setEventSourcesHaveHashSetHits"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventSourcesHaveHashSetHits" type="boolean"/>
      <doc>
      <![CDATA[Sets whether or not the files associated with the events have or do
 not have hash set hits

 @param eventSourcesHaveHashSetHits True or false.]]>
      </doc>
    </method>
    <method name="getEventSourcesHaveHashSetHits" return="boolean"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Indicates whether or not the files associated with the events have or
 do not have hash set hits

 @return True or false.]]>
      </doc>
    </method>
    <method name="getDisplayName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="copyOf" return="org.sleuthkit.datamodel.TimelineFilter.HashHitsFilter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="obj" type="java.lang.Object"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[A timeline events filter used to query for events where the files that
 are the direct or indirect sources of the events either have or do not
 have hash set hits.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TimelineFilter.HashHitsFilter -->
  <!-- start class org.sleuthkit.datamodel.TimelineFilter.HideKnownFilter -->
  <class name="TimelineFilter.HideKnownFilter" extends="org.sleuthkit.datamodel.TimelineFilter"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <constructor name="HideKnownFilter"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getDisplayName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="copyOf" return="org.sleuthkit.datamodel.TimelineFilter.HideKnownFilter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="obj" type="java.lang.Object"/>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[A timeline events filter used to filter out events that have a direct or
 indirect event source that is a known file.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TimelineFilter.HideKnownFilter -->
  <!-- start class org.sleuthkit.datamodel.TimelineFilter.IntersectionFilter -->
  <class name="TimelineFilter.IntersectionFilter" extends="org.sleuthkit.datamodel.TimelineFilter.CompoundFilter&lt;SubFilterType&gt;"
    abstract="false"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="IntersectionFilter" type="java.util.List&lt;SubFilterType&gt;"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructs timeline events filter that ANDs together a collection of
 timeline events filters.

 @param subFilters The collection of filters to be AND'ed together.]]>
      </doc>
    </constructor>
    <method name="copyOf" return="org.sleuthkit.datamodel.TimelineFilter.IntersectionFilter&lt;SubFilterType&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDisplayName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[A timeline events filter that ANDs together a collection of timeline
 event filters.

 @param <SubFilterType> The type of the filters to be AND'ed together.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TimelineFilter.IntersectionFilter -->
  <!-- start class org.sleuthkit.datamodel.TimelineFilter.InverseFileTypeFilter -->
  <class name="TimelineFilter.InverseFileTypeFilter" extends="org.sleuthkit.datamodel.TimelineFilter.FileTypeFilter"
    abstract="false"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="InverseFileTypeFilter" type="java.lang.String, java.util.Collection&lt;java.lang.String&gt;"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="copyOf" return="org.sleuthkit.datamodel.TimelineFilter.InverseFileTypeFilter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[A timeline events filter used to query for events with direct or indirect
 event sources that are files that do not have a given set of media types.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TimelineFilter.InverseFileTypeFilter -->
  <!-- start class org.sleuthkit.datamodel.TimelineFilter.RootFilter -->
  <class name="TimelineFilter.RootFilter" extends="org.sleuthkit.datamodel.TimelineFilter.IntersectionFilter&lt;org.sleuthkit.datamodel.TimelineFilter&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <constructor name="RootFilter" type="org.sleuthkit.datamodel.TimelineFilter.HideKnownFilter, org.sleuthkit.datamodel.TimelineFilter.TagsFilter, org.sleuthkit.datamodel.TimelineFilter.HashHitsFilter, org.sleuthkit.datamodel.TimelineFilter.TextFilter, org.sleuthkit.datamodel.TimelineFilter.EventTypeFilter, org.sleuthkit.datamodel.TimelineFilter.DataSourcesFilter, org.sleuthkit.datamodel.TimelineFilter.FileTypesFilter, java.util.Collection&lt;org.sleuthkit.datamodel.TimelineFilter&gt;"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructs a timeline events filter that ANDs together instances of a
 variety of event filter types to create what is in effect a "tree" of
 filters.

 @param knownFilesFilter           A filter that excludes events with
                                   knwon file event sources.
 @param tagsFilter                 A filter that exludes or includes
                                   events with tagged event sources.
 @param hashSetHitsFilter          A filter that excludes or includes
                                   events with event sources that have
                                   hash set hits.
 @param descriptionSubstringFilter A filter that requires a substring
                                   to be present in the event
                                   description.
 @param eventTypesFilter           A filter that accepts events of
                                   specified events types.
 @param dataSourcesFilter          A filter that accepts events
                                   associated with a specified subset
                                   of data sources.
 @param fileTypesFilter            A filter that includes or excludes
                                   events with source files of
                                   particular media types.
 @param additionalFilters          Additional filters.]]>
      </doc>
    </constructor>
    <method name="getDataSourcesFilter" return="org.sleuthkit.datamodel.TimelineFilter.DataSourcesFilter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the data sources filter of this filter.

 @return The filter.]]>
      </doc>
    </method>
    <method name="getTagsFilter" return="org.sleuthkit.datamodel.TimelineFilter.TagsFilter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the tagged events sources filter of this filter.

 @return The filter.]]>
      </doc>
    </method>
    <method name="getHashHitsFilter" return="org.sleuthkit.datamodel.TimelineFilter.HashHitsFilter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the source file hash set hits filter of this filter.

 @return The filter.]]>
      </doc>
    </method>
    <method name="getEventTypeFilter" return="org.sleuthkit.datamodel.TimelineFilter.EventTypeFilter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the event types filter of this filter.

 @return The filter.]]>
      </doc>
    </method>
    <method name="getKnownFilter" return="org.sleuthkit.datamodel.TimelineFilter.HideKnownFilter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the exclude known source files filter of this filter.

 @return The filter.]]>
      </doc>
    </method>
    <method name="getTextFilter" return="org.sleuthkit.datamodel.TimelineFilter.TextFilter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the description substring filter of this filter.

 @return The filter.]]>
      </doc>
    </method>
    <method name="getFileTypesFilter" return="org.sleuthkit.datamodel.TimelineFilter.FileTypesFilter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the source file types filter of this filter.

 @return The filter.]]>
      </doc>
    </method>
    <method name="copyOf" return="org.sleuthkit.datamodel.TimelineFilter.RootFilter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="obj" type="java.lang.Object"/>
    </method>
    <doc>
    <![CDATA[A timeline events filter that ANDs together instances of a variety of
 event filter types to create what is in effect a "tree" of filters.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TimelineFilter.RootFilter -->
  <!-- start class org.sleuthkit.datamodel.TimelineFilter.TagsFilter -->
  <class name="TimelineFilter.TagsFilter" extends="org.sleuthkit.datamodel.TimelineFilter"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <constructor name="TagsFilter"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructs a timeline events filter used to query for a events where
 the direct source (file or artifact) of the events has not been
 tagged.]]>
      </doc>
    </constructor>
    <constructor name="TagsFilter" type="boolean"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructs a timeline events filter used to query for events where
 the direct source (file or artifact) of the events has either been
 tagged or not tagged.

 @param eventSourcesAreTagged Whether the direct sources of the events
                              need to be tagged or not tagged to be
                              accepted by this filter.]]>
      </doc>
    </constructor>
    <method name="setEventSourcesAreTagged"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventSourcesAreTagged" type="boolean"/>
      <doc>
      <![CDATA[Sets whether the direct sources of the events have to be tagged or
 not tagged to be accepted by this filter.

 @param eventSourcesAreTagged Whether the direct sources of the events
                              have to be tagged or not tagged to be
                              accepted by this filter.]]>
      </doc>
    </method>
    <method name="getEventSourceAreTagged" return="boolean"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Indicates whether the direct sources of the events have to be tagged
 or not tagged.

 @return True or false.]]>
      </doc>
    </method>
    <method name="getDisplayName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="copyOf" return="org.sleuthkit.datamodel.TimelineFilter.TagsFilter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="obj" type="java.lang.Object"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[A timeline events filter used to query for events where the direct source
 (file or artifact) of the events has either been tagged or not tagged.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TimelineFilter.TagsFilter -->
  <!-- start class org.sleuthkit.datamodel.TimelineFilter.TextFilter -->
  <class name="TimelineFilter.TextFilter" extends="org.sleuthkit.datamodel.TimelineFilter"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <constructor name="TextFilter"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructs a timeline events filter used to query for events that
 have the empty string as a substring in their short, medium, or full
 descriptions.]]>
      </doc>
    </constructor>
    <constructor name="TextFilter" type="java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructs a timeline events filter used to query for events that
 have a given substring in their short, medium, or full descriptions.

 @param descriptionSubstring The substring that must be present in one
                             or more of the descriptions of each event
                             that passes the filter.]]>
      </doc>
    </constructor>
    <method name="setDescriptionSubstring"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="descriptionSubstring" type="java.lang.String"/>
      <doc>
      <![CDATA[Sets the substring that must be present in one or more of the
 descriptions of each event that passes the filter.

 @param descriptionSubstring The substring.]]>
      </doc>
    </method>
    <method name="getDisplayName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getDescriptionSubstring" return="java.lang.String"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the substring that must be present in one or more of the
 descriptions of each event that passes the filter.

 @return The required substring.]]>
      </doc>
    </method>
    <method name="copyOf" return="org.sleuthkit.datamodel.TimelineFilter.TextFilter"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="obj" type="java.lang.Object"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[A timeline events filter used to query for events that have a particular
 substring in their short, medium, or full descriptions.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TimelineFilter.TextFilter -->
  <!-- start class org.sleuthkit.datamodel.TimelineFilter.UnionFilter -->
  <class name="TimelineFilter.UnionFilter" extends="org.sleuthkit.datamodel.TimelineFilter.CompoundFilter&lt;SubFilterType&gt;"
    abstract="true"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="addSubFilter"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="subfilter" type="SubFilterType extends org.sleuthkit.datamodel.TimelineFilter"/>
    </method>
    <doc>
    <![CDATA[A timeline events filter that ORs together a collection of timeline
 events filters.

 @param <SubFilterType> The type of the filters to be OR'ed together.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TimelineFilter.UnionFilter -->
  <!-- start class org.sleuthkit.datamodel.TimelineLevelOfDetail -->
  <class name="TimelineLevelOfDetail" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.TimelineLevelOfDetail&gt;"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.TimelineLevelOfDetail[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.TimelineLevelOfDetail"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getDisplayName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the display name of this level of detail.

 @return The display name.]]>
      </doc>
    </method>
    <method name="moreDetailed" return="org.sleuthkit.datamodel.TimelineLevelOfDetail"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the next higher level of detail relative to this level of detail.

 @return The next higher level of detail, may be null.]]>
      </doc>
    </method>
    <method name="lessDetailed" return="org.sleuthkit.datamodel.TimelineLevelOfDetail"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets the next lower level of detail relative to this level of detail.

 @return The next lower level of detail, may be null.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[An enumeration of the levels of detail of various aspects of timeline data.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TimelineLevelOfDetail -->
  <!-- start class org.sleuthkit.datamodel.TimelineManager -->
  <class name="TimelineManager" extends="java.lang.Object"
    abstract="false"
    static="false" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="getSpanningInterval" return="Interval"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventIDs" type="java.util.Collection&lt;java.lang.Long&gt;"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the smallest possible time interval that spans a collection of
 timeline events.

 @param eventIDs The event IDs of the events for which to obtain the
                 spanning interval.

 @return The minimal spanning interval, may be null.

 @throws TskCoreException If there is an error querying the case database.]]>
      </doc>
    </method>
    <method name="getSpanningInterval" return="Interval"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="timeRange" type="Interval"/>
      <param name="filter" type="org.sleuthkit.datamodel.TimelineFilter.RootFilter"/>
      <param name="timeZone" type="DateTimeZone"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the smallest possible time interval that spans a collection of
 timeline events.

 @param timeRange A time range that the events must be within.
 @param filter    A timeline events filter that the events must pass.
 @param timeZone  The time zone for the returned time interval.

 @return The minimal spanning interval, may be null.

 @throws TskCoreException If there is an error querying the case database.]]>
      </doc>
    </method>
    <method name="getEventById" return="org.sleuthkit.datamodel.TimelineEvent"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventID" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the timeline event with a given event ID.

 @param eventID An event ID.

 @return The timeline event, may be null.

 @throws TskCoreException If there is an error querying the case database.]]>
      </doc>
    </method>
    <method name="getEventIDs" return="java.util.List&lt;java.lang.Long&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="timeRange" type="Interval"/>
      <param name="filter" type="org.sleuthkit.datamodel.TimelineFilter.RootFilter"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the event IDs of the timeline events within a given time range that
 pass a given timeline events filter.

 @param timeRange The time range that the events must be within.
 @param filter    The timeline events filter that the events must pass.

 @return A list of event IDs ordered by event time.

 @throws TskCoreException If there is an error querying the case database.]]>
      </doc>
    </method>
    <method name="getMaxEventTime" return="java.lang.Long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the maximum timeline event time in the case database.

 @return The maximum timeline event time in seconds since the UNIX epoch,
         or -1 if there are no timeline events in the case database.

 @throws TskCoreException If there is an error querying the case database.]]>
      </doc>
    </method>
    <method name="getMinEventTime" return="java.lang.Long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the minimum timeline event time in the case database.

 @return The minimum timeline event time in seconds since the UNIX epoch,
         or -1 if there are no timeline events in the case database.

 @throws TskCoreException If there is an error querying the case database.]]>
      </doc>
    </method>
    <method name="getEventType" return="java.util.Optional&lt;org.sleuthkit.datamodel.TimelineEventType&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="eventTypeID" type="long"/>
      <doc>
      <![CDATA[Gets the timeline event type with a given event type ID.

 @param eventTypeID An event type ID.

 @return The timeline event type in an Optional object, may be empty if
         the event type is not found.]]>
      </doc>
    </method>
    <method name="getEventTypes" return="&lt;any&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Gets all of the timeline event types in the case database.

 @return A list of timeline event types.]]>
      </doc>
    </method>
    <method name="getEventIDsForArtifact" return="java.util.List&lt;java.lang.Long&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifact" type="org.sleuthkit.datamodel.BlackboardArtifact"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets a list of event IDs for the timeline events that have a given
 artifact as the event source.

 @param artifact An artifact.

 @return The list of event IDs.

 @throws TskCoreException If there is an error querying the case database.]]>
      </doc>
    </method>
    <method name="getEventIDsForContent" return="java.util.Set&lt;java.lang.Long&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="content" type="org.sleuthkit.datamodel.Content"/>
      <param name="includeDerivedArtifacts" type="boolean"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets a list of event IDs for the timeline events that have a given
 content as the event source.

 @param content                 The content.
 @param includeDerivedArtifacts If true, also get event IDs for events
                                where the event source is an artifact that
                                has the given content as its source.

 @return The list of event IDs.

 @throws TskCoreException If there is an error querying the case database.]]>
      </doc>
    </method>
    <method name="updateEventsForContentTagAdded" return="java.util.Set&lt;java.lang.Long&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="content" type="org.sleuthkit.datamodel.Content"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Finds all of the timeline events directly associated with a given content
 and marks them as having an event source that is tagged. This does not
 include timeline events where the event source is an artifact, even if
 the artifact source is the tagged content.

 @param content The content.

 @return The event IDs of the events that were marked as having a tagged
         event source.

 @throws TskCoreException If there is an error updating the case database.

 WARNING: THIS IS A BETA VERSION OF THIS METHOD, SUBJECT TO CHANGE AT ANY
 TIME.]]>
      </doc>
    </method>
    <method name="updateEventsForContentTagDeleted" return="java.util.Set&lt;java.lang.Long&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="content" type="org.sleuthkit.datamodel.Content"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Finds all of the timeline events directly associated with a given content
 and marks them as not having an event source that is tagged, if and only
 if there are no other tags on the content. The inspection of events does
 not include events where the event source is an artifact, even if the
 artifact source is the content from which trhe tag was removed.

 @param content The content.

 @return The event IDs of the events that were marked as not having a
         tagged event source.

 @throws TskCoreException If there is an error updating the case database.

 WARNING: THIS IS A BETA VERSION OF THIS METHOD, SUBJECT TO CHANGE AT ANY
 TIME.]]>
      </doc>
    </method>
    <method name="updateEventsForArtifactTagAdded" return="java.util.Set&lt;java.lang.Long&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifact" type="org.sleuthkit.datamodel.BlackboardArtifact"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Finds all of the timeline events directly associated with a given
 artifact and marks them as having an event source that is tagged.

 @param artifact The artifact.

 @return The event IDs of the events that were marked as having a tagged
         event source.

 @throws TskCoreException If there is an error updating the case database.]]>
      </doc>
    </method>
    <method name="updateEventsForArtifactTagDeleted" return="java.util.Set&lt;java.lang.Long&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="artifact" type="org.sleuthkit.datamodel.BlackboardArtifact"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Finds all of the timeline events directly associated with a given
 artifact and marks them as not having an event source that is tagged, if
 and only if there are no other tags on the artifact.

 @param artifact The artifact.

 @return The event IDs of the events that were marked as not having a
         tagged event source.

 @throws TskCoreException If there is an error updating the case database.]]>
      </doc>
    </method>
    <method name="updateEventsForHashSetHit" return="java.util.Set&lt;java.lang.Long&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="content" type="org.sleuthkit.datamodel.Content"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Finds all of the timeline events associated directly or indirectly with a
 given content and marks them as having an event source that has a hash
 set hit. This includes both the events that have the content as their
 event source and the events for which the content is the source content
 for the source artifact of the event.

 @param content The content.

 @return The event IDs of the events that were marked as having an event
         source with a hash set hit.

 @throws TskCoreException If there is an error updating the case database.]]>
      </doc>
    </method>
    <method name="countEventsByType" return="java.util.Map&lt;org.sleuthkit.datamodel.TimelineEventType, java.lang.Long&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="startTime" type="java.lang.Long"/>
      <param name="endTime" type="java.lang.Long"/>
      <param name="filter" type="org.sleuthkit.datamodel.TimelineFilter.RootFilter"/>
      <param name="typeHierachyLevel" type="org.sleuthkit.datamodel.TimelineEventType.HierarchyLevel"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Counts the timeline events events that satisfy the given conditions.

 @param startTime         Events that occurred before this time are not
                          counted (units: seconds from UNIX epoch)
 @param endTime           Events that occurred at or after this time are
                          not counted (seconds from unix epoch)
 @param filter            Events that fall within the specified time range
                          are only ocunted if they pass this filter.
 @param typeHierachyLevel Events that fall within the specified time range
                          and pass the specified filter asre only counted
                          if their types are at the specified level of the
                          event type hierarchy.

 @return The event counts for each event type at the specified level in
         the event types hierarchy.

 @throws TskCoreException If there is an error querying the case database.]]>
      </doc>
    </method>
    <method name="getEvents" return="java.util.List&lt;org.sleuthkit.datamodel.TimelineEvent&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="timeRange" type="Interval"/>
      <param name="filter" type="org.sleuthkit.datamodel.TimelineFilter.RootFilter"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the timeline events that fall within a given time interval and
 satisfy a given event filter.

 @param timeRange The time level.
 @param filter    The event filter.

 @return	The list of events that fall within the specified interval and
         poass the specified filter.

 @throws TskCoreException If there is an error querying the case database.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Provides access to the timeline data in a case database.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TimelineManager -->
  <!-- start class org.sleuthkit.datamodel.TimelineManager.TimelineEventAddedEvent -->
  <class name="TimelineManager.TimelineEventAddedEvent" extends="java.lang.Object"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="getAddedEvent" return="org.sleuthkit.datamodel.TimelineEvent"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[Event fired by SleuthkitCase to indicate that a event has been added to
 the tsk_events table.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TimelineManager.TimelineEventAddedEvent -->
  <!-- start class org.sleuthkit.datamodel.TimeUtilities -->
  <class name="TimeUtilities" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="TimeUtilities"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="epochToTime" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="epoch" type="long"/>
      <doc>
      <![CDATA[Return the epoch into string in ISO 8601 dateTime format

 @param epoch time in seconds

 @return formatted date time string as "yyyy-MM-dd HH:mm:ss"]]>
      </doc>
    </method>
    <method name="epochToTime" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="epoch" type="long"/>
      <param name="tzone" type="java.util.TimeZone"/>
      <doc>
      <![CDATA[Return the epoch into string in ISO 8601 dateTime format, 
 in the given timezone

 @param epoch time in seconds
 @param tzone time zone

 @return formatted date time string as "yyyy-MM-dd HH:mm:ss"]]>
      </doc>
    </method>
    <method name="timeToEpoch" return="long"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="time" type="java.lang.String"/>
      <doc>
      <![CDATA[Convert from ISO 8601 formatted date time string to epoch time in seconds

 @param time formatted date time string as "yyyy-MM-dd HH:mm:ss"

 @return epoch time in seconds]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Time related utility methods]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TimeUtilities -->
  <!-- start interface org.sleuthkit.datamodel.Transaction -->
  <interface name="Transaction"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="rollback"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[rollback whatever changes this transaction represents]]>
      </doc>
    </method>
    <method name="isCommitted" return="java.lang.Boolean"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[check whether this transaction has already been committed

 @return whether this transaction has already been committed]]>
      </doc>
    </method>
    <method name="commit"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[commit this transaction to the database]]>
      </doc>
    </method>
    <method name="close"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[close this Transaction so it cannot be committed or rolledback. A closed
 Transaction no longer has a reference to a db Connection and methods
 invoked on a closed Transaction have no effect.]]>
      </doc>
    </method>
    <method name="isClosed" return="java.lang.Boolean"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[@return true if this transaction is closed]]>
      </doc>
    </method>
    <doc>
    <![CDATA[interface to encapsulate database transactions]]>
    </doc>
  </interface>
  <!-- end interface org.sleuthkit.datamodel.Transaction -->
  <!-- start class org.sleuthkit.datamodel.TskCoreException -->
  <class name="TskCoreException" extends="org.sleuthkit.datamodel.TskException"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="TskCoreException"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Default constructor when error message is not available]]>
      </doc>
    </constructor>
    <constructor name="TskCoreException" type="java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Create exception containing the error message

 @param msg the message]]>
      </doc>
    </constructor>
    <constructor name="TskCoreException" type="java.lang.String, java.lang.Exception"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Create exception containing the error message and cause exception

 @param msg the message
 @param ex  cause exception]]>
      </doc>
    </constructor>
    <doc>
    <![CDATA[Core exception that is thrown from Sleuthkit classes. Indicates a critical
 error within TSK]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TskCoreException -->
  <!-- start class org.sleuthkit.datamodel.TskData -->
  <class name="TskData" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="TskData"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <doc>
    <![CDATA[Contains enums for the integer values stored in the database and returned by
 the various data model objects.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TskData -->
  <!-- start class org.sleuthkit.datamodel.TskData.DbType -->
  <class name="TskData.DbType" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.TskData.DbType&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.TskData.DbType[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.TskData.DbType"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getValue" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[DbType is the enum covering database type. It tells you what underlying
 database you can use in Autopsy and TSK.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TskData.DbType -->
  <!-- start class org.sleuthkit.datamodel.TskData.EncodingType -->
  <class name="TskData.EncodingType" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.TskData.EncodingType&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.TskData.EncodingType[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.TskData.EncodingType"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getType" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.TskData.EncodingType"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="type" type="int"/>
    </method>
    <doc>
    <![CDATA[Encoding type records whether locally stored files have been encoded
 or not, and the method used to do so. This is the encoding_type column
 in the tsk_files_path table.
 Files are encoded using EncodedFileOutputStream and are saved to the
 database as derived files with the appropriate encoding type argument.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TskData.EncodingType -->
  <!-- start class org.sleuthkit.datamodel.TskData.FileKnown -->
  <class name="TskData.FileKnown" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.TskData.FileKnown&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.TskData.FileKnown[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.TskData.FileKnown"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.TskData.FileKnown"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="known" type="byte"/>
      <doc>
      <![CDATA[Convert file known type byte value to the enum type

 @param known long value to convert

 @return the enum type]]>
      </doc>
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getFileKnownValue" return="byte"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get byte value of the file known status

 @return the long value of the file known status]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Identifies if a file was in a hash database or not. This is the known
 column in the tsk_files table.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TskData.FileKnown -->
  <!-- start class org.sleuthkit.datamodel.TskData.ObjectType -->
  <class name="TskData.ObjectType" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.TskData.ObjectType&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.TskData.ObjectType[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.TskData.ObjectType"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getObjectType" return="short"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get short value of the object type

 @return the long value of the object type]]>
      </doc>
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.TskData.ObjectType"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="objectType" type="short"/>
      <doc>
      <![CDATA[Convert object type short value to the enum type

 @param objectType long value to convert

 @return the enum type]]>
      </doc>
    </method>
    <doc>
    <![CDATA[High-level type of an object from the database. This is the type column
 in the tsk_objects table.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TskData.ObjectType -->
  <!-- start class org.sleuthkit.datamodel.TskData.TSK_DB_FILES_TYPE_ENUM -->
  <class name="TskData.TSK_DB_FILES_TYPE_ENUM" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.TskData.TSK_DB_FILES_TYPE_ENUM&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.TskData.TSK_DB_FILES_TYPE_ENUM[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.TskData.TSK_DB_FILES_TYPE_ENUM"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.TskData.TSK_DB_FILES_TYPE_ENUM"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="fileType" type="short"/>
      <doc>
      <![CDATA[Convert db files type short value to the enum type

 @param fileType long value to convert

 @return the enum type]]>
      </doc>
    </method>
    <method name="getFileType" return="short"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get short value of the file type

 @return the long value of the file type]]>
      </doc>
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[The type of file in a database, such as file system versus local file.
 This is the type field in the tsk_files table.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TskData.TSK_DB_FILES_TYPE_ENUM -->
  <!-- start class org.sleuthkit.datamodel.TskData.TSK_FS_ATTR_TYPE_ENUM -->
  <class name="TskData.TSK_FS_ATTR_TYPE_ENUM" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.TskData.TSK_FS_ATTR_TYPE_ENUM&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.TskData.TSK_FS_ATTR_TYPE_ENUM[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.TskData.TSK_FS_ATTR_TYPE_ENUM"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getValue" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.TskData.TSK_FS_ATTR_TYPE_ENUM"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="val" type="int"/>
    </method>
    <doc>
    <![CDATA[Type of data that is stored in the attribute for a file system file. This
 is the attr_type column in the tsk_files table.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TskData.TSK_FS_ATTR_TYPE_ENUM -->
  <!-- start class org.sleuthkit.datamodel.TskData.TSK_FS_META_FLAG_ENUM -->
  <class name="TskData.TSK_FS_META_FLAG_ENUM" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.TskData.TSK_FS_META_FLAG_ENUM&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.TskData.TSK_FS_META_FLAG_ENUM[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.TskData.TSK_FS_META_FLAG_ENUM"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getValue" return="short"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get meta flags short value

 @return the long value of meta flags]]>
      </doc>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get string label of the metal flags

 @return string meta flags label]]>
      </doc>
    </method>
    <method name="valuesOf" return="java.util.Set&lt;org.sleuthkit.datamodel.TskData.TSK_FS_META_FLAG_ENUM&gt;"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="metaFlags" type="short"/>
      <doc>
      <![CDATA[Returns all the enum elements that match the flags in metaFlag

 @param metaFlags Flags to convert to Enums.

 @return matching TSK_FS_META_FLAG_ENUM elements]]>
      </doc>
    </method>
    <method name="toInt" return="short"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="metaFlags" type="java.util.Set&lt;org.sleuthkit.datamodel.TskData.TSK_FS_META_FLAG_ENUM&gt;"/>
    </method>
    <doc>
    <![CDATA[The allocated status of the file system file, as reported in the metadata
 structure of the file system. This is the meta_flags column in the
 tsk_files table.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TskData.TSK_FS_META_FLAG_ENUM -->
  <!-- start class org.sleuthkit.datamodel.TskData.TSK_FS_META_MODE_ENUM -->
  <class name="TskData.TSK_FS_META_MODE_ENUM" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.TskData.TSK_FS_META_MODE_ENUM&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.TskData.TSK_FS_META_MODE_ENUM[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.TskData.TSK_FS_META_MODE_ENUM"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getMode" return="short"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get short value of the meta mode

 @return the long value of the meta mode]]>
      </doc>
    </method>
    <method name="valuesOf" return="java.util.Set&lt;org.sleuthkit.datamodel.TskData.TSK_FS_META_MODE_ENUM&gt;"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="modes" type="short"/>
      <doc>
      <![CDATA[Returns all the TSK_FS_META_MODE_ENUM enum elements that match the
 given modes

 @param modes

 @return matching TSK_FS_META_MODE_ENUM elements]]>
      </doc>
    </method>
    <method name="toInt" return="short"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="modes" type="java.util.Set&lt;org.sleuthkit.datamodel.TskData.TSK_FS_META_MODE_ENUM&gt;"/>
      <doc>
      <![CDATA[@param modes the set of modes to convert

 @return the short int representing the given set of modes]]>
      </doc>
    </method>
    <doc>
    <![CDATA[The permissions of a file system file. This is the mode column in the
 tsk_files table.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TskData.TSK_FS_META_MODE_ENUM -->
  <!-- start class org.sleuthkit.datamodel.TskData.TSK_FS_META_TYPE_ENUM -->
  <class name="TskData.TSK_FS_META_TYPE_ENUM" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.TskData.TSK_FS_META_TYPE_ENUM&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.TskData.TSK_FS_META_TYPE_ENUM[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.TskData.TSK_FS_META_TYPE_ENUM"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getValue" return="short"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get meta type short value

 @return the meta type long value]]>
      </doc>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.TskData.TSK_FS_META_TYPE_ENUM"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="metaType" type="short"/>
    </method>
    <doc>
    <![CDATA[The type of the file system file, as reported in the metadata structure
 of the file system. This is the meta_type column in the tsk_files table.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TskData.TSK_FS_META_TYPE_ENUM -->
  <!-- start class org.sleuthkit.datamodel.TskData.TSK_FS_NAME_FLAG_ENUM -->
  <class name="TskData.TSK_FS_NAME_FLAG_ENUM" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.TskData.TSK_FS_NAME_FLAG_ENUM&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.TskData.TSK_FS_NAME_FLAG_ENUM[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.TskData.TSK_FS_NAME_FLAG_ENUM"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getValue" return="short"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get short value of the flag

 @return the long flag value]]>
      </doc>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.TskData.TSK_FS_NAME_FLAG_ENUM"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="dirFlag" type="int"/>
      <doc>
      <![CDATA[Convert dirFlag int value to the enum type

 @param dirFlag int value to convert

 @return the enum type corresponding to dirFlag]]>
      </doc>
    </method>
    <doc>
    <![CDATA[The allocated status of a file system file, as reported in the name
 structure of the file system. This is the dir_flags column in the
 tsk_files table.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TskData.TSK_FS_NAME_FLAG_ENUM -->
  <!-- start class org.sleuthkit.datamodel.TskData.TSK_FS_NAME_TYPE_ENUM -->
  <class name="TskData.TSK_FS_NAME_TYPE_ENUM" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.TskData.TSK_FS_NAME_TYPE_ENUM&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.TskData.TSK_FS_NAME_TYPE_ENUM[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.TskData.TSK_FS_NAME_TYPE_ENUM"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getValue" return="short"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get dir type

 @return the dir type long value]]>
      </doc>
    </method>
    <method name="getLabel" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the label string

 @return the label string value]]>
      </doc>
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.TskData.TSK_FS_NAME_TYPE_ENUM"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="dir_type" type="short"/>
      <doc>
      <![CDATA[Convert to the enum type from the short value

 @param dir_type enum type value to convert

 @return converted long value]]>
      </doc>
    </method>
    <doc>
    <![CDATA[The type of the file system file, as reported in the name structure of
 the file system. This is the dir_type column in the tsk_files table.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TskData.TSK_FS_NAME_TYPE_ENUM -->
  <!-- start class org.sleuthkit.datamodel.TskData.TSK_FS_TYPE_ENUM -->
  <class name="TskData.TSK_FS_TYPE_ENUM" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.TskData.TSK_FS_TYPE_ENUM&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.TskData.TSK_FS_TYPE_ENUM[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.TskData.TSK_FS_TYPE_ENUM"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getValue" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[get the value for the enum type

 @return int value for the enum type]]>
      </doc>
    </method>
    <method name="getDisplayName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get display name of the enum
 
 @return the displayName]]>
      </doc>
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.TskData.TSK_FS_TYPE_ENUM"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="fsTypeValue" type="int"/>
      <doc>
      <![CDATA[Convert fs type int value to the enum type - get the first matching
 enum type

 @param fsTypeValue int value to convert

 @return the enum type - first enum type matching the fsTypeValue]]>
      </doc>
    </method>
    <doc>
    <![CDATA[The type of the file system. This is the fs_type column in the
 tsk_fs_info table.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TskData.TSK_FS_TYPE_ENUM -->
  <!-- start class org.sleuthkit.datamodel.TskData.TSK_IMG_TYPE_ENUM -->
  <class name="TskData.TSK_IMG_TYPE_ENUM" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.TskData.TSK_IMG_TYPE_ENUM&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.TskData.TSK_IMG_TYPE_ENUM[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.TskData.TSK_IMG_TYPE_ENUM"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.TskData.TSK_IMG_TYPE_ENUM"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="imgType" type="long"/>
    </method>
    <method name="getValue" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get long value of the image type

 @return the long value of the image type]]>
      </doc>
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the name of the image type

 @return]]>
      </doc>
    </method>
    <doc>
    <![CDATA[The type of the disk image. This is the types column in the
 tsk_images_info table.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TskData.TSK_IMG_TYPE_ENUM -->
  <!-- start class org.sleuthkit.datamodel.TskData.TSK_POOL_TYPE_ENUM -->
  <class name="TskData.TSK_POOL_TYPE_ENUM" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.TskData.TSK_POOL_TYPE_ENUM&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.TskData.TSK_POOL_TYPE_ENUM[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.TskData.TSK_POOL_TYPE_ENUM"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.TskData.TSK_POOL_TYPE_ENUM"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="poolType" type="long"/>
      <doc>
      <![CDATA[Convert db pool type short value to the enum type

 @param poolType long value to convert

 @return the enum type]]>
      </doc>
    </method>
    <method name="getValue" return="short"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get short value of the file type

 @return the long value of the file type]]>
      </doc>
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <doc>
    <![CDATA[The type of pool in a database.
 This is the pool_type field in the tsk_pool_info table.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TskData.TSK_POOL_TYPE_ENUM -->
  <!-- start class org.sleuthkit.datamodel.TskData.TSK_VS_PART_FLAG_ENUM -->
  <class name="TskData.TSK_VS_PART_FLAG_ENUM" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.TskData.TSK_VS_PART_FLAG_ENUM&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.TskData.TSK_VS_PART_FLAG_ENUM[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.TskData.TSK_VS_PART_FLAG_ENUM"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="getVsFlag" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get long value of the vs flag

 @return the long value of the flag]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Flags for a partition in the disk image. This is the flags column in the
 tsk_vs_parts table.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TskData.TSK_VS_PART_FLAG_ENUM -->
  <!-- start class org.sleuthkit.datamodel.TskData.TSK_VS_TYPE_ENUM -->
  <class name="TskData.TSK_VS_TYPE_ENUM" extends="java.lang.Enum&lt;org.sleuthkit.datamodel.TskData.TSK_VS_TYPE_ENUM&gt;"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="values" return="org.sleuthkit.datamodel.TskData.TSK_VS_TYPE_ENUM[]"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.TskData.TSK_VS_TYPE_ENUM"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="name" type="java.lang.String"/>
    </method>
    <method name="valueOf" return="org.sleuthkit.datamodel.TskData.TSK_VS_TYPE_ENUM"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="vsType" type="long"/>
    </method>
    <method name="getVsType" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get long value of the vs type

 @return the long value of the vs type]]>
      </doc>
    </method>
    <method name="getName" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the name of the volume system type.

 @return]]>
      </doc>
    </method>
    <doc>
    <![CDATA[The type of the partition in the partition table. This is the flags
 column in the tsk_vs_parts table.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TskData.TSK_VS_TYPE_ENUM -->
  <!-- start class org.sleuthkit.datamodel.TskDataException -->
  <class name="TskDataException" extends="org.sleuthkit.datamodel.TskException"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="TskDataException"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Default constructor when error message is not available]]>
      </doc>
    </constructor>
    <constructor name="TskDataException" type="java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Create exception containing the error message

 @param msg the message]]>
      </doc>
    </constructor>
    <constructor name="TskDataException" type="java.lang.String, java.lang.Exception"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Create exception containing the error message and cause exception

 @param msg the message
 @param ex  cause exception]]>
      </doc>
    </constructor>
    <doc>
    <![CDATA[Data exception that is thrown from Sleuthkit classes.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TskDataException -->
  <!-- start interface org.sleuthkit.datamodel.TskDataSourceEvent -->
  <interface name="TskDataSourceEvent"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getDataSourceId" return="java.util.Optional&lt;java.lang.Long&gt;"
      abstract="true" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns the object id of the data source that the event pertains to.

 All data in an event should pertain to a single data source.

 @return Data source object id.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Defines an interface implemented by data source specific events published by
 Sleuthkit. These events are applicable to single data source.]]>
    </doc>
  </interface>
  <!-- end interface org.sleuthkit.datamodel.TskDataSourceEvent -->
  <!-- start interface org.sleuthkit.datamodel.TskEvent -->
  <interface name="TskEvent"    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <doc>
    <![CDATA[A marker interface for events published by SleuthKit.]]>
    </doc>
  </interface>
  <!-- end interface org.sleuthkit.datamodel.TskEvent -->
  <!-- start class org.sleuthkit.datamodel.TskEvent.AnalysisResultsDeletedTskEvent -->
  <class name="TskEvent.AnalysisResultsDeletedTskEvent" extends="java.lang.Object"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="getObjectIds" return="java.util.List&lt;java.lang.Long&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns a list of deleted results.

 @return List of AnalysisResult.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Event to indicate that analysis results were deleted.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TskEvent.AnalysisResultsDeletedTskEvent -->
  <!-- start class org.sleuthkit.datamodel.TskEvent.HostsAddedTskEvent -->
  <class name="TskEvent.HostsAddedTskEvent" extends="org.sleuthkit.datamodel.TskEvent.HostTskEvent"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <doc>
    <![CDATA[Event fired when hosts are created.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TskEvent.HostsAddedTskEvent -->
  <!-- start class org.sleuthkit.datamodel.TskEvent.HostsChangedTskEvent -->
  <class name="TskEvent.HostsChangedTskEvent" extends="org.sleuthkit.datamodel.TskEvent.HostTskEvent"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <doc>
    <![CDATA[Event fired when hosts are updated.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TskEvent.HostsChangedTskEvent -->
  <!-- start class org.sleuthkit.datamodel.TskEvent.HostsDeletedTskEvent -->
  <class name="TskEvent.HostsDeletedTskEvent" extends="org.sleuthkit.datamodel.TskEvent.HostTskEvent"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <doc>
    <![CDATA[Event fired when hosts are deleted.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TskEvent.HostsDeletedTskEvent -->
  <!-- start class org.sleuthkit.datamodel.TskEvent.HostTskEvent -->
  <class name="TskEvent.HostTskEvent" extends="java.lang.Object"
    abstract="false"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getHosts" return="java.util.List&lt;org.sleuthkit.datamodel.Host&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns the hosts affected in the event.

 @return The hosts affected in the event.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Base event for all host events]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TskEvent.HostTskEvent -->
  <!-- start class org.sleuthkit.datamodel.TskEvent.OsAccountsAddedTskEvent -->
  <class name="TskEvent.OsAccountsAddedTskEvent" extends="java.lang.Object"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="getOsAcounts" return="java.util.List&lt;org.sleuthkit.datamodel.OsAccount&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns a list of the added OsAccounts.

 @return List of OsAccounts.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Event fired by OsAccountManager to indicate that a new OsAccount was
 created.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TskEvent.OsAccountsAddedTskEvent -->
  <!-- start class org.sleuthkit.datamodel.TskEvent.OsAccountsChangedTskEvent -->
  <class name="TskEvent.OsAccountsChangedTskEvent" extends="java.lang.Object"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="getOsAcounts" return="java.util.List&lt;org.sleuthkit.datamodel.OsAccount&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns a list of the updated OsAccounts.

 @return List of OsAccounts.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Event fired by OsAccount Manager to indicate that an OsAccount was
 updated.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TskEvent.OsAccountsChangedTskEvent -->
  <!-- start class org.sleuthkit.datamodel.TskEvent.OsAccountsDeletedTskEvent -->
  <class name="TskEvent.OsAccountsDeletedTskEvent" extends="java.lang.Object"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <method name="getOsAcountObjectIds" return="java.util.List&lt;java.lang.Long&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns a list of the deleted OsAccounts.

 @return List of OsAccounts.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Event fired by OsAccount Manager to indicate that an OsAccount was
 deleted.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TskEvent.OsAccountsDeletedTskEvent -->
  <!-- start class org.sleuthkit.datamodel.TskEvent.PersonsAddedTskEvent -->
  <class name="TskEvent.PersonsAddedTskEvent" extends="org.sleuthkit.datamodel.TskEvent.PersonsTskEvent"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <doc>
    <![CDATA[Event fired when persons are created.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TskEvent.PersonsAddedTskEvent -->
  <!-- start class org.sleuthkit.datamodel.TskEvent.PersonsChangedTskEvent -->
  <class name="TskEvent.PersonsChangedTskEvent" extends="org.sleuthkit.datamodel.TskEvent.PersonsTskEvent"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <doc>
    <![CDATA[Event fired when persons are updated.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TskEvent.PersonsChangedTskEvent -->
  <!-- start class org.sleuthkit.datamodel.TskEvent.PersonsDeletedTskEvent -->
  <class name="TskEvent.PersonsDeletedTskEvent" extends="org.sleuthkit.datamodel.TskEvent.PersonsTskEvent"
    abstract="false"
    static="true" final="true" visibility="public"
    deprecated="not deprecated">
    <doc>
    <![CDATA[Event fired when persons are deleted.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TskEvent.PersonsDeletedTskEvent -->
  <!-- start class org.sleuthkit.datamodel.TskEvent.PersonsTskEvent -->
  <class name="TskEvent.PersonsTskEvent" extends="java.lang.Object"
    abstract="false"
    static="true" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getPersons" return="java.util.List&lt;org.sleuthkit.datamodel.Person&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Returns the persons affected in the event.

 @return The persons affected in the event.]]>
      </doc>
    </method>
    <doc>
    <![CDATA[Base event for all person events]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TskEvent.PersonsTskEvent -->
  <!-- start class org.sleuthkit.datamodel.TskException -->
  <class name="TskException" extends="java.lang.Exception"
    abstract="true"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="TskException" type="java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Create exception containing the error message

 @param msg the message]]>
      </doc>
    </constructor>
    <constructor name="TskException" type="java.lang.String, java.lang.Exception"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Create exception containing the error message and cause exception

 @param msg the message
 @param ex  cause exception]]>
      </doc>
    </constructor>
    <doc>
    <![CDATA[General parent exception that is thrown from Sleuthkit classes.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TskException -->
  <!-- start class org.sleuthkit.datamodel.TskFileRange -->
  <class name="TskFileRange" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="TskFileRange" type="long, long, long"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Create file range to map the database object

 @param byteStart byte start with respect to the image
 @param byteLen   length of the range in bytes
 @param sequence  sequence order of the range for the file]]>
      </doc>
    </constructor>
    <method name="getByteStart" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get start byte of the range, with respect to the image

 @return start bye of the range]]>
      </doc>
    </method>
    <method name="getByteLen" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get the byte length of the range

 @return length in bytes]]>
      </doc>
    </method>
    <method name="getSequence" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Get sequence of this range defining ordering of this range with respect
 to other ranges for the file

 @return sequence number of this range]]>
      </doc>
    </method>
    <doc>
    <![CDATA[An object representation of an entry in tsk_file_layout table Any file can
 have one or more file ranges defined to specify physical file layout. This is
 especially useful for non-fs "virtual" files created for the purpose of data
 analysis]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TskFileRange -->
  <!-- start class org.sleuthkit.datamodel.TskUnsupportedSchemaVersionException -->
  <class name="TskUnsupportedSchemaVersionException" extends="org.sleuthkit.datamodel.TskCoreException"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="TskUnsupportedSchemaVersionException"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="TskUnsupportedSchemaVersionException" type="java.lang.String"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <constructor name="TskUnsupportedSchemaVersionException" type="java.lang.String, java.lang.Exception"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <doc>
    <![CDATA[Subtype of TskCoreException that is thrown when there is an attempt to open or use
 a resource with an unsupported schema version.

 For example, as of Sleuthkit 4.5.0 database schema versions are two part:
 Major.Minor. This versioning schema is based on semantic versioning, but
 without using the patch number (in practice it is always the default value of
 zero). The major part is incremented for incompatible changes such as removing
 a table or column, i.e., it will not be usable by an older version of the software. A
 TskUnsupportedSchemaVersionException should be thrown from an attempt to open a
 db with an incompatible db schema.

 @see CaseDBSchemaVersionNumber for more details on db schema compatibility.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.TskUnsupportedSchemaVersionException -->
  <!-- start class org.sleuthkit.datamodel.UnsupportedContent -->
  <class name="UnsupportedContent" extends="org.sleuthkit.datamodel.AbstractContent"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="UnsupportedContent" type="org.sleuthkit.datamodel.SleuthkitCase, long"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Create an UnsupportedContent object.
 Only store the object id.

 @param db        case database handle
 @param obj_id    object id]]>
      </doc>
    </constructor>
    <method name="read" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="buf" type="byte[]"/>
      <param name="offset" type="long"/>
      <param name="len" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="close"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getSize" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="accept" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="v" type="org.sleuthkit.datamodel.ContentVisitor&lt;T&gt;"/>
    </method>
    <method name="accept" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="v" type="org.sleuthkit.datamodel.SleuthkitItemVisitor&lt;T&gt;"/>
    </method>
    <doc>
    <![CDATA[This content type is used as a default when the object type from the tsk_objects
 table is not present in the TskData.ObjectType enum. This should only come into play
 when loading case databases created by a newer version of Autopsy.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.UnsupportedContent -->
  <!-- start class org.sleuthkit.datamodel.VersionNumber -->
  <class name="VersionNumber" extends="java.lang.Object"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <implements name="java.lang.Comparable&lt;org.sleuthkit.datamodel.VersionNumber&gt;"/>
    <constructor name="VersionNumber" type="int, int, int"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </constructor>
    <method name="getMajor" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getMinor" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getPatch" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="compareTo" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="vs" type="org.sleuthkit.datamodel.VersionNumber"/>
    </method>
    <method name="hashCode" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="equals" return="boolean"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="obj" type="java.lang.Object"/>
    </method>
    <doc>
    <![CDATA[A version number consisting of three parts: Major.Minor.Patch. The compareTo
 method implements numerical ordering with decreasing precedence from left to 
 right, e.g., 1.0.0 < 2.0.0 < 2.1.0 < 2.1.1.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.VersionNumber -->
  <!-- start class org.sleuthkit.datamodel.VirtualDirectory -->
  <class name="VirtualDirectory" extends="org.sleuthkit.datamodel.SpecialDirectory"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <method name="getDataSource" return="org.sleuthkit.datamodel.Content"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[Gets the data source (e.g., image, virtual directory, etc.) for this
 directory. If the directory is itself a data source, returns the
 directory.

 @return The data source.

 @throws TskCoreException if there was an error querying the case
                          database.]]>
      </doc>
    </method>
    <method name="accept" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="visitor" type="org.sleuthkit.datamodel.ContentVisitor&lt;T&gt;"/>
      <doc>
      <![CDATA[Accepts a content visitor (Visitor design pattern).

 @param <T>     The type returned by the visitor.
 @param visitor A ContentVisitor supplying an algorithm to run using this
                virtual directory as input.

 @return The output of the algorithm.]]>
      </doc>
    </method>
    <method name="accept" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="visitor" type="org.sleuthkit.datamodel.SleuthkitItemVisitor&lt;T&gt;"/>
      <doc>
      <![CDATA[Accepts a Sleuthkit item visitor (Visitor design pattern).

 @param <T>     The type returned by the visitor.
 @param visitor A SleuthkitItemVisitor supplying an algorithm to run using
                this virtual directory as input.

 @return The output of the algorithm.]]>
      </doc>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="preserveState" type="boolean"/>
      <doc>
      <![CDATA[Provides a string representation of this virtual directory.

 @param preserveState True if state should be included in the string
                      representation of this object.
 
 @return The string representation of the virtual directory.]]>
      </doc>
    </method>
    <field name="NAME_UNALLOC" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The name given to a virtual directory that contains unallocated space
 files.]]>
      </doc>
    </field>
    <field name="NAME_CARVED" type="java.lang.String"
      transient="false" volatile="false"
      static="true" final="true" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[The name given to a virtual directory that contains carved files.]]>
      </doc>
    </field>
    <doc>
    <![CDATA[A virtual directory that can be used as a parent for unallocated space files,
 carved files, or derived files. A virtual directory can also be a data
 source, with local/logical files as its children. Not a file system
 directory.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.VirtualDirectory -->
  <!-- start class org.sleuthkit.datamodel.Volume -->
  <class name="Volume" extends="org.sleuthkit.datamodel.AbstractContent"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="Volume" type="org.sleuthkit.datamodel.SleuthkitCase, long, long, long, long, long, java.lang.String"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructor to create the data object mapped from tsk_vs_parts entry

 @param db              database object
 @param obj_id
 @param addr
 @param startSector     starting sector, relative to start of VS
 @param lengthInSectors
 @param flags
 @param desc]]>
      </doc>
    </constructor>
    <method name="read" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="buf" type="byte[]"/>
      <param name="offset" type="long"/>
      <param name="len" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="close"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="finalize"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="Throwable" type="java.lang.Throwable"/>
    </method>
    <method name="getSize" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getUniquePath" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getAddr" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[get the unique partition address within this volume system (assigned by
 The Sleuth Kit)

 @return partition address in volume system]]>
      </doc>
    </method>
    <method name="getStart" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[get the starting sector address of this volume relative to start of the
 volume system

 @return starting address]]>
      </doc>
    </method>
    <method name="getLength" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[get the length of the volume in sectors

 @return length]]>
      </doc>
    </method>
    <method name="getFlags" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[get the flags

 @return flags]]>
      </doc>
    </method>
    <method name="getFlagsAsString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[get the flags as String

 @return flags as String]]>
      </doc>
    </method>
    <method name="getDescription" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[get the description. This is set by the volume system and doesn't exist
 for all volumes.

 @return description]]>
      </doc>
    </method>
    <method name="vsFlagToValue" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="vsFlag" type="long"/>
      <doc>
      <![CDATA[Convert volume type flag to string

 @param vsFlag long flag to convert

 @return string representation]]>
      </doc>
    </method>
    <method name="valueToVsFlag" return="long"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="vsFlag" type="java.lang.String"/>
      <doc>
      <![CDATA[Convert volume flag string to long

 @param vsFlag string representation of the flag

 @return long representation of the flag]]>
      </doc>
    </method>
    <method name="vsFlagToString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="true" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="vsFlag" type="long"/>
      <doc>
      <![CDATA[Convert long representation of the flag to user readable format

 @param vsFlag long repr. of the flag

 @return user readable string representation]]>
      </doc>
    </method>
    <method name="accept" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="v" type="org.sleuthkit.datamodel.SleuthkitItemVisitor&lt;T&gt;"/>
    </method>
    <method name="accept" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="v" type="org.sleuthkit.datamodel.ContentVisitor&lt;T&gt;"/>
    </method>
    <method name="getChildren" return="java.util.List&lt;org.sleuthkit.datamodel.Content&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getChildrenIds" return="java.util.List&lt;java.lang.Long&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getFileSystems" return="java.util.List&lt;org.sleuthkit.datamodel.FileSystem&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[@return a list of FileSystem that are direct descendents of this Image.

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="preserveState" type="boolean"/>
    </method>
    <doc>
    <![CDATA[Represents a volume in a VolumeSystem, object stored in tsk_vs_parts table.
 Populated based on data in database.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.Volume -->
  <!-- start class org.sleuthkit.datamodel.VolumeSystem -->
  <class name="VolumeSystem" extends="org.sleuthkit.datamodel.AbstractContent"
    abstract="false"
    static="false" final="false" visibility="public"
    deprecated="not deprecated">
    <constructor name="VolumeSystem" type="org.sleuthkit.datamodel.SleuthkitCase, long, java.lang.String, long, long, long"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <doc>
      <![CDATA[Constructor most inputs are from the database

 @param db        case database handle
 @param obj_id    the unique content object id for the volume system
 @param name      name of the volume system
 @param type      type of the volume system
 @param imgOffset offset of the volume system with respect to image
 @param blockSize block size of this volume system]]>
      </doc>
    </constructor>
    <method name="read" return="int"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="readBuffer" type="byte[]"/>
      <param name="offset" type="long"/>
      <param name="len" type="long"/>
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getSize" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="getType" return="org.sleuthkit.datamodel.TskData.TSK_VS_TYPE_ENUM"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[get the type

 @return type]]>
      </doc>
    </method>
    <method name="getOffset" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[get the byte offset

 @return byte offset]]>
      </doc>
    </method>
    <method name="getBlockSize" return="long"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <doc>
      <![CDATA[get the block size

 @return block size]]>
      </doc>
    </method>
    <method name="getVolumeSystemHandle" return="long"
      abstract="false" native="false" synchronized="true"
      static="false" final="false" visibility="protected"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[get the volume system Handle pointer Open a new handle if needed,
 otherwise resuse the existing handle.

 @return volume system Handle pointer

 @throws TskException]]>
      </doc>
    </method>
    <method name="close"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
    </method>
    <method name="finalize"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="Throwable" type="java.lang.Throwable"/>
    </method>
    <method name="accept" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="v" type="org.sleuthkit.datamodel.SleuthkitItemVisitor&lt;T&gt;"/>
    </method>
    <method name="accept" return="T"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="v" type="org.sleuthkit.datamodel.ContentVisitor&lt;T&gt;"/>
    </method>
    <method name="getChildren" return="java.util.List&lt;org.sleuthkit.datamodel.Content&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getChildrenIds" return="java.util.List&lt;java.lang.Long&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
    </method>
    <method name="getVolumes" return="java.util.List&lt;org.sleuthkit.datamodel.Volume&gt;"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <exception name="TskCoreException" type="org.sleuthkit.datamodel.TskCoreException"/>
      <doc>
      <![CDATA[@return a list of Volumes that are direct children of this VolumeSystem

 @throws TskCoreException]]>
      </doc>
    </method>
    <method name="toString" return="java.lang.String"
      abstract="false" native="false" synchronized="false"
      static="false" final="false" visibility="public"
      deprecated="not deprecated">
      <param name="preserveState" type="boolean"/>
    </method>
    <doc>
    <![CDATA[Represents a volume system. Populated based on data in database.]]>
    </doc>
  </class>
  <!-- end class org.sleuthkit.datamodel.VolumeSystem -->
  <doc>
  <![CDATA[<p>This package represents the data that can be obtained from The Sleuth Kit (TSK).</p>
<h2><b>Object Hierarchy</b></h2>
<p>The data found in a disk image has a hierarchy to it. There is an image. It may have a volume system with one or more volumes. Each volume may have a file system in it. Each file system has one or more files. Because of this ordering, the objects are organized in a tree with parents and children. The Case being the top of the tree, images being the next layer down, etc.</p>

<p>The Content class is the interface for the Image, VolumeSystem, etc. classes. The getChildren() method of each object returns the children objects as a Content object. You can use ContentVisitor to use the visitor pattern to correctly process it.</p>

<p>In general, the type of a child is known, but there are a few cases where this is not the case. One obvious example is that the child of an Image can be either a VolumeSystem or a FileSystem. The former occurs when the image has partitions and the latter occurs if the image is just of a file system.</p>

<h2><b>Basic Usage</b></h2>

<h3><b>Case</b></h3>
<p>A case represents one or more hard drive images. The SleuthkitCase class is used to represent a case. It is directly tied to a Sqlite database. You can access the forensic data from those images from the SleuthkitCase class.  This is the first object you should make.</p>

<p>You get access to a SleuthkitCase class using either SleuthkitCase.newCase() or SleuthkitCase.openCase(). With the case object, you can add an image, get its children, or run queries against the database.</p>

<h3><b>Data Mapping</b></h3>
<p>Use TskData to map integer and enum values back to their meaning. For example, the file system type will be returned as an integer and TskData maps it to NTFS or FAT.</p>

<h3><b>JNI</b></h3>
<p>The bulk of the analysis occurs in the C/C++ code. JNI is used to run the C/C++ code from Java. The JNI methods are all located in the SleuthkitJNI java class as static methods. It returns handles that refer to data structures in the C/C++ land. You should never have to directly call these static Java methods. This class and its methods are used by the other Java data model classes.</p>

<h3>Error Handling</h3>
<p>The C/C++ code uses return codes and such for error handling.  The C/C++ JNI code turns any errors into a TskException that gets thrown into the Java code.  The Datamodel Java code will not catch these exceptions and instead they will be passed up to the other Java code that called the datamodel code. </p>]]>
  </doc>
</package>

</api>
